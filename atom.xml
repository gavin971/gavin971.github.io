<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Climate2Weather</title>
  <icon>https://www.gravatar.com/avatar/ecdc7d2d48e8378c4cde932c19852e82</icon>
  <subtitle>人生不妨大胆一点, 反正只有一次</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gavin971.github.io/"/>
  <updated>2019-08-22T11:49:14.241Z</updated>
  <id>https://gavin971.github.io/</id>
  
  <author>
    <name>Gavin</name>
    <email>zhpfu.atm@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>斯坦福大学使用机器学习做次季节温度/降水预报</title>
    <link href="https://gavin971.github.io/2019/08/22/stf-subx/"/>
    <id>https://gavin971.github.io/2019/08/22/stf-subx/</id>
    <published>2019-08-22T11:41:07.000Z</published>
    <updated>2019-08-22T11:49:14.241Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/subX-3.png" alt></p><blockquote><p><strong><font color="#0000ff">本文在『气象学家』同步推送<a href="https://mp.weixin.qq.com/s/vWePqXF-xti4RVlWTRO3Ng" target="_blank" rel="noopener">传送门</a>；美国西部地区的水资源管理极大地依赖于长期的温度和降水预报以应对干旱和其他的洪涝相关极端灾害天气。为了提升长期预报的准确性，美国垦务局和美国国家海洋和大气管理局（NOAA）发起了次季节气候预测的竞赛，长达一年的实时预报竞赛，参与者各显神通，旨在有技巧地提前预报美国西部地区2<del>4周和4</del>6周的温度和降水。在此，我们给出和评估了我们的机器学习方法，并发布了 SubseasonalRodeo数据集，用于训练和评估我们的预报系统。</font></strong></p></blockquote><a id="more"></a><blockquote><p><strong>Title</strong>：<strong><font color="#0000ff">Improving Subseasonal Forecasting in the Western U.S. with Machine Learning</font></strong></p><br>**标题**：**<font color="#0000ff">使用机器学习来改进美国西部地区的次季节预报 </font>**<br>**作者**：Jessica Hwang**<font color="#f40707"><sup>1*</sup></font>**, Paulo Orenstein**<font color="#f40707"><sup>1</sup></font>**,     Judah Cohen**<font color="#f40707"><sup>2</sup></font>**, Karl Pfeiffer**<font color="#f40707"><sup>2</sup></font>**,    Lester Mackey**<font color="#f40707"><sup>3</sup></font>**<br>**<font color="#f40707"><sup>1</sup></font>**Department of Statistics, Stanford University Stanford, California<p><strong><font color="#f40707"><sup>2</sup></font></strong>Atmospheric and Environmental Research Lexington, MA</p><p><strong><font color="#f40707"><sup>3</sup></font></strong>Microsoft Research New England Cambridge, MA</p><br>**会议**：" In Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pp. 2325-2335. ACM, 2019.<br>**DOI**： [**<font color="#0000ff">https://arxiv.org/abs/1809.07394</font>**](https://arxiv.org/abs/1809.07394)</blockquote><hr><h3 id="Poster预览-放大即可"><a href="#Poster预览-放大即可" class="headerlink" title="Poster预览(放大即可)"></a>Poster预览(放大即可)</h3><p>文章下载地址： <a href="https://arxiv.org/pdf/1809.07394.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1809.07394.pdf</a></p><p><img src="/images/forecast_rodeo_poster.png" alt></p><h3 id="SubseasonalRodeo数据集"><a href="#SubseasonalRodeo数据集" class="headerlink" title="SubseasonalRodeo数据集"></a>SubseasonalRodeo数据集</h3><p>SubseasonalRodeo数据集下载地:<a href="https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/IHBANG" target="_blank" rel="noopener">https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/IHBANG</a></p><h3 id="作者的视频报告"><a href="#作者的视频报告" class="headerlink" title="作者的视频报告"></a>作者的视频报告</h3><p>From the MIT Statistics and Data Science Conference (SDSCon) 2019. </p><p>视频地址：<a href="https://www.youtube.com/watch?v=DbTn9vUYR_c" target="_blank" rel="noopener">https://www.youtube.com/watch?v=DbTn9vUYR_c</a><br>或者去公众号观看，<a href="https://mp.weixin.qq.com/s/vWePqXF-xti4RVlWTRO3Ng" target="_blank" rel="noopener">传送门</a></p><h3 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h3><p>Water managers in the western United States (U.S.) rely on longterm forecasts of temperature and precipitation to prepare for droughts and other wet weather extremes. To improve the accuracy of these longterm forecasts, the U.S. Bureau of Reclamation and the National Oceanic and Atmospheric Administration (NOAA) launched the Subseasonal Climate Forecast Rodeo, a year-long real-time forecasting challenge in which participants aimed to skillfully predict temperature and precipitation in the western U.S. two to four weeks and four to six weeks in advance. Here we present and evaluate our machine learning approach to the Rodeo and release our SubseasonalRodeo dataset, collected to train and evaluate our forecasting system.<br>Our system is an ensemble of two regression models. The first integrates the diverse collection of meteorological measurements and dynamic model forecasts in the SubseasonalRodeo dataset and prunes irrelevant predictors using a customized multitask model selection procedure. The second uses only historical measurements of the target variable (temperature or precipitation) and introduces multitask nearest neighbor features into a weighted local linear regression. Each model alone is significantly more accurate than the debiased operational U.S. Climate Forecasting System (CFSv2), and our ensemble skill exceeds that of the top Rodeo competitor for each target variable and forecast horizon. Moreover, over 2011-2018, an ensemble of our regression models and debiased CFSv2 improves debiased CFSv2 skill by 40-50% for temperature and 129-169% for precipitation. We hope that both our dataset and our methods will help to advance the state of the art in subseasonal forecasting.</p><h3 id="原文摘要"><a href="#原文摘要" class="headerlink" title="原文摘要"></a>原文摘要</h3><p>美国西部地区的水资源管理极大地依赖于长期的温度和降水预报以应对干旱和其他的洪涝相关极端灾害天气。为了提升长期预报的准确性，美国垦务局和美国国家海洋和大气管理局（NOAA）发起了次季节气候预测的竞赛，长达一年的实时预报竞赛，参与者各显神通，旨在有技巧地提前预报美国西部地区2<del>4周和4</del>6周的温度和降水。在此，我们给出和评估了我们的机器学习方法，并发布了 SubseasonalRodeo数据集，用于训练和评估我们的预报系统。</p><p>我们的系统是两个回归模型的集合。第一个模型融合了不同的气象观测数据集合动力模式预报结果到SubseasonalRodeo数据集中，使用自定义的多任务模型选择过程删除不相关的预报因子。第二个模型仅仅使用特定变量(温度或降水)的历史测量数据，并引入多任务最邻近特征到一个加权的局地线性回归中。每个模式各自都要显著地比CFSv2(去偏差准业务化的美国气候预报系统)要更加的准确，同时我们的集合技巧就每个目标预报量和预报水平都要全面超过Rodeo竞争对手。此外，在2011-2018期间，我们的回归模型与去偏差CFSv2的集合方案要比单一的去偏差CFSv2就温度预报的技巧提升了40%-50%，降水的预报提升了 129-169% 。我们希望我们的数据集合我们的方法将能够有助于促进先进的次季节预报。</p><h3 id="图文"><a href="#图文" class="headerlink" title="图文"></a>图文</h3><p><img src="/images/subX-1.png" alt><br><img src="/images/subX-2.png" alt><br><img src="/images/subX-3.png" alt></p><p>参考：</p><p><a href="https://mp.weixin.qq.com/s/vWePqXF-xti4RVlWTRO3Ng" target="_blank" rel="noopener">链接.1</a><br><a href="https://arxiv.org/abs/1809.07394" target="_blank" rel="noopener">链接.2</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/subX-3.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;本文在『气象学家』同步推送&lt;a href=&quot;https://mp.weixin.qq.com/s/vWePqXF-xti4RVlWTRO3Ng&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;；美国西部地区的水资源管理极大地依赖于长期的温度和降水预报以应对干旱和其他的洪涝相关极端灾害天气。为了提升长期预报的准确性，美国垦务局和美国国家海洋和大气管理局（NOAA）发起了次季节气候预测的竞赛，长达一年的实时预报竞赛，参与者各显神通，旨在有技巧地提前预报美国西部地区2&lt;del&gt;4周和4&lt;/del&gt;6周的温度和降水。在此，我们给出和评估了我们的机器学习方法，并发布了 SubseasonalRodeo数据集，用于训练和评估我们的预报系统。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="文献阅读" scheme="https://gavin971.github.io/categories/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="Machine Learning" scheme="https://gavin971.github.io/tags/Machine-Learning/"/>
    
      <category term="Subseasonal" scheme="https://gavin971.github.io/tags/Subseasonal/"/>
    
      <category term="Precipitation" scheme="https://gavin971.github.io/tags/Precipitation/"/>
    
  </entry>
  
  <entry>
    <title>Python绘制气象实用地图(续)</title>
    <link href="https://gavin971.github.io/2019/08/22/mask-some-province/"/>
    <id>https://gavin971.github.io/2019/08/22/mask-some-province/</id>
    <published>2019-08-22T11:32:59.000Z</published>
    <updated>2019-08-22T11:40:33.216Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/West_China_mask.png" alt></p><blockquote><p><strong><font color="#0000ff">本文在『气象学家』同步推送<a href="https://mp.weixin.qq.com/s/YCMaa9glBc65Aaj-bUoaXg" target="_blank" rel="noopener">传送门</a>；上一期对<a href="https://mp.weixin.qq.com/s/cxom-jX-acAMJUM9PBLqQA" target="_blank" rel="noopener">Python绘制气象实用地图</a>做了比较详细的介绍，尽管已经能够满足部分需求了，但是，在实际的应用需求中，可能还是别的需求，那么，今天就手把手教大家如何绘制几个省份的白化等值线contour地图。另外，对上一期进行补充，谈谈一些小技巧。最后，对于QGIS强烈安利一波，不光它是免费的，而且跨平台，也能够完美的支持Python3.7了，能够替代大部分日常使用的ArcGIS功能，用起来不算很笨重！</font></strong></p></blockquote><a id="more"></a><p>目标：绘制西部的几个省份，并且mask掉其它区域，地图上支持中文，绘制经纬度网格线，附带经纬度信息。<br>工具：Python3.6+、ArcGIS/QGIS、Shapfile、一系列相关的Python库、测试数据</p><h2 id="第一步：制作底图"><a href="#第一步：制作底图" class="headerlink" title="第一步：制作底图"></a>第一步：制作底图</h2><p>利用单独省份的Shapefile文件，制作一个shp文件包含新疆、西藏、甘肃、青海、四川，ArcGIS操作很简单不做介绍，至于QGIS我之前基本无从下手，相关的中文资料也很少，还是Google了“how to make shapefile in qgis”得到了解决方案，具体可以参考:<a href="https://www.igismap.com/merge-two-shapefile-qgis/" target="_blank" rel="noopener">链接</a>,该帖子已经比较详细的做了介绍。只不过需要提醒一下，在“Merge Shapefiles”窗口中选中之前一同导入的各省份shp文件之后，窗口会奇怪的置底，需要移开当前界面才会发现其隐藏之处，不是闪退哦！再选定坐标系方案，最好和原来的shp文件一致。<strong>我在文末会提供相应的地图文件</strong>！</p><h2 id="第二步：如何调试程序"><a href="#第二步：如何调试程序" class="headerlink" title="第二步：如何调试程序"></a>第二步：如何调试程序</h2><h3 id="1-使用jupyter-notebook；-推荐"><a href="#1-使用jupyter-notebook；-推荐" class="headerlink" title="1.使用jupyter notebook；(推荐)"></a>1.使用jupyter notebook；(推荐)</h3><p>直接加载如下脚本，然后运行就好，代码附上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.basemap <span class="keyword">import</span> Basemap</span><br><span class="line"><span class="keyword">from</span> matplotlib.path <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">from</span> matplotlib.patches <span class="keyword">import</span> PathPatch</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> osgeo <span class="keyword">import</span> gdal</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cartopy.crs <span class="keyword">as</span> ccrs</span><br><span class="line"><span class="keyword">import</span> shapefile</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"><span class="keyword">import</span> xarray <span class="keyword">as</span> xr</span><br><span class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> FontProperties</span><br><span class="line"><span class="keyword">import</span> netCDF4 <span class="keyword">as</span> nc</span><br><span class="line"><span class="keyword">from</span> cartopy.mpl.gridliner <span class="keyword">import</span> LONGITUDE_FORMATTER, LATITUDE_FORMATTER</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">ZHfont = matplotlib.font_manager.FontProperties(fname=<span class="string">'/Users/zhpfu/Documents/fonts/SimSun.ttf'</span>)</span><br><span class="line"></span><br><span class="line">plt.rcParams.update(&#123;<span class="string">'font.size'</span>: <span class="number">20</span>&#125;)</span><br><span class="line">fig = plt.figure(figsize=[<span class="number">12</span>,<span class="number">18</span>]) </span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">basemask</span><span class="params">(cs, ax, map, shpfile)</span>:</span></span><br><span class="line"></span><br><span class="line">    sf = shapefile.Reader(shpfile)</span><br><span class="line">    vertices = []</span><br><span class="line">    codes = []</span><br><span class="line">    <span class="keyword">for</span> shape_rec <span class="keyword">in</span> sf.shapeRecords():</span><br><span class="line">        <span class="keyword">if</span> shape_rec.record[<span class="number">0</span>] &gt;= <span class="number">0</span>:  </span><br><span class="line">            pts = shape_rec.shape.points</span><br><span class="line">            prt = list(shape_rec.shape.parts) + [len(pts)]</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(prt) - <span class="number">1</span>):</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(prt[i], prt[i+<span class="number">1</span>]):</span><br><span class="line">                    vertices.append(map(pts[j][<span class="number">0</span>], pts[j][<span class="number">1</span>]))</span><br><span class="line">                codes += [Path.MOVETO]</span><br><span class="line">                codes += [Path.LINETO] * (prt[i+<span class="number">1</span>] - prt[i] <span class="number">-2</span>)</span><br><span class="line">                codes += [Path.CLOSEPOLY]</span><br><span class="line">            clip = Path(vertices, codes)</span><br><span class="line">            clip = PathPatch(clip, transform = ax.transData)    </span><br><span class="line">    <span class="keyword">for</span> contour <span class="keyword">in</span> cs.collections:</span><br><span class="line">        contour.set_clip_path(clip)    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makedegreelabel</span><span class="params">(degreelist)</span>:</span></span><br><span class="line">    labels=[str(x)+<span class="string">u'°E'</span> <span class="keyword">for</span> x <span class="keyword">in</span> degreelist]</span><br><span class="line">    <span class="keyword">return</span> labels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ds = xr.open_dataset(<span class="string">'EC-Interim_monthly_2018.nc'</span>)</span><br><span class="line">lat = ds.latitude</span><br><span class="line">lon = ds.longitude</span><br><span class="line">data = (ds[<span class="string">'t2m'</span>][<span class="number">0</span>,::<span class="number">-1</span>,:] - <span class="number">273.15</span>) <span class="comment"># 把温度转换为℃</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [west,east,south,north]</span></span><br><span class="line">m = Basemap(llcrnrlon=<span class="number">70.</span>,</span><br><span class="line">    llcrnrlat=<span class="number">25</span>,</span><br><span class="line">    urcrnrlon=<span class="number">110</span>,</span><br><span class="line">    urcrnrlat=<span class="number">50</span>,</span><br><span class="line">    resolution = <span class="keyword">None</span>, </span><br><span class="line">    projection = <span class="string">'cyl'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cbar_kwargs = &#123;</span><br><span class="line">    <span class="string">'orientation'</span>: <span class="string">'horizontal'</span>,</span><br><span class="line">    <span class="string">'label'</span>: <span class="string">'Temperature(℃)'</span>,</span><br><span class="line">    <span class="string">'ticks'</span>: np.arange(<span class="number">-30</span>,<span class="number">30</span>+<span class="number">1</span>,<span class="number">10</span>),</span><br><span class="line">    <span class="string">'pad'</span>: <span class="number">-0.35</span>,</span><br><span class="line">    <span class="string">'shrink'</span>: <span class="number">0.9</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line">levels = np.arange(<span class="number">-30</span>,<span class="number">30</span>+<span class="number">1</span>,<span class="number">1</span>) </span><br><span class="line">cs = data.plot.contourf(ax=ax,levels=levels,cbar_kwargs=cbar_kwargs, cmap=<span class="string">'Spectral_r'</span>)</span><br><span class="line"></span><br><span class="line">m.readshapefile(<span class="string">'west'</span>,<span class="string">'West'</span>,color=<span class="string">'k'</span>,linewidth=<span class="number">1.2</span>)</span><br><span class="line">basemask(cs, ax, m, <span class="string">'west'</span>) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># draw parallels and meridians.</span></span><br><span class="line"><span class="comment"># label parallels on right and top</span></span><br><span class="line"><span class="comment"># meridians on bottom and left</span></span><br><span class="line">parallels = np.arange(<span class="number">25.</span>,<span class="number">50.</span>+<span class="number">1</span>,<span class="number">5.</span>)</span><br><span class="line"><span class="comment"># labels = [left,right,top,bottom]</span></span><br><span class="line">m.drawparallels(parallels,labels=[<span class="keyword">True</span>,<span class="keyword">True</span>,<span class="keyword">True</span>,<span class="keyword">True</span>],color=<span class="string">'dimgrey'</span>,dashes=[<span class="number">2</span>, <span class="number">3</span>],fontsize= <span class="number">14</span>)  <span class="comment"># ha= 'right'</span></span><br><span class="line">meridians = np.arange(<span class="number">70.</span>,<span class="number">110.</span>+<span class="number">1</span>,<span class="number">5.</span>)</span><br><span class="line">m.drawmeridians(meridians,labels=[<span class="keyword">True</span>,<span class="keyword">True</span>,<span class="keyword">False</span>,<span class="keyword">True</span>],color=<span class="string">'dimgrey'</span>,dashes=[<span class="number">2</span>, <span class="number">3</span>],fontsize= <span class="number">14</span>)</span><br><span class="line"></span><br><span class="line">plt.ylabel(<span class="string">''</span>)    <span class="comment">#Remove the defult  lat / lon label  </span></span><br><span class="line">plt.xlabel(<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.rcParams.update(&#123;<span class="string">'font.size'</span>:<span class="number">25</span>&#125;)</span><br><span class="line">ax.set_title(<span class="string">u'中国西部地区部分省份'</span>,color=<span class="string">'blue'</span>,fontsize= <span class="number">25</span> ,fontproperties=ZHfont) <span class="comment"># 2m Temperature</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#经度：87.68 ， 纬度：43.77</span></span><br><span class="line">bill0 = <span class="number">87.68</span></span><br><span class="line">tip0  =  <span class="number">43.77</span></span><br><span class="line">plt.scatter(bill0, tip0,marker=<span class="string">'.'</span>,s=<span class="number">120</span> ,color =<span class="string">"r"</span>,zorder=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#经度：103.73 ， 纬度：36.03</span></span><br><span class="line">bill1 =  <span class="number">103.73</span></span><br><span class="line">tip1  = <span class="number">36.03</span></span><br><span class="line">plt.scatter(bill1, tip1,marker=<span class="string">'.'</span>,s=<span class="number">120</span> ,color =<span class="string">"r"</span> ,zorder=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#经度：101.74 ， 纬度：36.56</span></span><br><span class="line">bill2 =  <span class="number">101.74</span></span><br><span class="line">tip2  = <span class="number">36.56</span></span><br><span class="line">plt.scatter(bill2, tip2,marker=<span class="string">'.'</span>,s=<span class="number">120</span> ,color =<span class="string">"r"</span>,zorder=<span class="number">2</span> )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bill3 =  <span class="number">104.1</span></span><br><span class="line">tip3  = <span class="number">30.65</span></span><br><span class="line">plt.scatter(bill3, tip3,marker=<span class="string">'.'</span>,s=<span class="number">120</span> ,color =<span class="string">"r"</span>,zorder=<span class="number">2</span> )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bill4 =  <span class="number">91.11</span></span><br><span class="line">tip4  = <span class="number">29.97</span></span><br><span class="line"></span><br><span class="line">plt.scatter(bill4, tip4,marker=<span class="string">'.'</span>,s=<span class="number">120</span> ,color =<span class="string">"r"</span>,zorder=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.rcParams.update(&#123;<span class="string">'font.size'</span>:<span class="number">18</span>&#125;)</span><br><span class="line"></span><br><span class="line">plt.text(bill0<span class="number">-2.0</span>, tip0+<span class="number">0.3</span>, <span class="string">u"乌鲁木齐"</span>,fontsize= <span class="number">18</span> ,color =<span class="string">"r"</span>,fontproperties=ZHfont)</span><br><span class="line">plt.text(bill1<span class="number">-1.</span>, tip1+<span class="number">0.3</span>, <span class="string">u"兰州"</span>    ,fontsize= <span class="number">18</span> ,color =<span class="string">"r"</span>,fontproperties=ZHfont)</span><br><span class="line">plt.text(bill2<span class="number">-1.</span>, tip2+<span class="number">0.3</span>, <span class="string">u"西宁"</span>    ,fontsize= <span class="number">18</span> ,color =<span class="string">"r"</span>,fontproperties=ZHfont)</span><br><span class="line">plt.text(bill3<span class="number">-1.</span>, tip3+<span class="number">0.3</span>, <span class="string">u"成都"</span>    ,fontsize= <span class="number">18</span> ,color =<span class="string">"r"</span>,fontproperties=ZHfont)</span><br><span class="line">plt.text(bill4<span class="number">-1.</span>, tip4+<span class="number">0.3</span>, <span class="string">u"拉萨"</span>    ,fontsize= <span class="number">18</span> ,color =<span class="string">"r"</span>,fontproperties=ZHfont)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Save &amp; Show figure</span></span><br><span class="line">plt.savefig(<span class="string">"West_China_mask.png"</span>, dpi=<span class="number">300</span>, bbox_inches=<span class="string">'tight'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>出图效果：</p><p><img src="/images/West_China_mask.png" alt></p><h3 id="2-直接在终端使用python-xxx-py运行；"><a href="#2-直接在终端使用python-xxx-py运行；" class="headerlink" title="2.直接在终端使用python xxx.py运行；"></a>2.直接在终端使用python xxx.py运行；</h3><p>需要注意的地方：很多人发现输出的图片是没有经纬度的坐标信息附加在网格线两端的，怎么调都还是出不来。并且若是设置为出图显示，还会发现绘制的图怎么都挪不到最顶层。这个问题怎么解决？答案是，在脚本最顶部添加两行：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#代码头部</span><br><span class="line">import os,sys</span><br><span class="line"></span><br><span class="line">#代码尾部</span><br><span class="line">(filename, extension) = os<span class="selector-class">.path</span><span class="selector-class">.splitext</span>(os<span class="selector-class">.path</span><span class="selector-class">.basename</span>(sys<span class="selector-class">.argv</span>[<span class="number">0</span>]))</span><br><span class="line">plt.savefig(filename+<span class="string">".png"</span>, dpi=<span class="number">600</span>, bbox_inches=<span class="string">'tight'</span>)</span><br></pre></td></tr></table></figure><p>你会发现看图置顶的问题解决了，而且网格线两端也会正常出现经纬度信息。当然，jupyter notebook是不会出现这个问题的。至于什么原因大家可以去自行了解一下。还是那句话，遇到错误信息了，最值得信赖的还是Google大法，学会如何使用Google，绝对是对debug有极大好处的。<br>代码附上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">matplotlib.use(<span class="string">'TkAgg'</span>)</span><br><span class="line"><span class="keyword">import</span> os,sys</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.basemap <span class="keyword">import</span> Basemap</span><br><span class="line"><span class="keyword">from</span> matplotlib.path <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">from</span> matplotlib.patches <span class="keyword">import</span> PathPatch</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> osgeo <span class="keyword">import</span> gdal</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cartopy.crs <span class="keyword">as</span> ccrs</span><br><span class="line"><span class="keyword">import</span> shapefile</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"><span class="keyword">import</span> xarray <span class="keyword">as</span> xr</span><br><span class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> FontProperties</span><br><span class="line"><span class="keyword">import</span> netCDF4 <span class="keyword">as</span> nc</span><br><span class="line"><span class="keyword">from</span> cartopy.mpl.gridliner <span class="keyword">import</span> LONGITUDE_FORMATTER, LATITUDE_FORMATTER</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">ZHfont = matplotlib.font_manager.FontProperties(fname=<span class="string">'/Users/zhpfu/Documents/fonts/SimSun.ttf'</span>)</span><br><span class="line"></span><br><span class="line">plt.rcParams.update(&#123;<span class="string">'font.size'</span>: <span class="number">20</span>&#125;)</span><br><span class="line">fig = plt.figure(figsize=[<span class="number">12</span>,<span class="number">18</span>]) </span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">basemask</span><span class="params">(cs, ax, map, shpfile)</span>:</span></span><br><span class="line"></span><br><span class="line">    sf = shapefile.Reader(shpfile)</span><br><span class="line">    vertices = []</span><br><span class="line">    codes = []</span><br><span class="line">    <span class="keyword">for</span> shape_rec <span class="keyword">in</span> sf.shapeRecords():</span><br><span class="line">        <span class="keyword">if</span> shape_rec.record[<span class="number">0</span>] &gt;= <span class="number">0</span>:  </span><br><span class="line">            pts = shape_rec.shape.points</span><br><span class="line">            prt = list(shape_rec.shape.parts) + [len(pts)]</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(prt) - <span class="number">1</span>):</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(prt[i], prt[i+<span class="number">1</span>]):</span><br><span class="line">                    vertices.append(map(pts[j][<span class="number">0</span>], pts[j][<span class="number">1</span>]))</span><br><span class="line">                codes += [Path.MOVETO]</span><br><span class="line">                codes += [Path.LINETO] * (prt[i+<span class="number">1</span>] - prt[i] <span class="number">-2</span>)</span><br><span class="line">                codes += [Path.CLOSEPOLY]</span><br><span class="line">            clip = Path(vertices, codes)</span><br><span class="line">            clip = PathPatch(clip, transform = ax.transData)    </span><br><span class="line">    <span class="keyword">for</span> contour <span class="keyword">in</span> cs.collections:</span><br><span class="line">        contour.set_clip_path(clip)    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makedegreelabel</span><span class="params">(degreelist)</span>:</span></span><br><span class="line">    labels=[str(x)+<span class="string">u'°E'</span> <span class="keyword">for</span> x <span class="keyword">in</span> degreelist]</span><br><span class="line">    <span class="keyword">return</span> labels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ds = xr.open_dataset(<span class="string">'EC-Interim_monthly_2018.nc'</span>)</span><br><span class="line">lat = ds.latitude</span><br><span class="line">lon = ds.longitude</span><br><span class="line">data = (ds[<span class="string">'t2m'</span>][<span class="number">0</span>,::<span class="number">-1</span>,:] - <span class="number">273.15</span>) <span class="comment"># 把温度转换为℃</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [west,east,south,north]</span></span><br><span class="line">m = Basemap(llcrnrlon=<span class="number">70.</span>,</span><br><span class="line">    llcrnrlat=<span class="number">25</span>,</span><br><span class="line">    urcrnrlon=<span class="number">110</span>,</span><br><span class="line">    urcrnrlat=<span class="number">50</span>,</span><br><span class="line">    resolution = <span class="keyword">None</span>, </span><br><span class="line">    projection = <span class="string">'cyl'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cbar_kwargs = &#123;</span><br><span class="line">    <span class="string">'orientation'</span>: <span class="string">'horizontal'</span>,</span><br><span class="line">    <span class="string">'label'</span>: <span class="string">'Temperature(℃)'</span>,</span><br><span class="line">    <span class="string">'ticks'</span>: np.arange(<span class="number">-30</span>,<span class="number">30</span>+<span class="number">1</span>,<span class="number">10</span>),</span><br><span class="line">    <span class="string">'pad'</span>: <span class="number">-0.35</span>,</span><br><span class="line">    <span class="string">'shrink'</span>: <span class="number">0.9</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line">levels = np.arange(<span class="number">-30</span>,<span class="number">30</span>+<span class="number">1</span>,<span class="number">1</span>) </span><br><span class="line">cs = data.plot.contourf(ax=ax,levels=levels,cbar_kwargs=cbar_kwargs, cmap=<span class="string">'Spectral_r'</span>)</span><br><span class="line"></span><br><span class="line">m.readshapefile(<span class="string">'west'</span>,<span class="string">'West'</span>,color=<span class="string">'k'</span>,linewidth=<span class="number">1.2</span>)</span><br><span class="line">basemask(cs, ax, m, <span class="string">'west'</span>) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># draw parallels and meridians.</span></span><br><span class="line"><span class="comment"># label parallels on right and top</span></span><br><span class="line"><span class="comment"># meridians on bottom and left</span></span><br><span class="line">parallels = np.arange(<span class="number">25.</span>,<span class="number">50.</span>+<span class="number">1</span>,<span class="number">5.</span>)</span><br><span class="line"><span class="comment"># labels = [left,right,top,bottom]</span></span><br><span class="line">m.drawparallels(parallels,labels=[<span class="keyword">True</span>,<span class="keyword">True</span>,<span class="keyword">True</span>,<span class="keyword">True</span>],color=<span class="string">'dimgrey'</span>,dashes=[<span class="number">2</span>, <span class="number">3</span>],fontsize= <span class="number">14</span>)  <span class="comment"># ha= 'right'</span></span><br><span class="line">meridians = np.arange(<span class="number">70.</span>,<span class="number">110.</span>+<span class="number">1</span>,<span class="number">5.</span>)</span><br><span class="line">m.drawmeridians(meridians,labels=[<span class="keyword">True</span>,<span class="keyword">True</span>,<span class="keyword">False</span>,<span class="keyword">True</span>],color=<span class="string">'dimgrey'</span>,dashes=[<span class="number">2</span>, <span class="number">3</span>],fontsize= <span class="number">14</span>)</span><br><span class="line"></span><br><span class="line">plt.ylabel(<span class="string">''</span>)    <span class="comment">#Remove the defult  lat / lon label  </span></span><br><span class="line">plt.xlabel(<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.rcParams.update(&#123;<span class="string">'font.size'</span>:<span class="number">25</span>&#125;)</span><br><span class="line">ax.set_title(<span class="string">u'中国西部地区部分省份'</span>,color=<span class="string">'blue'</span>,fontsize= <span class="number">25</span> ,fontproperties=ZHfont) <span class="comment"># 2m Temperature</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#经度：87.68 ， 纬度：43.77</span></span><br><span class="line">bill0 = <span class="number">87.68</span></span><br><span class="line">tip0  =  <span class="number">43.77</span></span><br><span class="line">plt.scatter(bill0, tip0,marker=<span class="string">'.'</span>,s=<span class="number">120</span> ,color =<span class="string">"r"</span>,zorder=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#经度：103.73 ， 纬度：36.03</span></span><br><span class="line">bill1 =  <span class="number">103.73</span></span><br><span class="line">tip1  = <span class="number">36.03</span></span><br><span class="line">plt.scatter(bill1, tip1,marker=<span class="string">'.'</span>,s=<span class="number">120</span> ,color =<span class="string">"r"</span> ,zorder=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#经度：101.74 ， 纬度：36.56</span></span><br><span class="line">bill2 =  <span class="number">101.74</span></span><br><span class="line">tip2  = <span class="number">36.56</span></span><br><span class="line">plt.scatter(bill2, tip2,marker=<span class="string">'.'</span>,s=<span class="number">120</span> ,color =<span class="string">"r"</span>,zorder=<span class="number">2</span> )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bill3 =  <span class="number">104.1</span></span><br><span class="line">tip3  = <span class="number">30.65</span></span><br><span class="line">plt.scatter(bill3, tip3,marker=<span class="string">'.'</span>,s=<span class="number">120</span> ,color =<span class="string">"r"</span>,zorder=<span class="number">2</span> )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bill4 =  <span class="number">91.11</span></span><br><span class="line">tip4  = <span class="number">29.97</span></span><br><span class="line"></span><br><span class="line">plt.scatter(bill4, tip4,marker=<span class="string">'.'</span>,s=<span class="number">120</span> ,color =<span class="string">"r"</span>,zorder=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.rcParams.update(&#123;<span class="string">'font.size'</span>:<span class="number">18</span>&#125;)</span><br><span class="line"></span><br><span class="line">plt.text(bill0<span class="number">-2.0</span>, tip0+<span class="number">0.3</span>, <span class="string">u"乌鲁木齐"</span>,fontsize= <span class="number">18</span> ,color =<span class="string">"r"</span>,fontproperties=ZHfont)</span><br><span class="line">plt.text(bill1<span class="number">-1.</span>, tip1+<span class="number">0.3</span>, <span class="string">u"兰州"</span>    ,fontsize= <span class="number">18</span> ,color =<span class="string">"r"</span>,fontproperties=ZHfont)</span><br><span class="line">plt.text(bill2<span class="number">-1.</span>, tip2+<span class="number">0.3</span>, <span class="string">u"西宁"</span>    ,fontsize= <span class="number">18</span> ,color =<span class="string">"r"</span>,fontproperties=ZHfont)</span><br><span class="line">plt.text(bill3<span class="number">-1.</span>, tip3+<span class="number">0.3</span>, <span class="string">u"成都"</span>    ,fontsize= <span class="number">18</span> ,color =<span class="string">"r"</span>,fontproperties=ZHfont)</span><br><span class="line">plt.text(bill4<span class="number">-1.</span>, tip4+<span class="number">0.3</span>, <span class="string">u"拉萨"</span>    ,fontsize= <span class="number">18</span> ,color =<span class="string">"r"</span>,fontproperties=ZHfont)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Save &amp; Show figure</span></span><br><span class="line">(filename, extension) = os.path.splitext(os.path.basename(sys.argv[<span class="number">0</span>]))</span><br><span class="line">plt.savefig(filename+<span class="string">".png"</span>, dpi=<span class="number">600</span>, bbox_inches=<span class="string">'tight'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2 id="地图、测试数据链接"><a href="#地图、测试数据链接" class="headerlink" title="地图、测试数据链接"></a>地图、测试数据链接</h2><p><code>链接:https://pan.baidu.com/s/1cTIk6j0E0SMpZZkdIG-_tg  密码:9g31</code></p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://www.igismap.com/merge-two-shapefile-qgis/" target="_blank" rel="noopener">链接.1</a><br><a href="https://mp.weixin.qq.com/s/cxom-jX-acAMJUM9PBLqQA" target="_blank" rel="noopener">链接.2</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/West_China_mask.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;本文在『气象学家』同步推送&lt;a href=&quot;https://mp.weixin.qq.com/s/YCMaa9glBc65Aaj-bUoaXg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;；上一期对&lt;a href=&quot;https://mp.weixin.qq.com/s/cxom-jX-acAMJUM9PBLqQA&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Python绘制气象实用地图&lt;/a&gt;做了比较详细的介绍，尽管已经能够满足部分需求了，但是，在实际的应用需求中，可能还是别的需求，那么，今天就手把手教大家如何绘制几个省份的白化等值线contour地图。另外，对上一期进行补充，谈谈一些小技巧。最后，对于QGIS强烈安利一波，不光它是免费的，而且跨平台，也能够完美的支持Python3.7了，能够替代大部分日常使用的ArcGIS功能，用起来不算很笨重！&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术积累" scheme="https://gavin971.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="Python" scheme="https://gavin971.github.io/tags/Python/"/>
    
      <category term="cartopy" scheme="https://gavin971.github.io/tags/cartopy/"/>
    
      <category term="Mask" scheme="https://gavin971.github.io/tags/Mask/"/>
    
      <category term="QGIS" scheme="https://gavin971.github.io/tags/QGIS/"/>
    
      <category term="ArcGIS" scheme="https://gavin971.github.io/tags/ArcGIS/"/>
    
  </entry>
  
  <entry>
    <title>weekly20190817</title>
    <link href="https://gavin971.github.io/2019/08/10/weekly20190817/"/>
    <id>https://gavin971.github.io/2019/08/10/weekly20190817/</id>
    <published>2019-08-10T07:26:01.000Z</published>
    <updated>2019-08-22T11:31:33.220Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/" alt></p><blockquote><p><strong><font color="#0000ff">xxx</font></strong></p></blockquote><a id="more"></a><p>参考：</p><p><a href>链接.1</a><br><a href>链接.2</a><br><a href>链接.3</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;xxx&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Julia编程语言助力天气/气候模式</title>
    <link href="https://gavin971.github.io/2019/08/10/julia/"/>
    <id>https://gavin971.github.io/2019/08/10/julia/</id>
    <published>2019-08-10T07:24:41.000Z</published>
    <updated>2019-08-22T11:30:28.443Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/julia-3.jpg" alt></p><blockquote><p><strong><font color="#0000ff">本文在『气象学家』同步推送<a href="https://mp.weixin.qq.com/s/zValSm4NbDjZqGYvnShuMg" target="_blank" rel="noopener">传送门</a>；天气和气候模式中，Posits数制(基于Julia语言)成为浮点型数制的一种替代方案</font></strong></p></blockquote><a id="more"></a><blockquote><p><strong>Title</strong>：<strong><font color="#0000ff">Posits as an alternative to floats for weather and climate models</font></strong></p><br>**标题**：**<font color="#0000ff">天气和气候模式中，Posits数制(基于Julia语言)成为浮点型数制的一种替代方案</font>**<br>**作者**：Milan Klöwern**<font color="#f40707"><sup>1</sup></font>**, Tongtiegang Zhao**<font color="#f40707"><sup>2</sup></font>**,     Peter D. Düben**<font color="#f40707"><sup>2</sup></font>**, and     Tim N. Palmer**<font color="#f40707"><sup>3</sup></font>**<br>**<font color="#f40707"><sup>1</sup></font>**    Atmospheric, Oceanic and Planetary Physics, University of Oxford, Oxford, UK<p><strong><font color="#f40707"><sup>2</sup></font></strong>European Centre for Medium-Range, Weather Forecasts, Reading, UK</p><p><strong><font color="#f40707"><sup>3</sup></font></strong>Atmospheric, Oceanic and Planetary Physics, University of Oxford, Oxford, UK</p><br>**会议**：Proceedings of the Conference for Next Generation Arithmetic 2019. ACM,    2019: 2 <br>**DOI**： [**<font color="#0000ff">https://doi.org/10.1145/3316279.3316281</font>**](https://doi.org/10.1145/3316279.3316281)</blockquote><hr><h3 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h3><p><font face="Calibri" color="#0727f7" size="3">Posit numbers, a recently proposed alternative to floating-point numbers, claim to have smaller arithmetic rounding errors in many applications. By studying weather and climate models of low and medium complexity (the Lorenz system and a shallow water model) we present benefits of posits compared to floats at 16 bit. As a standardised posit processor does not exist yet, we emulate posit arithmetic on a conventional CPU. Using a shallow water model, forecasts based on 16-bit posits with 1 or 2 exponent bits are clearly more accurate than half precision floats. We therefore propose 16 bit with 2 exponent bits as a standard posit format, as its wide dynamic range of 32 orders of magnitude provides a great potential for many weather and climate models. Although the focus is on geophysical fluid simulations, the results are also meaningful and promising for reduced precision posit arithmetic in the wider field of computational fluid dynamics.</font></p><hr><h3 id="原文摘要"><a href="#原文摘要" class="headerlink" title="原文摘要"></a>原文摘要</h3><p><font face="Calibri" color="#131316" size="3">Posit数制号称在许多领域的应用中具有更小的算术舍入误差，成为了替代浮点数制的一种方案。通过研究天气和气候领域中低复杂度的模式，譬如，Lorenz系统和浅水模型，相比于传统的float16数制能够取得良好的效果。尽管一款标准化的数制处理器并不存在，但是我们可以利用传统的CPU来模拟数制算法。基于1或2指数位的Posit16数制在进行浅水模型模拟的时候，明显要比半精度浮点型数制更高的精度。我们因此推荐使用具有2指数位的16位作为标准的Posit格式，其32个数量级的宽动态范围为天气和气候模式提供了巨大的潜力。虽然主要集中于地球物理流体的模拟，但研究结果也表明对于在计算流体力学的广阔领域中应用精度较低的Posit数制具有重要的意义和应用前景。</font></p><hr><h3 id="图文"><a href="#图文" class="headerlink" title="图文"></a>图文</h3><p><img src="/images/julia-1.jpg" alt><br><img src="/images/julia-2.jpg" alt><br><img src="/images/julia-3.jpg" alt><br><img src="/images/julia-4.jpg" alt><br><img src="/images/julia-5.jpg" alt></p><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><p><a href="https://www.youtube.com/watch?v=wp7AYMWlPLw" target="_blank" rel="noopener">https://www.youtube.com/watch?v=wp7AYMWlPLw</a></p><h3 id="Julia背景信息"><a href="#Julia背景信息" class="headerlink" title="Julia背景信息"></a>Julia背景信息</h3><p>在2018年8月8日，MIT正式发布编程语言Julia 1.0,号称：Python、R、C++三合一。据 Julia Computing 的宣传，在七项基础算法的测试中，Julia 比 Python 快 20 倍，比 R 快 100 倍，比 Matlab 快 93 倍。</p><ul><li>Julia 语言的官网：<a href="https://julialang.org/" target="_blank" rel="noopener">https://julialang.org/</a></li><li>Julia中文社区：<a href="https://cn.julialang.org/" target="_blank" rel="noopener">https://cn.julialang.org/</a></li><li>Julia 语言项目地址：<a href="https://github.com/JuliaLang" target="_blank" rel="noopener">https://github.com/JuliaLang</a></li></ul><p>MIT 开发的 Julia 语言是全球热度上升最快的编程语言之一，下载量超过 200 万次，下载者包括谷歌、Facebook、FAA 和美国能源部等各个部门的开发者。近日，MIT CSAIL 实验室正式发布了 Julia 1.0，该语言期望结合 C 的速度、Matlab 的数学表征、Python 的通用编程与 Shell 的胶水命令行，并构建开源、自由与便捷的编程语言。具有以下特点：</p><ul><li>快速：Julia 为高性能而生。Julia 程序通过 LLVM 为多个平台编译高效的本地代码。</li><li>通用：它使用多分派作为范例，使得表达许多面向对象和函数式的编程模式变得容易。标准库提供异步 I/O、进程控制、日志记录、性能分析、包管理器等。</li><li>动态：Julia 是动态型语言，与脚本语言类似，并且支持交互式使用。</li><li>专业：它擅长数值计算，其语法适用于数学，支持多种数值数据类型，并具有良好并行性。Julia 的多分派天生适合定义数字和类数组的数据类型。</li><li>多样：Julia 拥有丰富的描述性数据类型，类型声明使程序条理清晰且稳定。</li><li>可组合：Julia 的包可以很好地组合在一起。单位数量的矩阵，或者货币和颜色的数据列表，都可以组合——而且性能很好。</li></ul><p>参考：</p><p><a href="https://www.youtube.com/watch?v=wp7AYMWlPLw" target="_blank" rel="noopener">链接.1</a><br>[链接.2](Klöwer M, Düben P D, Palmer T N. Posits as an alternative to floats for weather and climate models[C]//Proceedings of the Conference for Next Generation Arithmetic 2019. ACM, 2019: 2.)<br><a href="https://web.stanford.edu/class/ee380/Abstracts/170201-slides.pdf" target="_blank" rel="noopener">链接.3</a><br><a href="https://www.cl.cam.ac.uk/research/srg/han/hprls/orangepath/kiwic-demos/kiwi-posit-unum-and-custom-arithmetics/posits-gustafson-137-897-1-PB.pdf" target="_blank" rel="noopener">链接.4</a><br><a href="https://www.oschina.net/news/98846/julia-1-0-released" target="_blank" rel="noopener">链接.5</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/julia-3.jpg&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;本文在『气象学家』同步推送&lt;a href=&quot;https://mp.weixin.qq.com/s/zValSm4NbDjZqGYvnShuMg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;；天气和气候模式中，Posits数制(基于Julia语言)成为浮点型数制的一种替代方案&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="气象编程" scheme="https://gavin971.github.io/categories/%E6%B0%94%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Julia" scheme="https://gavin971.github.io/tags/Julia/"/>
    
      <category term="Posits" scheme="https://gavin971.github.io/tags/Posits/"/>
    
      <category term="climate model" scheme="https://gavin971.github.io/tags/climate-model/"/>
    
  </entry>
  
  <entry>
    <title>Nature(2019)-地球系统科学领域的深度学习及其理解</title>
    <link href="https://gavin971.github.io/2019/08/10/nature2019/"/>
    <id>https://gavin971.github.io/2019/08/10/nature2019/</id>
    <published>2019-08-10T07:24:32.000Z</published>
    <updated>2019-08-22T11:30:28.446Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/EA-1.png" alt></p><blockquote><p><strong><font color="#0000ff">本文在『气象学家』同步推送<a href="https://mp.weixin.qq.com/s/4V4jj4LWmf0uSwNSluGnTg" target="_blank" rel="noopener">传送门</a>；机器学习方法越来越多地用于日益增长的地理空间数据流中提取相应的模型特征和深入特点，但是目前的方法在系统行为受制于时空背景时还不能得到最优的方案。在这里，主要目的并不是改进经典的机器学习算法，我们主张这些背景线索应该成为深度学习一部分（一种可以自动提取时空特征的方法）来更深地获取地球科学领域难题的过程理解，提升季节预报或者多时间尺度长距空间相关模拟的可预报能力，譬如，下一步将建立混合模型方法，将物理过程模式与数据驱动型机器学习的通用性耦合起来。</font></strong></p></blockquote><a id="more"></a><blockquote><p><strong>Title</strong>：<strong><font color="#0000ff">Deep learning and process understanding for data-driven Earth system science</font></strong></p><br>**标题**：**<font color="#0000ff">"数据驱动型"地球系统科学领域的深度学习及其过程理解 </font>**<br>**作者**：Markus reichstein**<font color="#f40707"><sup>1,2*</sup></font>**, Gustau camps-valls**<font color="#f40707"><sup>3</sup></font>**,     Bjorn stevens**<font color="#f40707"><sup>4</sup></font>**, Martin Jung**<font color="#f40707"><sup>1</sup></font>**,    Joachim Denzler**<font color="#f40707"><sup>2,5</sup></font>**,   Nuno carvalhais**<font color="#f40707"><sup>1,6</sup></font>**,   and Prabhat**<font color="#f40707"><sup>7</sup></font>**<br>**<font color="#f40707"><sup>1</sup></font>**    Department of Biogeochemical Integration, Max Planck Institute for Biogeochemistry, Jena, Germany.<p><strong><font color="#f40707"><sup>2</sup></font></strong>Michael-Stifel-Center Jena for Data-driven and Simulation Science, Jena, Germany.</p><p><strong><font color="#f40707"><sup>3</sup></font></strong>Image Processing Laboratory (IPL), University of València, Valencia, Spain.</p><p><strong><font color="#f40707"><sup>4</sup></font></strong>Max Planck Institute for Meteorology, Hamburg, Germany. </p><p><strong><font color="#f40707"><sup>5</sup></font></strong>Computer Vision Group, Computer Science, Friedrich Schiller University, Jena, Germany.</p><p><strong><font color="#f40707"><sup>6</sup></font></strong>CENSE, Departamento de Ciências e Engenharia do Ambiente, Faculdade de Ciências e Tecnologia, Universidade NOVA de Lisboa, Lisbon, Portugal.</p><p><strong><font color="#f40707"><sup>7</sup></font></strong>National Energy Research Supercomputing Center, Lawrence Berkeley National Laboratory, Berkeley, CA, USA.</p><p><strong><font color="#f40707"><sup></sup></font></strong> E-mail: <a href="mailto:mreichstein@bgc-jena.mpg.de" target="_blank" rel="noopener">mreichstein@bgc-jena.mpg.de</a></p><br>**杂志**：Nature，volume 566, pages195–204 (2019) <br>**DOI**： [**<font color="#0000ff">https://doi.org/10.1038/s41586-019-0912-1</font>**](https://doi.org/10.1038/s41586-019-0912-1)</blockquote><hr><h3 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h3><p>Machine learning approaches are increasingly used to extract patterns and insights from the ever-increasing stream of geospatial data, but current approaches may not be optimal when system behaviour is dominated by spatial or temporal context. Here, rather than amending classical machine learning, we argue that these contextual cues should be used as part of deep learning (an approach that is able to extract spatio-temporal features automatically) to gain further process understanding of Earth system science problems, improving the predictive ability of seasonal forecasting and modelling of long-range spatial connections across multiple timescales, for example. The next step will be a hybrid modelling approach, coupling physical process models with the versatility of data-driven machine learning.</p><h3 id="原文摘要"><a href="#原文摘要" class="headerlink" title="原文摘要"></a>原文摘要</h3><p>机器学习方法越来越多地用于日益增长的地理空间数据流中提取相应的模型特征和深入特点，但是目前的方法在系统行为受制于时空背景时还不能得到最优的方案。在这里，主要目的并不是改进经典的机器学习算法，我们主张这些背景线索应该成为深度学习一部分（一种可以自动提取时空特征的方法）来更深地获取地球科学领域难题的过程理解，提升季节预报或者多时间尺度长距空间相关模拟的可预报能力，譬如，下一步将建立混合模型方法，将物理过程模式与数据驱动型机器学习的通用性耦合起来。</p><h3 id="背景信息"><a href="#背景信息" class="headerlink" title="背景信息"></a>背景信息</h3><p>人类总是致力于预测和理解这个世界，能够进行更好预测的能力在不同的领域都有很大的竞争优势（譬如，天气、疾病、金融市场）。人类从过去古希腊时代哲学推理到中世纪占卜的伪科学方法，到现代科学论述包括假设检验、理论发展和计算机建模，这些都是以统计和物理关系，即相关定律为基础的。天气预报的成功是地球科学领域的一段佳话，主要依赖于理论的完善、现代的一整套观测系统、日益增长的计算能力，使得海量的数据能够同化到数值模式中来。即便如此，对于天气的准确预报也只停留在天的尺度，还达不到精准预测月尺度。季节预测以及一些极端事件（譬如，洪水、火灾）和一些更长时间尺度的预测还是面临着巨大的挑战。</p><p>与此同时，地球系统数据在激增，CMIP5数据集是广泛用于周期性气候评估的科学基础，模式输出的数据总量超过3PB，【1PB = 1,000 TB (兆) = 1,000,000 GB (十亿)】， 而下一代CMIP6数据总量超过30PB。巨大的数据量在处理起来充满了挑战，其统计特性里包含了大量的不确定性。地球科学领域海量的数据也具备大数据四大特征：volume, velocity, variety and veracity（体积，速度，多样性和准确性），例如各种遥感、定点观测、模式数据。如今面临挑战就是如何从这些大数据中提取并解读信息，因为信息收集速度远大于人们所能消化的速度。数据的增多并未带对系统预测能力的提高，科学家需要对数据进行理解。在这种背景下，机器学习就是一种极佳的选择。</p><p>日益丰富的工具用于机器学习和AI，但是他们还需要进一步完善才能用于地球科学的分析，地球系统科学面临新的机遇与挑战，以及新型方法的需求，特别是特别是近年来对时空背景和不确定性的研究。</p><p>那么对于地球科学领域的科学家在未来面临的不可回避问题就是：<strong>1.提取海量激增数据中的有用信息；2.遵循相关的物理定律前提下，相比于传统的同化方法能够从数值模式中获取更多有效特征。</strong></p><p>文章主要综述内容就是介绍地球科学领域的机器学习方法的发展，尤其是深度学习的——自动提取抽象的时空特征，其具有非常大的潜力来克服当前诸多阻碍机器学习广泛应用的局限性。本文罗列了当前最具有前景，且与物理模型结合具有挑战的机器学习方法。</p><h3 id="主体内容"><a href="#主体内容" class="headerlink" title="主体内容"></a>主体内容</h3><p>（1）<strong>地学中最先进的机器学习。</strong>诸如神经网络、随机森林方法很早就应用于地学中的分类、变化检测、土壤制图问题。但这些应用是针对空间，在时间上是相对静态的，但地球是不断变化的。机器学习回归方法在时间动态上具有优势，比如具有隐含层的人工神经网络，可预测碳通量在时间与空间上的变化。但这些应用也存在一些问题需要注意，比如外推能力，抽样或数据偏见，忽视混杂因素，统计关联与因果关系等。经典的机器学习方法需要一些先验知识确定一些时空相关feature，而不能自动探索数据的时空特征。一些时空动态特征比如“记忆效应”可以作为feature手动加入到传统机器学习中，但最新的深度学习已经没有这些限制。<br>（2）<strong>深度学习在地球系统科学中的机遇。</strong>深度学习已在其他领域得到了众多应用，但在地学中的应用还处于初级阶段。已有一些研究显示深度学习可以很好的提取时空特征，比如极端天气，而不需要很多人类干预。这也可用于城市变化的遥感自动提取。深度学习方法通常被划分为空间学习（例如，用于对象分类的卷积神经网络）和序列学习（例如，语音识别），但两者逐渐融合，可应用视频与动作识别问题。这些问题类似于地学中随时间变化的多维度结构，例如有序降水对流与植被状态。虽然有很大应用前景，但应用于时空变化的大气海洋传输或植被动态还有待发展。<br>（3）<strong>深度学习在地球系统科学中的挑战。</strong>虽然传统深度学习的应用对象与地学现象有很大相似性，但也存在重要区别。比如高光谱、多波段就比基于三原色RGB的计算机图像识别复杂很多，此外还有带噪音、有缺测的卫星数据。另外，波段、时间与空间维度的集合也会带来计算量的挑战。计算机图片中识别可大量“狗”，“猫”现成训练样本，而地学中没有类似被标记的大量训练样本，如干旱。对外，作者总结出五大挑战，分别来自可解释性、物理一致性、数据的复杂与确定性、缺少标记样本、以及计算需求。若这些挑战能解决，那么深度学习将对地学带来巨大改变。近期最有前景的应用是”临近预报“(nowcasting)，未来是长期预测。作者认为深度学习将很快成为地学中分类与时空预测问题的主要方法。<br>（4） <strong>与物理建模集成。</strong>物理建模（理论驱动）与机器学习建模（数据驱动）过去往往被认为是两个领域，具有不同范式。但其实两种方法可以相互补充的，前者外推能力强，后者更灵活可发现新规律。作者提出二种方法可结合的几个潜在点：改善参数化、用机器学习“替代”物理模型中子模块、模型与观测的不匹配分析，约束子模型、代替模型或仿真。<br>（5）<strong>推动科学发展。</strong>机器学习方法无疑给分类和预测问题带来大幅提高。机器学习的数据驱动方法还可从数据中挖掘出过去不知道的新信息，从而推动新机制新认识的产生。<br>（6）<strong>文章结语。</strong>地球科学大数据时代机器学习很有用，但也存在应用挑战，作者对此提出四点建议：识别数据的特殊性、推论的合理性和可解释性、不确定性估计、针对复杂物理模式进行验证。未来过程模型与机器学习将进一步结合。数据驱动的机器学习不会替代物理模型，但是会起到补充和丰富的作用，最终实现混合建模。<br> (以上六点总结引自李老师，<a href="https://mp.weixin.qq.com/s/uL4C3birbbFQ-UhntuTgRg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/uL4C3birbbFQ-UhntuTgRg</a>)</p><h3 id="图文"><a href="#图文" class="headerlink" title="图文"></a>图文</h3><p> 名词解释<br><img src="/images/EA-0.jpeg" alt></p><p> 图. 1 地球科学背景下面临的大数据挑战</p><p><img src="/images/EA-1.png" alt></p><p>Data size now exceeds 100 petabytes, and is growing quasi-exponentially (tapering of the figure to the right indicates decreasing data size.) The speed of change exceeds 5 petabytes a year; data are taken at frequencies of up to 10 Hz or more; reprocessing and versioning are common challenges. Data sources can be one- to four-dimensional, spatially integrated, from the organ level (such as leaves) to the global level. Earth has diverse observational systems, from remote sensing to in situ observation. The uncertainty of data can stem from observational errors or conceptual inconsistencies.</p><p>Fig. 2: 左边是四个深度学习典型的应用情景，右边是可用于对应的地球科学问题</p><p><img src="/images/EA-2.png" alt></p><p>a, Object recognition in images links to classification of extreme weather patterns using a unified convolutional neural network on climate simulation data41. b, Super-resolution applications relate to statistical downscaling of climate model output72. c, Video prediction is similar to short-term forecasting of Earth system variables. Right image, courtesy of Sujan Koirala and Paul Bodesheim, Max Planck Institute for Biogeochemistry. d, Language translation links to modelling of dynamic time series (ref. 96 and figure 11 in ref. 97). Left image, courtesy of Stephen Merity (figure 1 in <a href="https://smerity.com/articles/2016/google_nmt_arch.html" target="_blank" rel="noopener">https://smerity.com/articles/2016/google_nmt_arch.html</a>).</p><p>Fig. 3: 数值物理模型和机器学习的联系<br><img src="/images/EA-3.png" alt><br>An abstraction of a part of a physical system—for example, an Earth system model—is depicted here. The model consists of submodels; each submodel has parameters and forcing variables as inputs and produces output, which can be input (forcing) to another sub-model. Data-driven learning approaches can be helpful in various instances, as indicated by the circled numbers. For example, the circle labelled 2 represents hybrid modelling. See the text for more detail. ML, machine learning.</p><p>Fig. 4: 将混合模型建立解释为在添加一个或多个物理层的多层神经网络，使模型在物理上更加真实，从而深化深度学习体系结构。<br><img src="/images/EA-4.png" alt><br>a, The multilayer neural network, with n the number of neural layers and m the number of physical layers. b and c are concrete examples of hybrid modelling (circle 2 in Fig. 3). b, Prediction of sea-surface temperatures, where a motion field of the water is learned with a convolutional–deconvolutional neural network, and the motion field is further processed with a physical model to predict future states. Adapted from figure 1 of de Bezenac et al.68. c, A biological regulation process (opening of the stomatal ‘valves’ controlling water vapour flux from the leaves) is modelled with a recurrent neural network. Then a physical diffusion model is used to estimate transpiration, which in turn influences some of the drivers, such as soil moisture. The basic scheme in a is inspired by figure 1.5 in Goodfellow et al.98 and redrawn.</p><h3 id="人工智能、深度学习、机器学习区别"><a href="#人工智能、深度学习、机器学习区别" class="headerlink" title="人工智能、深度学习、机器学习区别"></a>人工智能、深度学习、机器学习区别</h3><p>人工智能(AI)是一个总括合集概念，涵盖从最早的逻辑结构的有效老式人工智能 (Good Old-Fashioned Artificial Intelligence，简称GOFAI)，到最新的联结结构的深度学习(DL)。</p><p>机器学习(ML)是 人工智能(AI)的子集，涵盖一切有关数据训练的学习算法研究，包括多年来发展的一整套成熟技术，比如：</p><p>线性回归（Linear Regression，数理统计中回归分析方法）；<br>K均值（K-means，基于原型的目标函数聚类方法）；<br>决策树（Decision Trees，直观运用概率分析的一种图解法）；<br>随机森林（Random Forest，包含多个决策树的分类器）；<br>PCA（Principal Component Analysis，主成分分析，一种多变量分析方法）；<br>SVM（Support Vector Machine，支持向量机，一种监督式学习的方法）；<br>ANN（Artificial Neural Networks，人工神经网络，一种运算模型）。<br>深度学习(DL)则起源于人工神经网络(ANN)。</p><p>人工神经网络(ANN)是60年代早期发明的技术，一些机器学习(ML)从业者曾接触过，他们对深度学习(DL)的第一印象可能是：这不过是多层结构的人工神经网络(ANN)而已。此外，深度学习(DL)的成功主要是基于大量可用的数据以及更强大的计算引擎比如 GPU（Graphic Processing Units）的出现。这当然是真的，深度学习(DL)的出现基本上是受益于大数据及计算能力的发展，然而，由此得出深度学习(DL)只是一个比支持向量机(SVM)或决策树更好的算法的结论，类似于只见树木，不见森林。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>建议：这篇综述文章值得反复阅读，适当把相关参考引用文献挑选一部分阅读，去了解相关机器学习/深度学习专业名词。并思考两三个问题：</p><p>1.自己研究的领域有哪些部分是具备海量数据？<br>2.用深度学习是否能够应用，并在以往传统基础上去改进？<br>3.用深度学习的办法来解决新旧问题，需要搭建怎样的软硬件框架？</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://doi.org/10.1038/s41586-019-0912-1" target="_blank" rel="noopener">链接.1</a><br><a href="https://mp.weixin.qq.com/s/uL4C3birbbFQ-UhntuTgRg" target="_blank" rel="noopener">链接.2</a><br><a href="https://www.zhinengl.com/2017/01/deep-learning-different-from-machine-learning/" target="_blank" rel="noopener">链接.3</a></p><h3 id="文末彩蛋"><a href="#文末彩蛋" class="headerlink" title="文末彩蛋"></a>文末彩蛋</h3><p>1.文章PDF原文获取（回复：“geo_ml”）<br>2.相关的书籍获取（回复：“books_ml”PDF图书资源源自网络，侵删！）</p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/EA-1.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;本文在『气象学家』同步推送&lt;a href=&quot;https://mp.weixin.qq.com/s/4V4jj4LWmf0uSwNSluGnTg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;；机器学习方法越来越多地用于日益增长的地理空间数据流中提取相应的模型特征和深入特点，但是目前的方法在系统行为受制于时空背景时还不能得到最优的方案。在这里，主要目的并不是改进经典的机器学习算法，我们主张这些背景线索应该成为深度学习一部分（一种可以自动提取时空特征的方法）来更深地获取地球科学领域难题的过程理解，提升季节预报或者多时间尺度长距空间相关模拟的可预报能力，譬如，下一步将建立混合模型方法，将物理过程模式与数据驱动型机器学习的通用性耦合起来。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="文献阅读" scheme="https://gavin971.github.io/categories/%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="Deep Learning" scheme="https://gavin971.github.io/tags/Deep-Learning/"/>
    
      <category term="Machine Learning" scheme="https://gavin971.github.io/tags/Machine-Learning/"/>
    
      <category term="Nature" scheme="https://gavin971.github.io/tags/Nature/"/>
    
      <category term="Earth Science" scheme="https://gavin971.github.io/tags/Earth-Science/"/>
    
  </entry>
  
  <entry>
    <title>交叉新趋势|采用神经网络与深度学习来预报降水、温度等案例(附代码/数据/文献)</title>
    <link href="https://gavin971.github.io/2019/08/10/deepL/"/>
    <id>https://gavin971.github.io/2019/08/10/deepL/</id>
    <published>2019-08-10T07:24:18.000Z</published>
    <updated>2019-08-22T11:30:28.438Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/6233878-85081aea22301be3.png" alt></p><blockquote><p><strong><font color="#0000ff">排版麻烦，建议去公众号阅读，本文在『气象学家』同步推送<a href="https://mp.weixin.qq.com/s/_sQ1H9BT0n6GtmjeVk8hbw" target="_blank" rel="noopener">传送门</a>；随着人工智能的发展，拥有了越来越丰富的应用场景，气象行业也不例外，在突破传统预报方法的情况下，神经网络与深度学习来预报气象要素也取得了不错的效果，下面就给出一些比较典型的开源案例，条件允许不妨按图索骥实践一下，代码、数据、文献都给各位客官老爷一一奉上，也欢迎大家在圈内转载和分享！</font></strong></p></blockquote><a id="more"></a><h3 id="前言介绍"><a href="#前言介绍" class="headerlink" title="前言介绍"></a>前言介绍</h3><p>本文所有的案例都是整理于互联网中，本文会提供相应的开源代码链接、数据集、相关论文。部分数据集可能需要申请才能获取。另外，就新旧方法的效果好坏也不是立马就能高下立判，但是无论是科研需求还是业务实践中去突破传统思维，用好新方法来解决旧问题都是非常值得一试的。其实，也无需先入为主地认为新方法效果就一定好，而传统方案就是一定是更差的，关键还在于应用技巧及方法的适用性。</p><h3 id="典型案例"><a href="#典型案例" class="headerlink" title="典型案例"></a>典型案例</h3><h4 id="雷达回波外推和施行健的两篇降水预测文章介绍"><a href="#雷达回波外推和施行健的两篇降水预测文章介绍" class="headerlink" title="雷达回波外推和施行健的两篇降水预测文章介绍"></a>雷达回波外推和施行健的两篇降水预测文章介绍</h4><p>施行健，香港科技大学四年级博士，师从杨瓞仁教授。现于Amazon AWS Deep Learning组实习，岗位为应用科学家。他的主要研究方向为深度学习，时空序列分析和计算机视觉。<br>他是apache/mxnet的开发成员，同时是DMLC协会会员。</p><p>雷达回波外推是一个还算处女的方向，本质上来说这就是一个视频序列预测视频序列的问题，比如这里的使用已知的 5 帧预测未来的 20 帧雷达回波序列(通常每6分钟采集一次)。所以这个问题是可以使用现有的一些处理视频的方法来解决的，例如 RNN 和 Conv3D 等能处理时空信息的结构。</p><p>目前这个领域中文的一些资料很少有人介绍和总结。在这里Hzzone会介绍雷达回波外推这个问题、HKO-7数据集以及施行健的两篇 nips 文章，分别是 ConvLSTM 和 TrajGRU。</p><p>Hzzone用 pytorch 实现了这两篇文章，并在 HKO-7数据集上取得了和施行健近似的结果。原始代码在HKO-7，使用 mxnet 实现，其中有 ConvGRU和TrajGRU，没有ConvLSTM。作者的代码实现了整个数据加载、训练和测试流程，封装的也非常好，Hzzone在实现时也使用了一部分施行健的代码，Hzzone认为自己的实现要更容易理解一些。</p><p>代码挂在了 Github。如果你觉得这篇文章或代码对你有一定帮助，欢迎点赞这篇文章或 star 这个 repo。</p><p>在开始之前，可以通过 Machine Learning for Spatiotemporal Sequence Forecasting and Its Application to Nowcasting 和 香港科技大学施行健：深度学习用于短临降雨预报的一个基准和一个新模型 | 分享总结 对雷达回波外推问题有一个比较清晰的认识。</p><p><strong>数据集</strong><br>HKO-7 Dataset<br>雷达回波数据主要是通过天气雷达往四周发射电磁波并通过云层的反射得到，国内用的大多是多普勒雷达，下面是雷达的扫描示意图，天气雷达的覆盖区域是一个圆形区域：</p><p>因为是通过反射得到的，所以雷达一般部署在空旷地区。如果四周出现了如建筑物、灰尘等物体，会在雷达回波中出现明显的噪声，使模型难以收敛。</p><p>现在能找到的开源数据集主要有三个，其中两个来自于天池比赛，分别是 Tianchi CIKM AnalytiCup 2017 和 Tianchi IEEE ICDM 2018 全球气象AI挑战赛。这两个比赛最终目的不相同，但是数据集的含义是一样的，降水量等价于雷达反射的 dBZ。这两个比赛一些分享的经验，有一定参考意义，最主要的是 Tianchi IEEE ICDM 2018 全球气象AI挑战赛 这个比赛的主题才是雷达回波外推，但是没有找到开源的比较好的解决方案。</p><p>如果希望使用到私有的数据集可以向本地的气象台询问，或者在 中国气象数据网 下载多普勒雷达基数据。后者我尝试过实名注册，个人用户每日限额 2M，想真正用是不可能的，只能采用前面介绍的方法，或者注册企业单位（可能收费）。</p><p>最后则是 HKO-7 Dataset，这个数据集是施行健在 Deep Learning for Precipitation Nowcasting: A Benchmark and A New Model 针对雷达回波外推这个领域没有统一的 benchmark 而提出的一个数据集，来源于香港天文台。因为不开放所以需要申请，填张表就 OK，学生的话要找导师去申请，然后用工作邮箱发过去。</p><p>这个数据集覆盖了香港周边的雷达回波数据，图片大小是  的灰度图，涵盖了 2009 到 2015 的 下雨天 的数据，812 天用于训练、50 天用于验证、131 天用于测试。更详细信息可以去阅读论文。</p><p>首先数据集的转换关系是这样的：dBZ 是雷达的基本反射率（雷达扫出来的结果），然后通过  并裁剪到  之间转换成普通的 png 图片。这种转换对于最后的训练和测试没有多大的影响，只是个线性转换，在深度学习中这个范围才是更常见也更容易解决问题的。</p><p>最后还有一种转换关系则是通过 Z-R 关系在 dBZ 和降水值 R（单位是 mm/h）之间转换：，， 通过线性回归计算。</p><p>作者统计了全部数据集的降水值分布：</p><p>由于降水值分布不均匀，并且大雨对现实生活的影响更大，所以 使用了一个加权损失函数 进行训练（这篇文章采用的是 MSE 和 MAE 之和）。</p><p>在数据预处理上，除了以上介绍的，由于原始雷达回波数据还存在大量噪声，作者采用马氏距离去除噪声点，得到一个 mask 之后，只有正常数据才会参与训练和评估。因此整个数据集分成了原始 png 和对应的 mask 两个部分。</p><p>具体过程是：计算每一张图片的均值  和协方差矩阵 ，然后计算出马氏距离：<br>去除掉马氏距离大于  和像素值在  之间的数据，最后得到一个掩膜就是正常的数据。第一步是为了去除一些离散点，因为存在噪声；第二步则是去除雷达监测范围以外的区域，因为雷达扫描区域是一个圆形的。最后的效果则是：</p><p>作者采用的是用 5 帧预测未来的 20 帧。在训练的时候计算量非常大，我在实现过程中一颗 1070 的 batch_size 只能为 2，迭代 100000 次需要三天。由于这个数据量是完全足够的，所以不需要什么数据扩充，只做了一个归一化到 1 以内。</p><p>我采用的是作者实现的数据加载的代码，训练时从数据集随机抽取连续的 25 帧（已知 5 帧，预测 20 帧），而评估时则是按 5 的窗口进行滑动，直到结束。这种方式在实际用的时候最好还是上多显卡进行训练，并且加载数据时采用 prefetcher 提前加载数据集，否则在训练的时候大部分时间都会用在数据加载上，浪费很多时间。关于如何加速训练可以参考 如何给你PyTorch里的Dataloader打鸡血。</p><p>雷达回波外推的评价标准主要使用 HSS、CSI、POD 等指标，参考 评价标准，这几个指标和机器学习中的 precision 和 recall 类似，越高越好。其他的还有 MSE、MAE，施行健采用的 B-MSE 和 B-MAE 其实就是加权的 MSE、MAE，这两个指标越低越好。</p><p>ConvLSTM<br>ConvLSTM 来源于 Convolutional LSTM Network: A Machine Learning Approach for Precipitation Nowcasting。</p><p>传统的 FC-LSTM 将数据展开成一维进行预测，雷达回波数据存在大量冗余信息，FC-LSTM 无法处理，而且 FC-LSTM 只能提取时间序列信息，无法提取空间信息。</p><p>ConvLSTM 使用卷积替换 FC-LSTM，利用卷积操作提取空间信息，FC-LSTM 和 ConvLSTM 的区别主要在输入 ，候选态 ，隐藏态  和三个门  都是三维张量，其中最后两个维度是 spatial 空间维度。如下图：</p><p>对比两个结构的公式，LSTM 的公式:<br>ConvLSTM 的公式:</p><p> 是卷积操作， 是哈达玛乘积。因此 FC-LSTM 与 ConvLSTM 的主要差别在于将矩阵乘法替换成了卷积操作，即 input-to-state 和 state-to-state 的转换中使用的是卷积而不是全连接。</p><p>If we view the states as the hidden representations of moving objects, a ConvLSTM with a larger transitional kernel should be able to capture faster motions while one with a smaller kernel can capture slower motions. Also, if we adopt a similar view as [16], the inputs, cell outputs and hidden states of the traditional FC-LSTM represented by (2) may also be seen as 3D tensors with the last two dimensions being 1. In this sense, FC-LSTM is actually a special case of ConvLSTM with all features standing on a single cell.</p><p>通过使用一个大的状态转换卷积核捕捉快速的运动，而小的卷积核捕捉慢的运动；当最后两个维度为 1 时，FC-LSTM 也可以视为一个特殊的 ConvLSTM，每一个单元格代表一个特征。</p><p>Pytorch 实现可以参考 ConvLSTM，我合并了八次卷积操作，所以整个计算量和普通的卷积差不多，偏置项影响不大。</p><p>TrajGRU<br>TrajGRU(Trajectory GRU) 来自于施行健的第二篇文章 Deep Learning for Precipitation Nowcasting: A Benchmark and A New Model ，在这篇文章中，作者提出了一个新的 Benchmark 也就是上面介绍的数据集，对比了 ConvGRU、不使用/使用加权损失函数训练、Conv2d、Conv3d 等几种方法，构建了一个 Encoder-Forecaster 模型。</p><p>ConvGRU 类似于上面介绍的 ConvLSTM，只是将 LSTM 替换成了 GRU。</p><p>而 TrajGRU 使用 GRU 结构，区别是首先使用了一个  的卷积层对隐藏态进行卷积提取光流，然后使用  的卷积层对光流进行卷积，建立一个动态的对应关系。</p><p>按照作者的说法，普通卷积网络的对应关系不变，对于 local-invariant 的操作比较合适，而 local-variant 的操作比如旋转普通卷积是不够的。相比普通卷积固定的领域集，TrajGRU 可以有  个变化的领域集，并且参数要少于原来的普通卷积。我的想法是云层的运动与消散是动态的，一团云在某一帧的位置对应到下一帧的位置不一样，所以需要建立一个动态的链接。</p><p>TrajGRU 的公式如下，首先使用一个子网络提取光流 ，然后使用 wrap 函数变换，有  个链接。</p><p>wrap 函数的 mxnet 可以参考 traj_rnn.py#L14，pytorch 没有该函数，可以参考我的实现 trajGRU.py#L9。</p><p>Encoder-Forecaster<br>这两篇文章都采用了一个 Encoder-Forecaster 模型，和普通的 Encoder-Decoder 模型还是不一样的。Encoder-Forecaster 分成两部分，分别是 Encoder(编码器)，Forecaster(预测器)，分别对应了 Encoder 和 Decoder。</p><p>模型展开之后示意图如下：</p><p>这是一个输入 2 帧，预测未来 2 帧的 RNN 展开后的结构图。Encoder-Forecaster 模型对应层次的 RNN 的 隐藏态 输入到下一层次之中，提取不同层次的时空信息。Downsample 和 Unsample 分别通过 Convolution 和 Deconvolution 实现。这里的 RNN 可以采用 ConvGRU、ConvLSTM 和 TrajGRU 等能提取时空信息的结构。</p><p>Encoder 的初始隐藏态和 Forecaster 的初始输入为 0，因为这两个没有输入。最后的输出则通过一个  的卷积层进行回归。</p><p>Deep Learning for Precipitation Nowcasting: A Benchmark and A New Model 的网络结构可以参考下图:</p><p>通过实验发现，TrajGRU 取得了比 ConvGRU、Conv3d、光流法等方法更好的结果；所有深度学习方法都取得了比其他方法更好地结构；文中的 Baseline 是直接使用最后一帧的作为未来所有帧的预测结果。</p><p>在训练时作者采用了一个 50 的梯度阶段，防止梯度爆炸。 还有一些更具体的参数，比如网络结构，学习率等可以参考我的实现 experiments/net_params.py。</p><p><strong>总结</strong><br>我实现了 ConvLTSM 和 TrajGRU，取得了和作者接近的结果，有个疑问则是 ConvLTSM 取得了要比 TrajGRU 的更好地结果，而且因为合并了八个卷积所以运行速度也快得多。更具体的说明可以参考 关于 TrajGRU 的意义。</p><p><strong>运行效果图如下：</strong></p><p>虽然结果可能不错，在实际预测时还是发现了越往后的输出越暗，即越往后误差越大，参考 回复。</p><p>如果更进一步改进，可以考虑对这一方面、运行速度的比较等进行论述。现在气象台采用的还是光流法，预测之后由专业人员进行判断是否有下雨天气。</p><p>参考链接：<a href="https://hzzone.io/" target="_blank" rel="noopener">https://hzzone.io/</a></p><h4 id="“基于雷达图像预测未来降水”模型"><a href="#“基于雷达图像预测未来降水”模型" class="headerlink" title="“基于雷达图像预测未来降水”模型"></a>“基于雷达图像预测未来降水”模型</h4><p>《基于雷达图像的短期降水预报》是由ACM顶级数据挖掘会议CIKM举办的数据科学竞赛。CIKM 2017以“智慧城市，智慧型国家”为主题，通过人工智能同各学科领域的交叉研究，通过技术手段有效管理城市。<br>本次 CIKM AnalytiCup 2017 由深圳气象局与阿里巴巴联合承办，旨在提升基于雷达回波外推数据的短期降水预报的准确性。比赛共吸引了来自全球1395个团队，来自清华大学的Marmot团队(姚易辰，李中杰)在比赛中脱颖而出，在复赛中以绝对优势排名第一。本文摘录了他们团队解题方案的核心思路予以展示。</p><p>比赛官网：阿里天池大数据平台 <a href="https://link.jianshu.com/?t=https://tianchi.aliyun.com/competition/introduction.htm?spm=5176.100066.0.0.773ef42f8FXDoN&amp;raceId=231596" target="_blank" rel="noopener">https://link.jianshu.com/?t=https://tianchi.aliyun.com/competition/introduction.htm?spm=5176.100066.0.0.773ef42f8FXDoN&amp;raceId=231596</a><br>完整解题方案及代码:<a href="https://github.com/yaoyichen/CIKM-Cup-2017" target="_blank" rel="noopener">https://github.com/yaoyichen/CIKM-Cup-2017</a></p><p>赛题目标</p><p>赛题提供10,000组的雷达图像样本。每组样本包含60幅图像，为过去90分钟内(间隔6 min,共15帧)，分布在4个高度(0.5km, 1.5km, 2.5km, 3.5km)上的雷达反射率图像。</p><p>每张雷达图像大小为[101,101]，对应的空间覆盖范围为101×101km。每个网格点记录的是雷达反射率因子值Z。反射率因子，表征气象目标对雷达波后向散射能力的强弱，散射强度一定程度上反映了气象目标内部降水粒子的尺度和数密度，进而推测其与降水量之间的联系。</p><p><strong>目标：</strong>利用各个雷达站点在不同高度上的雷达历史图像序列，预测图像中心位于[50,50]坐标位置的目标站点未来1-2小时之间的地面总降水量，损失函数为降水量预测值与真实值的均方误差。</p><p><strong>算法架构</strong><br>本次比赛的特点在于时空序列的预测，即给出了目标站点周围一定空间范围的历史信息，需要预测在站点坐标上未来的降水走势，因而搭建时空之间的关联特性为解决问题的重中之重。同时有别于一般的计算机视觉问题，此次比赛提供的气象图像，其沿着时空方向的演化规律会满足一定的守恒律及连续性限制，发现物理问题的特殊性并寻找对应的表征量也是解决问题的关键。<br>解决方案的流程分为前处理，特征提取，模型训练三个部分。前处理步骤中，完成局部图像的拼接，并通过SIFT描述子寻找时间方向的对应关系，获得云团运动的轨迹。特征描述中，将问题的特征归纳为3部分，分别为时间空间方向的矢量描述，云团形状的统计描述，及由云团轨迹外推得到目标站点的雷达反射率的空间图像描述。模型训练主模型采用了卷积神经网络CNN，图像部分采用2层卷积池化，随后将向量拉平到一维，即在全连接层与其余非图像类特征合并，共同输入到2个隐藏层的神经网络中。</p><p><strong>图像拼接</strong><br>赛题给出的局部雷达图像，样本与样本之间并不完全独立，图像样本之间存在一定的重叠，可以通过模板匹配的方式寻找样本之间的坐标关联特性。通过样本之间的局部图像拼接，能够将一系列小范围的局部雷达图像恢复到空间更大范围的雷达图像，进而获得关于云团更加整体的特性。通过局部图像的拼接，能够获得如下两方面效果：</p><p>为目标站点的时空轨迹追踪提供更大的空间延伸量。目标站点附近更大的空间图像范围，能够对应更长的时间外推量</p><p>获得云团整体的结构，方便从更为宏观的视角提取特征描述云团形态</p><p>图像拼接后瞬时流场图中，能看到显著的对流特性。即在空间某个固定坐标点上，由湍流脉动引起的反射率改变量要远小于大气对流运动产生的反射率变化量。我们也会着重利用这一特性，利用SIFT算子在时间方向的匹配，寻找每个空间点上对流速度矢量。</p><p><strong>轨迹追踪</strong><br>根据流体力学中的泰勒冻结假设(Taylor Frozen Hypothesis)，认为流场中存在显著的时空关联特性。其认为雷达反射图，云团在短时间内趋向于在空间以当地平均对流速度平移，短时间内并不会发生外形或者反射强度的剧烈改变。即监测点x 处在未来τ 时刻后的雷达信号f，能够通过平均对流速度U，从当前时刻t 位于坐标的x-Uτ 的信号中体现：</p><p>为了寻找每个空间坐标对应的对流速度U， 可以通过SIFT描述子在一定时间间隔内，在空间坐标上的匹配，寻找相同关键点在较短时间间隔δt 内像素的平移量δx,即得到空间每个位置处的对流速度。</p><p>下图给出了相邻两帧图像上，SIFT描述子及相应的空间匹配关系。其中圆圈大小对应了关键点的特征尺度，圆圈中的刻度方向表征其主方向。两帧图像的匹配连线基本平行，即全场以一个近似相同的速度作对流运动。</p><p><strong>特征提取</strong><br>特征包含时间外插反射率图像，时间空间的矢量，云团形状的统计描述三部分。</p><p>时间外插反射率图像：由上述的图像拼接及轨迹追踪后，已经能够定位出全场的速度矢量见下图。以泰勒冻结假设和关键点匹配追踪到未来1.5个小时流场速度矢量后，能够外插未来每个坐标点的运动轨迹，即能够推测出未来位于目标站点上方的云团，在当前时刻雷达图像上的空间坐标。 图中白色圆圈坐标点的云团，会在1.5小时由图中对流矢量的作用下，运动到红色目标站点上方。因此截取空间轨迹上白点周围41×41大小，3个空间高度(1.5km,2.5km,3.5km)的局部图像作为卷积神经网络的图像输入。</p><p><strong>时间和空间特征提取:</strong> 在时间和空间方向（高度方向）提取图像像素的统计值（平均值、最大值、极值点个数、方差等等），作为时空特征的描述输入CNN的全连接层。</p><p><strong>全局云团形状特征提取:</strong> 某些特定的云层形态会对应典型降水事件。从拼接后的全局图像中提取云团形状的整体形态特征，有雷达反射率的直方图和统计类信息、云团运动速度和方向、加速度、流线曲率、SIFT描述子的直方图、监测点位置、检测点反射率与最大值比值等。</p><p><strong>训练模型</strong></p><p>卷积层的图像的输入为时间外推得到目标站点附近41×41的空间范围，采用较大的空间图像输入，希望能够包含轨迹预测的误差以及测评目标在1小时内的总降水量。图像部分采用2层卷积池化，随后将向量拉平到一维，即在全连接层与其余非图像类特征合并，共同输入到2个隐藏层的神经网络中。<br>模型通过dropout防止过拟合，取值为0.65，梯度下降采用的Adam优化算法。1200个迭代步后即达到稳定。</p><p><strong>总结</strong><br>虽然之前参加过多次大数据竞赛，但初次接触图像类比赛能够获奖也是非常意外。本次解题方案并未使用Imagenet上较为流行的InceptionNet或者ResNet，用深度的图像卷积网络来做训练。而是针对气象问题的特殊性，针对时间空间间关联这一重要线索，采用传统的关键点提取SIFT方法与卷积神经网络CNN结合的形式预测目标站点的降水量。</p><p>由于思路的特殊性，团队在未做调参的情况下已经能够大幅领先其他队伍。未来会对气象业务有更多探讨，用大数据力量推动气象预报的发展。感谢天池大数据平台组织比赛，感谢深圳气象局提供比赛数据，感谢CIKM2017组委会。<br>完整解题方案及代码:<a href="https://github.com/yaoyichen/CIKM-Cup-2017" target="_blank" rel="noopener">https://github.com/yaoyichen/CIKM-Cup-2017</a><br>深圳市气象局和阿里巴巴集团保留本次比赛数据的版权。 数据仅用于比赛和研究目的。 所有数据由深圳气象局提供，并已全部做过脱敏处理。</p><p>参考链接：<a href="https://www.jianshu.com/p/8d2da83a22bc" target="_blank" rel="noopener">https://www.jianshu.com/p/8d2da83a22bc</a></p><h4 id="MOS-X"><a href="#MOS-X" class="headerlink" title="MOS-X"></a>MOS-X</h4><p>Machine learning forecast model for WxChallenge</p><p>在气象预报领域，MOS预报，也就是模式输出统计预报，是一种动力统计预报天气的方法。而MOS-X，就是用机器学习来做模式输出统计。</p><p>每当WXchallenge宣布一个新预报地点，韦恩就用该城市过去6-7年的天气预报和实况数据来训练MOS-X，将历史预报与实际天气进行比较，来了解不同情况下的模式偏差，并对其订正。针对今年美国“最难预报城市”——科罗拉多州普韦布洛市的天气，MOS-X提供了最好的预报。</p><p>　　而且，据竞赛官网上公布的历届个人冠军和成绩列表显示，韦恩-3.817的得分不仅是本届最高分，而且还打破了赛会纪录——三年前的最高分-4.058。目前，冠军的Python代码已经在开源平台GITHUB上全部公开。</p><p>　　这也是该竞赛历史上计算机工具首次击败所有人类预测者。不过，由于WXchallenge规定，只有人类选手能参赛，MOS-X只好“借壳上市”。作为开发者的韦恩，替MOS-X领了一个特殊类别的奖杯。　　</p><p>JONATHAN WEYN个人主页： <a href="https://atmos.washington.edu/~jweyn/" target="_blank" rel="noopener">https://atmos.washington.edu/~jweyn/</a><br>MOS-X的代码托管在GitHub上： <a href="https://github.com/jweyn/MOS-X" target="_blank" rel="noopener">https://github.com/jweyn/MOS-X</a><br>参考论文：<br>  Weyn, J. A., Durran, D. R., &amp; Caruana, R. (2019). Using deep learning to predict gridded 500-hPa geopotential height from historical weather data. JAMES, accepted.</p><p>  Weyn, J. A., &amp; Durran, D. R. (2018). The scale dependence of initial-condition sensitivities in simulations of convective systems over the Southeastern US. Quarterly Journal of the Royal Meteorological Society. DOI</p><p>  Weyn, J. A., &amp; Durran, D. R. (2018). Ensemble spread grows more rapidly in higher-resolution simulations of deep convection. Journal of the Atmospheric Sciences, 75(10), 3331-3345. DOI</p><p>　　</p><p>参考链接：<a href="http://www.cma.gov.cn/kppd/kppdqxwq/kppdqwys/201905/t20190509_524094.html" target="_blank" rel="noopener">http://www.cma.gov.cn/kppd/kppdqxwq/kppdqwys/201905/t20190509_524094.html</a></p><h3 id="近期比赛"><a href="#近期比赛" class="headerlink" title="近期比赛"></a>近期比赛</h3><p>天池比赛（无奖金）</p><p>比赛概况<br>在太平洋西侧，每年夏季会陆续生成一系列热带风暴，其中有些发展成为台风乃至于超级台风，一边旋转一边向亚洲东海岸移动。台风往往在东南亚国家、中国、日本、以及朝鲜半岛登陆，带来狂风暴雨，造成巨大的财产损失，时有人员伤亡。如果能够提早一两天预测到台风的发展强度、行进轨迹、乃至于降水在各地的实时详细分布，就有可能为各国人民提供宝贵预警时间，多做防灾减灾工作。</p><p>赛题由马里兰大学博士宋宽构思设计，原始数据来源于日本气象厅葵花 8 号卫星的公开数据记录，由日本千叶大学进行第一轮数据处理，由宋宽博士进行第二轮数据处理。</p><p>比赛以算法交流为出发点，尝试深度学习在气象卫星图像领域的应用，希望通过社区的力量为台风预警与防灾探索可能的方向。</p><p>赛程安排<br>本次大赛分为初赛、复赛和决赛三个阶段，具体安排和要求如下：</p><p>初赛（8月1日-9月9日，UTC+8）</p><p>报名成功后，参赛队伍通过天池平台下载数据至本地调试算法，在线提交结果。若参赛队伍在一天内多次提交结果，新结果版本将覆盖旧版本。参赛地点不限。</p><p>比赛提供标准训练数据集（含标注），供参赛选手训练算法模型；提供标准测试数据集（无标注），供参赛选手提交评测结果参与排名。</p><p>初赛期间系统每天进行 2 次评测和排名，评测开始时间为当天 12:00 和 22:00，按照评测指标从高到低进行排序，定时更新排行榜；排行榜将选择参赛队伍在本阶段的历史最优成绩进行排名展示。</p><p>复赛（9月10日—9月20日，UTC+8）</p><p>复赛阶段测试数据不可见，采用 docker 镜像进行提交。由选手提交打包好的代码镜像来运行得出预测结果。</p><p>复赛阶段限制每天可提交运行的次数。系统每天进行 1 次排名，排名时间为当天的 12:00，按照评测指标从高到低进行排序，定时更新排行榜。</p><p>决赛与分享（9月20日—10月中旬，UTC+8）</p><p>TOP团队分享发布代码和方案说明，供广大参赛者复现与讨论。若无法复现，将失去参赛资格。</p><p>TOP团队模型将由新测试集运行出分。如果条件允许，将使用正在发生的台风卫星图像数据。</p><p>同步安排钉钉群内直播分享答辩，每支队伍有 15 分钟的陈述时间和 10分 钟的问答时间。请准备相关的算法答辩材料，页数不少于 10 页。</p><p>决赛分数将根据参赛队伍的算法成绩和答辩成绩加权得出。评分权重：复赛阶段 30%，决赛运行 30%，决赛答辩 40%。依据决赛分数评选出比赛名次并颁发证书。</p><p>赛事后由出题人宋宽博士牵头，基于自愿参与的原则，可合作将优秀方案写成文章投稿。</p><p>数据typhoon_data_list_20190722.txt，可以使用wget批量下载。</p><p>参考链接：<a href="https://tianchi.aliyun.com/competition/entrance/231729/introduction" target="_blank" rel="noopener">https://tianchi.aliyun.com/competition/entrance/231729/introduction</a></p><h3 id="推荐学习资料"><a href="#推荐学习资料" class="headerlink" title="推荐学习资料"></a>推荐学习资料</h3><blockquote><p><strong>《神经网络与深度学习》</strong>，附代码、书籍PDF  <a href="https://nndl.github.io/" target="_blank" rel="noopener">https://nndl.github.io/</a></p></blockquote><blockquote><p>GitHub深度学习最全资料集锦：<strong>Awesome Deep Learning</strong><br><a href="https://github.com/ChristosChristofidis/awesome-deep-learning" target="_blank" rel="noopener">https://github.com/ChristosChristofidis/awesome-deep-learning</a></p></blockquote><blockquote><p><strong>《Deep Learning》</strong> by Yoshua Bengio, Ian Goodfellow and Aaron Courville (05/07/2015) 最为大家所熟知的是Bengio等人所著，又称深度学习圣经或花书。</p></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>1.<a href="https://hzzone.io/" target="_blank" rel="noopener">https://hzzone.io/</a><br>2.<a href="https://nndl.github.io/" target="_blank" rel="noopener">https://nndl.github.io/</a><br>3.<a href="https://github.com/jweyn/MOS-X" target="_blank" rel="noopener">https://github.com/jweyn/MOS-X</a><br>4.<a href="https://github.com/sxjscience/HKO-7" target="_blank" rel="noopener">https://github.com/sxjscience/HKO-7</a><br>5.<a href="https://yq.aliyun.com/articles/224039" target="_blank" rel="noopener">https://yq.aliyun.com/articles/224039</a><br>6.<a href="https://zhuanlan.zhihu.com/p/69316384" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/69316384</a><br>7.<a href="https://www.jianshu.com/p/8d2da83a22bc" target="_blank" rel="noopener">https://www.jianshu.com/p/8d2da83a22bc</a><br>8.<a href="https://www.leiphone.com/news/201712/GnlC56qEtbrIqmI2.html" target="_blank" rel="noopener">https://www.leiphone.com/news/201712/GnlC56qEtbrIqmI2.html</a><br>9.<a href="https://tianchi.aliyun.com/dataset/dataDetail?dataId=1085" target="_blank" rel="noopener">https://tianchi.aliyun.com/dataset/dataDetail?dataId=1085</a><br>10.<a href="https://tianchi.aliyun.com/competition/entrance/231662/information" target="_blank" rel="noopener">https://tianchi.aliyun.com/competition/entrance/231662/information</a><br>11.<a href="https://tianchi.aliyun.com/competition/entrance/231729/introduction" target="_blank" rel="noopener">https://tianchi.aliyun.com/competition/entrance/231729/introduction</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/6233878-85081aea22301be3.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;排版麻烦，建议去公众号阅读，本文在『气象学家』同步推送&lt;a href=&quot;https://mp.weixin.qq.com/s/_sQ1H9BT0n6GtmjeVk8hbw&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;；随着人工智能的发展，拥有了越来越丰富的应用场景，气象行业也不例外，在突破传统预报方法的情况下，神经网络与深度学习来预报气象要素也取得了不错的效果，下面就给出一些比较典型的开源案例，条件允许不妨按图索骥实践一下，代码、数据、文献都给各位客官老爷一一奉上，也欢迎大家在圈内转载和分享！&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术积累" scheme="https://gavin971.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="Python" scheme="https://gavin971.github.io/tags/Python/"/>
    
      <category term="tianchi" scheme="https://gavin971.github.io/tags/tianchi/"/>
    
      <category term="Deep Learning" scheme="https://gavin971.github.io/tags/Deep-Learning/"/>
    
      <category term="Machine Learning" scheme="https://gavin971.github.io/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>利用新的观测数据后IPCC AR5结论是否变化？</title>
    <link href="https://gavin971.github.io/2019/08/10/ipcc/"/>
    <id>https://gavin971.github.io/2019/08/10/ipcc/</id>
    <published>2019-08-10T07:23:06.000Z</published>
    <updated>2019-08-22T11:30:28.441Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/fig-nearterm_all_UPDATE_2018-panela-1.png" alt></p><blockquote><p><strong><font color="#0000ff">本文在『气象学家』同步推送<a href="https://mp.weixin.qq.com/s/qFC1RmDbPe6a7_rkWYfMow" target="_blank" rel="noopener">传送门</a>；今年夏季欧洲和中国不少地方都出现了破历史记录的高温天气。所以，不妨让我们回顾一下IPCC AR5，关心了解下全球变暖！(翻译仓促，若存在不当之处请见谅，欢迎指出！)</font></strong></p></blockquote><a id="more"></a><hr>>**标题**:**<font color="#0000ff">CMIP5的模拟和观测对比(更新IPCC AR5数据和图片)</font>**>>**链接**:[**<font color="#0000ff">http://www.climate-lab-book.ac.uk/comparing-cmip5-observations/</font>**](http://www.climate-lab-book.ac.uk/comparing-cmip5-observations/)>>**翻译**:**<font color="#0000ff">gavin7675</font>**><br><hr><p>####正文</p><p>[图文最后更新时间: 9th July 2019]</p><p><img src="/images/fig-nearterm_all_UPDATE_2018-panela-1.png" alt><br>上图：IPCC AR5 Figure 11.25a的更新版本，展示了观测以及CMIP5模式相对于1986-2005年的预估。黑色的线条代表不同的观测数据集(HadCRUT4.6, Cowtan &amp; Way, NASA GISTEMP, NOAA GlobalTemp, BEST).</p><p>IPCC第五次评估报告最初是在2013年年中最终定稿的。所以，一晃几年过去了，从评估报告中选取了三幅图来进行更新，来展示全球温度观测和CMIP5模拟的结果进行评估。前两幅图是对于 IPCC AR5 Figure 11.25a,b的更新。</p><p>第一幅图中展示了如同生的意大利面条一样的未来预估变化情况，其中黑色线条代表的是观测数据集，彩色线条则代表不同排放情景下（RCPs）的情景。模拟数据使用了空间上完全覆盖的表面气温，而观测则使用了不完全覆盖的混合方式，其中陆地上是使用的气温，洋面上用到的是海表温度。由此可以预料，这个因素可导致观测相比于模拟具有更小的变化趋势。</p><p><img src="/images/fig-nearterm_all_UPDATE_2018-1.png" alt><br>上图：IPCC AR5 Fig 11.25b 更新后的HadCRUT4.6全球温度序列和不确定性（黑线）。与1986年-2005年期间 (浅灰色阴影区域) 和 2006年-2012年期间 (深灰色阴影区域)相对应的CMIP5模式预估结果。红色的斜纹影线区域显示了IPCC AR5 在2016年-2035年期间全球温度可能的指示性范围（&gt;66%），其中黑条状是2016年-2035年期间的平均值。蓝色的线段代表多种观测数据（Cowtan &amp; Way, NASA GISTEMP, NOAA GlobalTemp, BEST）。绿色的轴线为相比于1850年-1900年（工业化之前时期）温度的变幅。</p><p>第二幅图展示了AR5对2016年-2035年期间全球气温的评估。HadCRUT4.6 观测结果用粗黑线表示，细黑线表示其5-95%的不确定性。其他的一些观测数据用蓝线表示。淡灰色阴影区域表示CMIP5历史（2005年之前）和未来所有强迫路径下（RCPs, 2005之后）的5-95%变化范围；灰色的线段之间则是最大和最小混合区域。深灰色的阴影区使用了2006年-2012年期间作为参考基准时段的未来预估。红色的斜纹影线区域显示了IPCC AR5 在2016年-2035年期间可能的指示性范围（&gt;66%）。</p><p>2016年-2018年期间，观测降至“可能”范围的增暖幅度的一半。2016年由于太平洋厄尔尼诺事件使得全球平均温度略微增暖。2015年-2018年期间相比于1850年-1900年 (工业化之前) 基准线有超过1℃增幅。在AR5中，使用HadCRUT4评估的结果表明，1986年-2005年相比于1850年-1900年温度高出了 0.61K。随后，对全球温度数据更新后，增温幅度更大一些，也就是意味着，Figure 11.25b图中右侧的绿色轴线要往下移动一些。 </p><p>IPCC AR5 Figure 11.25b 中更新后的HadCRUT4.6全球温度序列和不确定性（黑线）。与1986年-2005年期间 (浅灰色阴影区域) 和 2006年-2012年期间 (深灰色阴影区域)相对应的CMIP5模式预估结果。红色的斜纹影线区域显示了IPCC AR5 在2016年-2035年期间全球温度可能的指示性范围（&gt;66%），其中黑条状是2016年-2035年期间的平均值。蓝色的线段代表多种观测数据（Cowtan &amp; Way, NASA GISTEMP, NOAA GlobalTemp, BEST）。绿色的轴线为相比于1850年-1900年（工业化之前时期）温度的变幅。</p><hr><p>来思考一个有趣的问题：假定2012年之后温度数据和科学研究在AR5之后给出了，是不是全面的评估（黑条和红色斜纹影线）都会发生变化？在AR5的评估中1986年-2005年期间相对于2016年-2035年期间平均温度（也就是黑色条状） 可能偏高0.3K-0.7K。个人的观点是上限依旧维持不变，而极具争议下限的边界可能会变至0.4K，这主要是对于在快速增温区域北极的缺失温度数据及其影响的更深理解。</p><p><img src="/images/WGI_AR5_Fig1-4_UPDATE.jpg" alt><br>上图：IPCC AR5 Fig 1.4更新版本，图中展示了先前的评估报告中(FAR, SAR, TAR &amp; AR4)全球温度与后续观测的比较。2013年-2015年HadCRUT4.4全球温度用黑色方块表示。</p><p>这里还有很多其他的解释来解答为何早期的观测出现在CMIP5范围低端的一侧。第一，由于内部气候变率的影响，它可以引起温度短暂快速地或者是缓慢地增温。第二，2005年之后的辐射强迫源自于RCPs，而不是观测。假定存在一些小型火山的喷发或者是太阳的黑子活动减少，这就有可能导致一些明显的差异。第三，实际情况中气候的敏感性会反馈给CMIP5范围的低端一侧。第四，CMIP5中观测的准确范围极大地依赖于参考时段的选取。第五，这也不是一个对等的比较，使用混用且稀疏的气温和海温观测数据对比模拟的单一输出的气温。这些原因的结合也可能是原因之一。</p><p>此外，IPCC AR5 Fig. 1.4也进行了更新，利用后续的观测数据来对比先前评估报告的预估情况。HadCRUT4.4 在2013年-2015年期间的观测是图中的黑色方块。值得指出的是，先前的报告对于未来的排放使用了不同的假设。这幅图中并没有更新至2016年-2018年的温度数据。<br><img src="/images/all_countries_BBC-e1563724721978.png" alt></p><p>而近年来全球各个国家和地区气温增暖幅度越来越明显。但是今年的七月份北美和一些地区却是异常偏冷的，又有什么启示呢？<br><img src="/images/EAbImHWU8AAiS1A.jpeg" alt></p><p>参考：</p><p><a href="http://www.climate-lab-book.ac.uk/comparing-cmip5-observations" target="_blank" rel="noopener">链接.1</a><br><a href="http://www.climate-lab-book.ac.uk/2019/showyourstripes/" target="_blank" rel="noopener">链接.2</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/fig-nearterm_all_UPDATE_2018-panela-1.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;本文在『气象学家』同步推送&lt;a href=&quot;https://mp.weixin.qq.com/s/qFC1RmDbPe6a7_rkWYfMow&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;；今年夏季欧洲和中国不少地方都出现了破历史记录的高温天气。所以，不妨让我们回顾一下IPCC AR5，关心了解下全球变暖！(翻译仓促，若存在不当之处请见谅，欢迎指出！)&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="科研之路" scheme="https://gavin971.github.io/categories/%E7%A7%91%E7%A0%94%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="IPCC" scheme="https://gavin971.github.io/tags/IPCC/"/>
    
      <category term="CMIP5" scheme="https://gavin971.github.io/tags/CMIP5/"/>
    
      <category term="Global Warming" scheme="https://gavin971.github.io/tags/Global-Warming/"/>
    
  </entry>
  
  <entry>
    <title>如何用NCL处理风云4A/MODIS卫星数据？</title>
    <link href="https://gavin971.github.io/2019/08/10/ncl-fy4a/"/>
    <id>https://gavin971.github.io/2019/08/10/ncl-fy4a/</id>
    <published>2019-08-10T07:22:44.000Z</published>
    <updated>2019-08-22T11:30:28.449Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/FY4A_OLR_plot_latlon2d_Lambert.png" alt></p><blockquote><p><strong><font color="#0000ff">本文在『气象学家』同步推送<a href="https://mp.weixin.qq.com/s/atA9PlOM4F70CXHn8xLoSg" target="_blank" rel="noopener">传送门</a>；读取和处理了两种FY-4A和MODIS卫星数据，进行相关产品的绘图，插值为不同分辨率经纬度格点数据并保存为nc格式文件。抛砖引玉，不做更深入的分析。</font></strong></p></blockquote><a id="more"></a><h3 id="00-前言介绍"><a href="#00-前言介绍" class="headerlink" title="00.前言介绍"></a>00.前言介绍</h3><p>工具：NCL、相关底图包<br>配料：风云4A数据FY4_AGRI_L2 OLR产品、MOD06_L2产品<br>方法：ESMF_regrid<br>成品：中国区域图、经纬度格点数据（e.g. ,  0.1°*0.1°）</p><h3 id="01-中国区域FY4-AGRI-L2-OLR原始数据Lambert投影绘图和脚本"><a href="#01-中国区域FY4-AGRI-L2-OLR原始数据Lambert投影绘图和脚本" class="headerlink" title="01.中国区域FY4_AGRI_L2 OLR原始数据Lambert投影绘图和脚本"></a>01.中国区域FY4_AGRI_L2 OLR原始数据Lambert投影绘图和脚本</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line">; =============================================================================</span><br><span class="line">; Author: Gavin | Affiliation: NJU</span><br><span class="line">; Email : Zhpfu.atm@gmail.com</span><br><span class="line">; Last modified: <span class="number">2018</span>-<span class="number">06</span>-<span class="number">18</span> <span class="number">10</span>:<span class="number">43</span></span><br><span class="line">; Filename: FY4A_read_plot_latlon2d_Lambert.ncl</span><br><span class="line">; Description: Read FY4A full disc data; </span><br><span class="line">;              Take OLR for example; </span><br><span class="line">;              Mapping to specific area;</span><br><span class="line">;              Plotting China area <span class="keyword">with</span> China's nine-dash; </span><br><span class="line">;              Choosing Lambert Map Projections; </span><br><span class="line">; To Be Determined(TBD):  </span><br><span class="line">;</span><br><span class="line">; =============================================================================</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; Given a start time <span class="literal">and</span> a title, this procedure calls get_cpu_time()</span><br><span class="line">; to get the end_time, <span class="keyword">then</span> prints <span class="string">"elapsed time"</span> information.</span><br><span class="line">; =============================================================================</span><br><span class="line">procedure print_elapsed_time(start_time,title)</span><br><span class="line">local end_time</span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">  <span class="attr">end_time</span> = get_cpu_time()</span><br><span class="line">  print(<span class="string">"======================================================================"</span>)</span><br><span class="line">  print(title + <span class="string">" elapsed time = "</span> + (end_time-start_time) + <span class="string">" CPU seconds."</span>)</span><br><span class="line">  print(<span class="string">"======================================================================"</span>)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; ===================================<span class="attr">MAIN======================================</span></span><br><span class="line">; =============================================================================</span><br><span class="line">  <span class="attr">start_time</span> = get_cpu_time()</span><br><span class="line"></span><br><span class="line">  <span class="attr">fpath</span> = <span class="string">"/Users/zhpfu/Downloads/DATA_MAC/00_FY_satellite/"</span></span><br><span class="line">  <span class="attr">fname</span> = <span class="string">"FY4A-_AGRI--_N_DISK_1047E_L2-_OLR-_MULT_NOM_20180104000000_20180104001459_4000M_V0001.NC"</span></span><br><span class="line">  <span class="attr">f1</span>    = addfile(fpath+fname,<span class="string">"r"</span>)</span><br><span class="line">  <span class="attr">geohdf=</span> <span class="string">"FY4A_OBI_4000M_NOM_LATLON.HDF"</span></span><br><span class="line">  <span class="attr">f2</span>    = addfile(fpath+geohdf,<span class="string">"r"</span>)</span><br><span class="line"></span><br><span class="line">  <span class="attr">lon2d</span> = f2-&gt;Lon(:,:)</span><br><span class="line">  <span class="attr">lat2d</span> = f2-&gt;Lat(:,:)</span><br><span class="line"></span><br><span class="line">; Set default value  </span><br><span class="line">; <span class="number">65534</span> is the area out of Earth   </span><br><span class="line">  lon2d@<span class="attr">_FillValue</span> = <span class="number">65534</span></span><br><span class="line">  lat2d@<span class="attr">_FillValue</span> = <span class="number">65534</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (any(ismissing(ndtooned(lon2d)))) <span class="keyword">then</span></span><br><span class="line">    print(<span class="string">"Missing longitude coordinates detected"</span>)</span><br><span class="line">  end <span class="keyword">if</span> </span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (any(ismissing(ndtooned(lat2d)))) <span class="keyword">then</span></span><br><span class="line">    print(<span class="string">"Missing latitude coordinates detected"</span>)</span><br><span class="line">  end <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">; Set the specific area to plot</span><br><span class="line">  <span class="attr">minlat</span>   =   <span class="number">15</span>.</span><br><span class="line">  <span class="attr">maxlat</span>   =   <span class="number">55</span>.</span><br><span class="line">  <span class="attr">minlon</span>   =   <span class="number">72</span>.</span><br><span class="line">  <span class="attr">maxlon</span>   =   <span class="number">136</span>.</span><br><span class="line"></span><br><span class="line">  <span class="attr">olr</span>      =short2flt(f1-&gt;OLR)</span><br><span class="line">  olr@<span class="attr">_FillValue</span> = <span class="number">32766</span></span><br><span class="line"></span><br><span class="line">; Add the attributes</span><br><span class="line">  lat2d@<span class="attr">units</span>  = <span class="string">"degrees_north"</span></span><br><span class="line">  lon2d@<span class="attr">units</span>  = <span class="string">"degrees_east"</span></span><br><span class="line">  olr@<span class="attr">lat2d</span>    = lat2d</span><br><span class="line">  olr@<span class="attr">lon2d</span>    = lon2d</span><br><span class="line">  olr@<span class="attr">units</span>    = <span class="string">"W/M2"</span></span><br><span class="line">  olr@<span class="attr">coordinates</span> = <span class="string">"lat2d lon2d"</span></span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; ================================<span class="attr">plot=========================================</span></span><br><span class="line">; =============================================================================</span><br><span class="line"></span><br><span class="line">  <span class="attr">wks_type</span>          = <span class="string">"png"</span></span><br><span class="line">  wks_type@<span class="attr">wkWidth</span>  =  <span class="number">1200</span></span><br><span class="line">  wks_type@<span class="attr">wkHeight</span> =  <span class="number">1200</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">wks</span> = gsn_open_wks(wks_type,<span class="string">"FY4A_OLR_plot_latlon2d_Lambert"</span>)              ; send graphics to PNG file</span><br><span class="line">  gsn_define_colormap(wks, <span class="string">"NCV_jet"</span>)  ;MPL_jet</span><br><span class="line"></span><br><span class="line">  ; <span class="attr">colors</span> = (/ (/<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>/),\</span><br><span class="line">  ;             (/<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>/),\</span><br><span class="line">  ;             (/<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.647</span>,<span class="number">0.953</span>,<span class="number">0.553</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.239</span>,<span class="number">0.725</span>,<span class="number">0.247</span>/), \</span><br><span class="line">  ;             (/<span class="number">0.388</span>,<span class="number">0.722</span>,<span class="number">0.976</span>/), \</span><br><span class="line">  ;             (/<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.996</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.953</span>,<span class="number">0.020</span>,<span class="number">0.933</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.506</span>,<span class="number">0</span>,<span class="number">0.251</span>/)/)</span><br><span class="line">  </span><br><span class="line">  ; gsn_define_colormap(wks,colors)     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">res</span>                      = True               ; plot mods desired</span><br><span class="line">  res@<span class="attr">gsnMaximize</span>          = True               ; maximize plot <span class="keyword">in</span> frame</span><br><span class="line">  res@<span class="attr">gsnDraw</span>              = False</span><br><span class="line">  res@<span class="attr">gsnFrame</span>             = False</span><br><span class="line">  res@<span class="attr">mpProjection</span>         = <span class="string">"LambertConformal"</span> ; choose projection</span><br><span class="line">  res@<span class="attr">gsnSpreadColors</span>      = True               ; Use full color <span class="built_in">map</span> </span><br><span class="line"></span><br><span class="line">  res@<span class="attr">sfXArray</span>             = lon2d</span><br><span class="line">  res@<span class="attr">sfYArray</span>             = lat2d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  res@<span class="attr">cnFillOn</span>             = True               ; color fill </span><br><span class="line">  res@<span class="attr">cnFillMode</span>           = <span class="string">"RasterFill"</span>       ; Raster mode is much faster</span><br><span class="line">  res@<span class="attr">cnRasterSmoothingOn</span>  = True</span><br><span class="line">  ; res@<span class="attr">cnFillPalette</span>        = <span class="string">"gui_default"</span></span><br><span class="line">  res@<span class="attr">cnLinesOn</span>            = False              ; <span class="literal">and</span> uses less memory.</span><br><span class="line">  res@<span class="attr">cnLineLabelsOn</span>       = False</span><br><span class="line">  res@<span class="attr">trGridType</span>           = <span class="string">"TriangularMesh"</span>   ; Caution!!! can not ignore!</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; set for <span class="built_in">map</span></span><br><span class="line">  res@<span class="attr">mpLimitMode</span>                = <span class="string">"LatLon"</span></span><br><span class="line">  res@<span class="attr">mpMinLatF</span>                  = minlat</span><br><span class="line">  res@<span class="attr">mpMaxLatF</span>                  = maxlat</span><br><span class="line">  res@<span class="attr">mpMinLonF</span>                  = minlon</span><br><span class="line">  res@<span class="attr">mpMaxLonF</span>                  = maxlon</span><br><span class="line">  </span><br><span class="line">  res@<span class="attr">mpFillOn</span>                   = True</span><br><span class="line">  res@<span class="attr">mpDataSetName</span>              = <span class="string">"/Users/zhpfu/Downloads/DATA_MAC/00_FY_satellite/FY4A/NCL-Chinamap/database/Earth..4"</span></span><br><span class="line">  res@<span class="attr">mpDataBaseVersion</span>          = <span class="string">"MediumRes"</span> ; <span class="literal">or</span> <span class="string">"Ncarg4_1"</span></span><br><span class="line">  res@<span class="attr">mpAreaMaskingOn</span>            = True</span><br><span class="line">  res@<span class="attr">mpMaskAreaSpecifiers</span>       = (/<span class="string">"China"</span>/)</span><br><span class="line">  res@<span class="attr">mpOutlineSpecifiers</span>        = (/<span class="string">"China"</span>,<span class="string">"China:Provinces"</span>/)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  res@<span class="attr">mpLandFillColor</span>            = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpInlandWaterFillColor</span>     = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpOceanFillColor</span>           = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpFillBoundarySets</span>         = <span class="string">"NoBoundaries"</span></span><br><span class="line">  res@<span class="attr">mpOutlineBoundarySets</span>      = <span class="string">"NoBoundaries"</span></span><br><span class="line">  res@<span class="attr">mpNationalLineColor</span>        = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpProvincialLineColor</span>      = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpGeophysicalLineColor</span>     = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpNationalLineThicknessF</span>   = <span class="number">2</span></span><br><span class="line">  res@<span class="attr">mpProvincialLineThicknessF</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  res@<span class="attr">mpGridAndLimbOn</span>            = <span class="string">"True"</span></span><br><span class="line">  res@<span class="attr">mpGridAndLimbDrawOrder</span>     = <span class="string">"Draw"</span></span><br><span class="line">  ; res@<span class="attr">mpGridMaskMode</span>            = <span class="string">"MaskLand"</span></span><br><span class="line">  res@<span class="attr">mpGridSpacingF</span>             = <span class="number">5.0</span></span><br><span class="line">  res@<span class="attr">mpGridLineColor</span>            = <span class="string">"Grey37"</span></span><br><span class="line">; =============================================================================</span><br><span class="line">; set for the plot</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">cnFillDrawOrder</span>      = <span class="string">"PreDraw"</span></span><br><span class="line">  res@<span class="attr">cnLevelSelectionMode</span> = <span class="string">"ManualLevels"</span>     ; set manual contour levels</span><br><span class="line">  res@<span class="attr">cnMinLevelValF</span>       = <span class="number">100</span>;min(olr)           ; set min contour level</span><br><span class="line">  res@<span class="attr">cnMaxLevelValF</span>       = <span class="number">300</span>;max(olr)           ; set max contour level</span><br><span class="line">  res@<span class="attr">cnLevelSpacingF</span>      = <span class="number">5.0</span>               ; set contour spacing</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">gsnAddCyclic</span>         = False </span><br><span class="line"> </span><br><span class="line">  ; res@<span class="attr">tmXTOn</span>               = True</span><br><span class="line">  ; res@<span class="attr">tmYROn</span>               = True</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">lbOrientation</span>        = <span class="string">"Horizontal"</span>         ; vertical labelbar</span><br><span class="line">  res@<span class="attr">pmTickMarkDisplayMode=</span> <span class="string">"Always"</span></span><br><span class="line">  ; res@<span class="attr">pmLabelBarOrthogonalPosF</span>  = <span class="number">0.00</span>          ; Move labelbar up</span><br><span class="line">  ; res@<span class="attr">pmLabelBarParallelPosF</span>    = <span class="number">0.00</span>          ; Move labelbar Right</span><br><span class="line">  res@<span class="attr">pmLabelBarWidthF</span>     = <span class="number">0.35</span></span><br><span class="line">  res@<span class="attr">pmLabelBarHeightF</span>    = <span class="number">0.035</span></span><br><span class="line">  res@<span class="attr">lbLabelFontHeightF</span>   = <span class="number">0.005</span></span><br><span class="line">  res@<span class="attr">lbPerimOn</span>            = False</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">lbLabelAutoStride</span>    = True               ; Clean up labelbar labels.</span><br><span class="line">  res@<span class="attr">lbBoxLinesOn</span>         = False              ; No labelbar box lines. </span><br><span class="line">  res@<span class="attr">lbLabelFontHeightF</span>   = <span class="number">0.01</span>               ; make labels smaller ( <span class="attr">default=0.02</span> )</span><br><span class="line">  res@<span class="attr">lbBoxEndCapStyle</span>     = <span class="string">"TriangleBothEnds"</span> ; set the two-end triangle </span><br><span class="line">  res@<span class="attr">tiXAxisString</span>        = <span class="string">""</span></span><br><span class="line">  res@<span class="attr">tiYAxisString</span>        = <span class="string">""</span> </span><br><span class="line">  res@<span class="attr">gsnStringFontHeightF</span> = <span class="number">0.012</span></span><br><span class="line">  res@<span class="attr">gsnLeftString</span>        = <span class="string">""</span>;<span class="string">"OLR"</span></span><br><span class="line">  res@<span class="attr">gsnRightString</span>       = <span class="string">""</span>;<span class="string">"W/m~S~2~E~"</span>       ;<span class="string">"W/m2"</span></span><br><span class="line">  res@<span class="attr">gsnMaskLambertConformal</span>    = True  ; turn on lc masking</span><br><span class="line">  ; res@<span class="attr">gsnMaskLambertConformalOutlineOn</span>  = False ; turns off outline</span><br><span class="line">  <span class="attr">plot</span> = gsn_csm_contour_map(wks,olr,res) ; create plot</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; add South China Sea  </span><br><span class="line">  <span class="attr">nhres</span>                          = res</span><br><span class="line">  nhres@<span class="attr">gsnMaximize</span>              = False</span><br><span class="line">  nhres@<span class="attr">vpHeightF</span>                = <span class="number">0.12</span>    </span><br><span class="line">  nhres@<span class="attr">vpWidthF</span>                 = <span class="number">0.12</span></span><br><span class="line">    </span><br><span class="line">  nhres@<span class="attr">mpMinLatF</span>                =   <span class="number">2</span>    </span><br><span class="line">  nhres@<span class="attr">mpMaxLatF</span>                =  <span class="number">23</span></span><br><span class="line">  nhres@<span class="attr">mpMinLonF</span>                = <span class="number">105</span></span><br><span class="line">  nhres@<span class="attr">mpMaxLonF</span>                = <span class="number">123</span></span><br><span class="line">  nhres@<span class="attr">lbLabelBarOn</span>             = False</span><br><span class="line">  nhres@<span class="attr">tmXBOn</span>                   = False </span><br><span class="line">  nhres@<span class="attr">tmXTOn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">tmYLOn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">tmYROn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">gsnLeftString</span>            = <span class="string">""</span></span><br><span class="line">  nhres@<span class="attr">gsnRightString</span>           = <span class="string">""</span></span><br><span class="line">  nhres@<span class="attr">mpProjection</span>             = <span class="string">"CylindricalEquidistant"</span> ; choose projection</span><br><span class="line">  <span class="attr">map_nanhai</span> = gsn_csm_contour_map(wks,olr,nhres)</span><br><span class="line">  <span class="attr">adres</span>                          = True</span><br><span class="line">  adres@<span class="attr">amParallelPosF</span>           = <span class="number">0.44</span>   ;<span class="number">0.499</span> ; -<span class="number">0.5</span> is the left edge of the plot.</span><br><span class="line">  adres@<span class="attr">amOrthogonalPosF</span>         = <span class="number">0.33</span>   ;<span class="number">0.50</span>  ; -<span class="number">0.5</span> is the top edge of the plot.</span><br><span class="line">  adres@<span class="attr">amJust</span>                   = <span class="string">"BottomRight"</span></span><br><span class="line">  <span class="attr">plotnh</span> = gsn_add_annotation(plot,map_nanhai,adres)</span><br><span class="line"></span><br><span class="line">; add Changjiang <span class="literal">and</span> Huanghe river  </span><br><span class="line">  <span class="attr">river</span>                          = True</span><br><span class="line">  river@<span class="attr">gsLineThicknessF</span>         = <span class="number">3.0</span>       </span><br><span class="line">  river@<span class="attr">gsLineColor</span>              = <span class="string">"blue"</span></span><br><span class="line">  <span class="attr">plotrv</span> = gsn_add_shapefile_polylines(wks,plot,<span class="string">"/Users/zhpfu/Downloads/DATA_MAC/00_FY_satellite/FY4A/NCL-Chinamap/cnmap_NetCDF/river.nc"</span>,river)</span><br><span class="line">  draw(plot)</span><br><span class="line">  frame(wks)</span><br><span class="line"></span><br><span class="line">  print_elapsed_time(start_time,<span class="string">"Game Over &gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/FY4A_OLR_plot_latlon2d_Lambert.png" alt></p><h3 id="02-中国区域FY4-AGRI-L2-OLR原始数据经纬度网格投影绘图和脚本"><a href="#02-中国区域FY4-AGRI-L2-OLR原始数据经纬度网格投影绘图和脚本" class="headerlink" title="02.中国区域FY4_AGRI_L2 OLR原始数据经纬度网格投影绘图和脚本"></a>02.中国区域FY4_AGRI_L2 OLR原始数据经纬度网格投影绘图和脚本</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line">; =============================================================================</span><br><span class="line">; Author: Gavin | Affiliation: NJU</span><br><span class="line">; Email : Zhpfu.atm@gmail.com</span><br><span class="line">; Last modified:<span class="number">2018</span>-<span class="number">06</span>-<span class="number">18</span> <span class="number">01</span>:<span class="number">15</span></span><br><span class="line">; Filename:FY4A_read_plot_latlon2d_to_rectilinear_grid.ncl</span><br><span class="line">; Description: Read FY4A full disc data; </span><br><span class="line">;              Take OLR for example; </span><br><span class="line">;              Mapping to specific area;</span><br><span class="line">;              Plotting China area <span class="keyword">with</span> China's nine-dash; </span><br><span class="line">;              Choosing different Map Projections; </span><br><span class="line">; To Be Determined(TBD):  </span><br><span class="line">;              问题：需要局部微调，经纬度刻度最好四周都有；投影方式暂时只有圆柱等距投影</span><br><span class="line">;                   Cylindrical Equidistant Projection；</span><br><span class="line">; =============================================================================</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; Given a start time <span class="literal">and</span> a title, this procedure calls get_cpu_time()</span><br><span class="line">; to get the end_time, <span class="keyword">then</span> prints <span class="string">"elapsed time"</span> information.</span><br><span class="line">; =============================================================================</span><br><span class="line">procedure print_elapsed_time(start_time,title)</span><br><span class="line">local end_time</span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">  <span class="attr">end_time</span> = get_cpu_time()</span><br><span class="line">  print(<span class="string">"======================================================================"</span>)</span><br><span class="line">  print(title + <span class="string">" elapsed time = "</span> + (end_time-start_time) + <span class="string">" CPU seconds."</span>)</span><br><span class="line">  print(<span class="string">"======================================================================"</span>)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; ===================================<span class="attr">MAIN======================================</span></span><br><span class="line">; =============================================================================</span><br><span class="line">  <span class="attr">start_time</span> = get_cpu_time()</span><br><span class="line"></span><br><span class="line">  <span class="attr">fpath</span> = <span class="string">"/Users/zhpfu/Downloads/DATA_MAC/00_FY_satellite/"</span></span><br><span class="line">  <span class="attr">fname</span> = <span class="string">"FY4A-_AGRI--_N_DISK_1047E_L2-_OLR-_MULT_NOM_20180104000000_20180104001459_4000M_V0001.NC"</span></span><br><span class="line">  <span class="attr">f1</span>    = addfile(fpath+fname,<span class="string">"r"</span>)</span><br><span class="line">  <span class="attr">geohdf=</span> <span class="string">"FY4A_OBI_4000M_NOM_LATLON.HDF"</span></span><br><span class="line">  <span class="attr">f2</span>    = addfile(fpath+geohdf,<span class="string">"r"</span>)</span><br><span class="line"></span><br><span class="line">  <span class="attr">lon2d</span> = f2-&gt;Lon(:,:)</span><br><span class="line">  <span class="attr">lat2d</span> = f2-&gt;Lat(:,:)</span><br><span class="line"></span><br><span class="line">; Set default value  </span><br><span class="line">; <span class="number">65534</span> is the area out of Earth   </span><br><span class="line">  lon2d@<span class="attr">_FillValue</span> = <span class="number">65534</span></span><br><span class="line">  lat2d@<span class="attr">_FillValue</span> = <span class="number">65534</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (any(ismissing(ndtooned(lon2d)))) <span class="keyword">then</span></span><br><span class="line">    print(<span class="string">"Missing longitude coordinates detected"</span>)</span><br><span class="line">  end <span class="keyword">if</span> </span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (any(ismissing(ndtooned(lat2d)))) <span class="keyword">then</span></span><br><span class="line">    print(<span class="string">"Missing latitude coordinates detected"</span>)</span><br><span class="line">  end <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">; Set the specific area to plot</span><br><span class="line">  <span class="attr">minlat</span>   =   <span class="number">15</span>.</span><br><span class="line">  <span class="attr">maxlat</span>   =   <span class="number">55</span>.</span><br><span class="line">  <span class="attr">minlon</span>   =   <span class="number">72</span>.</span><br><span class="line">  <span class="attr">maxlon</span>   =   <span class="number">136</span>.</span><br><span class="line"></span><br><span class="line">  <span class="attr">olr</span>      =short2flt(f1-&gt;OLR)</span><br><span class="line">  olr@<span class="attr">_FillValue</span> = <span class="number">32766</span></span><br><span class="line"></span><br><span class="line">; Add the attributes</span><br><span class="line">  lat2d@<span class="attr">units</span>  = <span class="string">"degrees_north"</span></span><br><span class="line">  lon2d@<span class="attr">units</span>  = <span class="string">"degrees_east"</span></span><br><span class="line">  olr@<span class="attr">lat2d</span>    = lat2d</span><br><span class="line">  olr@<span class="attr">lon2d</span>    = lon2d</span><br><span class="line">  olr@<span class="attr">units</span>    = <span class="string">"W/M2"</span></span><br><span class="line">  olr@<span class="attr">coordinates</span> = <span class="string">"lat2d lon2d"</span></span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; ================================<span class="attr">plot=========================================</span></span><br><span class="line">; =============================================================================</span><br><span class="line"></span><br><span class="line">  <span class="attr">wks_type</span>          = <span class="string">"png"</span></span><br><span class="line">  wks_type@<span class="attr">wkWidth</span>  =  <span class="number">1200</span></span><br><span class="line">  wks_type@<span class="attr">wkHeight</span> =  <span class="number">1200</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">wks</span> = gsn_open_wks(wks_type,<span class="string">"FY4A_OLR_plot_China"</span>)              ; send graphics to PNG file</span><br><span class="line">  gsn_define_colormap(wks, <span class="string">"NCV_jet"</span>)  ;MPL_jet</span><br><span class="line"></span><br><span class="line">  ; <span class="attr">colors</span> = (/ (/<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>/),\</span><br><span class="line">  ;             (/<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>/),\</span><br><span class="line">  ;             (/<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.647</span>,<span class="number">0.953</span>,<span class="number">0.553</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.239</span>,<span class="number">0.725</span>,<span class="number">0.247</span>/), \</span><br><span class="line">  ;             (/<span class="number">0.388</span>,<span class="number">0.722</span>,<span class="number">0.976</span>/), \</span><br><span class="line">  ;             (/<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.996</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.953</span>,<span class="number">0.020</span>,<span class="number">0.933</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.506</span>,<span class="number">0</span>,<span class="number">0.251</span>/)/)</span><br><span class="line">  </span><br><span class="line">  ; gsn_define_colormap(wks,colors)     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">res</span>                      = True               ; plot mods desired</span><br><span class="line">  res@<span class="attr">gsnMaximize</span>          = True               ; maximize plot <span class="keyword">in</span> frame</span><br><span class="line">  res@<span class="attr">gsnDraw</span>              = False</span><br><span class="line">  res@<span class="attr">gsnFrame</span>             = False</span><br><span class="line">  res@<span class="attr">gsnSpreadColors</span>      = True              ; Use full color <span class="built_in">map</span> </span><br><span class="line"></span><br><span class="line">  res@<span class="attr">sfXArray</span>             = lon2d</span><br><span class="line">  res@<span class="attr">sfYArray</span>             = lat2d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  res@<span class="attr">cnFillOn</span>             = True               ; color fill </span><br><span class="line">  res@<span class="attr">cnFillMode</span>           = <span class="string">"RasterFill"</span>       ; Raster mode is much faster</span><br><span class="line">  res@<span class="attr">cnRasterSmoothingOn</span>  = True</span><br><span class="line">  ; res@<span class="attr">cnFillPalette</span>        = <span class="string">"gui_default"</span></span><br><span class="line">  res@<span class="attr">cnLinesOn</span>            = False              ; <span class="literal">and</span> uses less memory.</span><br><span class="line">  res@<span class="attr">cnLineLabelsOn</span>       = False</span><br><span class="line">  res@<span class="attr">trGridType</span>           = <span class="string">"TriangularMesh"</span>   ; Caution!!! can not ignore!</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; set for <span class="built_in">map</span></span><br><span class="line">  res@<span class="attr">mpLimitMode</span>                = <span class="string">"LatLon"</span></span><br><span class="line">  res@<span class="attr">mpMinLatF</span>                  = minlat</span><br><span class="line">  res@<span class="attr">mpMaxLatF</span>                  = maxlat</span><br><span class="line">  res@<span class="attr">mpMinLonF</span>                  = minlon</span><br><span class="line">  res@<span class="attr">mpMaxLonF</span>                  = maxlon</span><br><span class="line">  </span><br><span class="line">  res@<span class="attr">mpFillOn</span>                   = True</span><br><span class="line">  res@<span class="attr">mpDataSetName</span>              = <span class="string">"/Users/zhpfu/Downloads/DATA_MAC/FY_satellite/FY4A/NCL-Chinamap/database/Earth..4"</span></span><br><span class="line">  res@<span class="attr">mpDataBaseVersion</span>          = <span class="string">"MediumRes"</span> ; <span class="literal">or</span> <span class="string">"Ncarg4_1"</span></span><br><span class="line">  res@<span class="attr">mpAreaMaskingOn</span>            = True</span><br><span class="line">  res@<span class="attr">mpMaskAreaSpecifiers</span>       = (/<span class="string">"China"</span>/)</span><br><span class="line">  res@<span class="attr">mpOutlineSpecifiers</span>        = (/<span class="string">"China"</span>,<span class="string">"China:Provinces"</span>/)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  res@<span class="attr">mpLandFillColor</span>            = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpInlandWaterFillColor</span>     = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpOceanFillColor</span>           = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpFillBoundarySets</span>         = <span class="string">"NoBoundaries"</span></span><br><span class="line">  res@<span class="attr">mpOutlineBoundarySets</span>      = <span class="string">"NoBoundaries"</span></span><br><span class="line">  res@<span class="attr">mpNationalLineColor</span>        = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpProvincialLineColor</span>      = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpGeophysicalLineColor</span>     = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpNationalLineThicknessF</span>   = <span class="number">2</span></span><br><span class="line">  res@<span class="attr">mpProvincialLineThicknessF</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; set for the plot</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">cnFillDrawOrder</span>      = <span class="string">"PreDraw"</span></span><br><span class="line">  res@<span class="attr">cnLevelSelectionMode</span> = <span class="string">"ManualLevels"</span>     ; set manual contour levels</span><br><span class="line">  res@<span class="attr">cnMinLevelValF</span>       = <span class="number">100</span>;min(olr)           ; set min contour level</span><br><span class="line">  res@<span class="attr">cnMaxLevelValF</span>       = <span class="number">300</span>;max(olr)           ; set max contour level</span><br><span class="line">  res@<span class="attr">cnLevelSpacingF</span>      = <span class="number">5.0</span>               ; set contour spacing</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">gsnAddCyclic</span>         = False </span><br><span class="line"> </span><br><span class="line">  ; res@<span class="attr">tmXTOn</span>               = True</span><br><span class="line">  ; res@<span class="attr">tmYROn</span>               = True</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">lbOrientation</span>        = <span class="string">"Horizontal"</span>         ; vertical labelbar</span><br><span class="line">  res@<span class="attr">pmTickMarkDisplayMode=</span> <span class="string">"Always"</span></span><br><span class="line">  ; res@<span class="attr">pmLabelBarOrthogonalPosF</span>  = <span class="number">0.00</span>          ; Move labelbar up</span><br><span class="line">  ; res@<span class="attr">pmLabelBarParallelPosF</span>    = <span class="number">0.00</span>          ; Move labelbar Right</span><br><span class="line">  res@<span class="attr">pmLabelBarWidthF</span>     = <span class="number">0.65</span></span><br><span class="line">  res@<span class="attr">pmLabelBarHeightF</span>    = <span class="number">0.08</span></span><br><span class="line">  res@<span class="attr">lbLabelFontHeightF</span>   = <span class="number">0.018</span></span><br><span class="line">  res@<span class="attr">lbPerimOn</span>            = False</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">lbLabelAutoStride</span>    = True               ; Clean up labelbar labels.</span><br><span class="line">  res@<span class="attr">lbBoxLinesOn</span>         = False              ; No labelbar box lines. </span><br><span class="line">  res@<span class="attr">lbLabelFontHeightF</span>   = <span class="number">0.01</span>               ; make labels smaller ( <span class="attr">default=0.02</span> )</span><br><span class="line">  res@<span class="attr">lbBoxEndCapStyle</span>     = <span class="string">"TriangleBothEnds"</span> ; set the two-end triangle </span><br><span class="line">  res@<span class="attr">tiXAxisString</span>        = <span class="string">""</span></span><br><span class="line">  res@<span class="attr">tiYAxisString</span>        = <span class="string">""</span> </span><br><span class="line">  res@<span class="attr">gsnStringFontHeightF</span> = <span class="number">0.012</span></span><br><span class="line">  res@<span class="attr">gsnLeftString</span>        = <span class="string">"OLR"</span></span><br><span class="line">  res@<span class="attr">gsnRightString</span>       = <span class="string">"W/m~S~2~E~"</span>;<span class="string">"W/m2"</span></span><br><span class="line">   </span><br><span class="line">  <span class="attr">plot</span> = gsn_csm_contour_map(wks,olr,res) ; create plot</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; add South China Sea  </span><br><span class="line">  <span class="attr">nhres</span>                          = res</span><br><span class="line">  nhres@<span class="attr">gsnMaximize</span>              = False</span><br><span class="line">  nhres@<span class="attr">vpHeightF</span>                = <span class="number">0.18</span>    </span><br><span class="line">  nhres@<span class="attr">vpWidthF</span>                 = <span class="number">0.18</span></span><br><span class="line">    </span><br><span class="line">  nhres@<span class="attr">mpMinLatF</span>                =   <span class="number">2</span>    </span><br><span class="line">  nhres@<span class="attr">mpMaxLatF</span>                =  <span class="number">23</span></span><br><span class="line">  nhres@<span class="attr">mpMinLonF</span>                = <span class="number">105</span></span><br><span class="line">  nhres@<span class="attr">mpMaxLonF</span>                = <span class="number">123</span></span><br><span class="line">  nhres@<span class="attr">lbLabelBarOn</span>             = False</span><br><span class="line">  nhres@<span class="attr">tmXBOn</span>                   = False </span><br><span class="line">  nhres@<span class="attr">tmXTOn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">tmYLOn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">tmYROn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">gsnLeftString</span>            = <span class="string">""</span></span><br><span class="line">  nhres@<span class="attr">gsnRightString</span>           = <span class="string">""</span></span><br><span class="line">  <span class="attr">map_nanhai</span> = gsn_csm_contour_map(wks,olr,nhres)</span><br><span class="line">  <span class="attr">adres</span>                          = True</span><br><span class="line">  adres@<span class="attr">amParallelPosF</span>           = <span class="number">0.499</span> ; -<span class="number">0.5</span> is the left edge of the plot.</span><br><span class="line">  adres@<span class="attr">amOrthogonalPosF</span>         = <span class="number">0.50</span>  ; -<span class="number">0.5</span> is the top edge of the plot.</span><br><span class="line">  adres@<span class="attr">amJust</span>                   = <span class="string">"BottomRight"</span></span><br><span class="line">  <span class="attr">plotnh</span> = gsn_add_annotation(plot,map_nanhai,adres)</span><br><span class="line">; add Changjiang <span class="literal">and</span> Huanghe river  </span><br><span class="line">  <span class="attr">river</span>                          = True</span><br><span class="line">  river@<span class="attr">gsLineThicknessF</span>         = <span class="number">3.0</span>       </span><br><span class="line">  river@<span class="attr">gsLineColor</span>              = <span class="string">"blue"</span></span><br><span class="line">  <span class="attr">plotrv</span> = gsn_add_shapefile_polylines(wks,plot,<span class="string">"/Users/zhpfu/Downloads/DATA_MAC/00_FY_satellite/FY4A/NCL-Chinamap/cnmap_NetCDF/river.nc"</span>,river)</span><br><span class="line">  draw(plot)</span><br><span class="line">  frame(wks)</span><br><span class="line"></span><br><span class="line">  print_elapsed_time(start_time,<span class="string">"Plotting Over &gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/FY4A_OLR_plot_China.png" alt></p><h3 id="03-中国区域FY4-AGRI-L2-OLR插值数据经纬度网格投影绘图和脚本"><a href="#03-中国区域FY4-AGRI-L2-OLR插值数据经纬度网格投影绘图和脚本" class="headerlink" title="03.中国区域FY4_AGRI_L2 OLR插值数据经纬度网格投影绘图和脚本"></a>03.中国区域FY4_AGRI_L2 OLR插值数据经纬度网格投影绘图和脚本</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br></pre></td><td class="code"><pre><span class="line">; =============================================================================</span><br><span class="line">; Author: Gavin | Affiliation: NJU</span><br><span class="line">; Email : Zhpfu.atm@gmail.com</span><br><span class="line">; Last modified:<span class="number">2018</span>-<span class="number">06</span>-<span class="number">18</span> <span class="number">01</span>:<span class="number">15</span></span><br><span class="line">; Filename:FY4A_regrid_latlon2d_to_rectilinear_grid.ncl</span><br><span class="line">; Description: Transform xy kilometer to lat lon grid;</span><br><span class="line">;              Output data <span class="keyword">with</span> NetCDF; </span><br><span class="line">; To Be Determined(TBD):  </span><br><span class="line">;               技巧-对于不同且常用的resource可以分门别类的记录在quivar/OneNote</span><br><span class="line">;               存在的问题是用rcm2rgrid_Wrap无法插值出有效的数值</span><br><span class="line">; =============================================================================</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; Given a start time <span class="literal">and</span> a title, this procedure calls get_cpu_time()</span><br><span class="line">; to get the end_time, <span class="keyword">then</span> prints <span class="string">"elapsed time"</span> information.</span><br><span class="line">; =============================================================================</span><br><span class="line">procedure print_elapsed_time(start_time,title)</span><br><span class="line">local end_time</span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">  <span class="attr">end_time</span> = get_cpu_time()</span><br><span class="line">  print(<span class="string">"======================================================================"</span>)</span><br><span class="line">  print(title + <span class="string">" elapsed time = "</span> + (end_time-start_time) + <span class="string">" CPU seconds."</span>)</span><br><span class="line">  print(<span class="string">"======================================================================"</span>)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; ===================================<span class="attr">MAIN======================================</span></span><br><span class="line">; =============================================================================</span><br><span class="line">load <span class="string">"$NCARG_ROOT/lib/ncarg/nclscripts/esmf/ESMF_regridding.ncl"</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">start_time</span> = get_cpu_time()</span><br><span class="line"></span><br><span class="line">  <span class="attr">fpath</span> = <span class="string">"/Users/zhpfu/Downloads/DATA_MAC/00_FY_satellite/FY4A/"</span></span><br><span class="line">  <span class="attr">fname</span> = <span class="string">"FY4A-_AGRI--_N_DISK_1047E_L2-_OLR-_MULT_NOM_20180104000000_20180104001459_4000M_V0001.NC"</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">f1</span>    = addfile(fpath+fname,<span class="string">"r"</span>)</span><br><span class="line">  <span class="attr">geohdf=</span> <span class="string">"FY4A_OBI_4000M_NOM_LATLON.HDF"</span></span><br><span class="line">  <span class="attr">f2</span>    = addfile(fpath+geohdf,<span class="string">"r"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">lon2d</span> = f2-&gt;Lon(:,:)</span><br><span class="line">  <span class="attr">lat2d</span> = f2-&gt;Lat(:,:)</span><br><span class="line"></span><br><span class="line">; Set default value  </span><br><span class="line">; <span class="number">65534</span> is the area out of Earth   </span><br><span class="line">  lon2d@<span class="attr">_FillValue</span> = <span class="number">65534</span></span><br><span class="line">  lat2d@<span class="attr">_FillValue</span> = <span class="number">65534</span></span><br><span class="line"></span><br><span class="line">  ; <span class="keyword">if</span> (any(ismissing(ndtooned(lon2d)))) <span class="keyword">then</span></span><br><span class="line">  ;   print(<span class="string">"Missing longitude coordinates detected"</span>)</span><br><span class="line">  ; end <span class="keyword">if</span> </span><br><span class="line"></span><br><span class="line">  ; <span class="keyword">if</span> (any(ismissing(ndtooned(lat2d)))) <span class="keyword">then</span></span><br><span class="line">  ;   print(<span class="string">"Missing latitude coordinates detected"</span>)</span><br><span class="line">  ; end <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">; Set the specific area to plot</span><br><span class="line">  <span class="attr">minlat</span>   =   <span class="number">15</span></span><br><span class="line">  <span class="attr">maxlat</span>   =   <span class="number">55</span></span><br><span class="line">  <span class="attr">minlon</span>   =   <span class="number">72</span></span><br><span class="line">  <span class="attr">maxlon</span>   =   <span class="number">136</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">olr</span>      =short2flt(f1-&gt;OLR)</span><br><span class="line">  olr@<span class="attr">_FillValue</span> = <span class="number">32766</span></span><br><span class="line"></span><br><span class="line">; Add the attributes</span><br><span class="line">  lat2d@<span class="attr">units</span>  = <span class="string">"degrees_north"</span></span><br><span class="line">  lon2d@<span class="attr">units</span>  = <span class="string">"degrees_east"</span></span><br><span class="line">  olr@<span class="attr">lat2d</span>    = lat2d</span><br><span class="line">  olr@<span class="attr">lon2d</span>    = lon2d</span><br><span class="line">  olr@<span class="attr">units</span>    = <span class="string">"W/M2"</span></span><br><span class="line">  olr@<span class="attr">coordinates</span> = <span class="string">"lat2d lon2d"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; Options to set for regridding</span><br><span class="line">  <span class="attr">interp_method</span> = <span class="string">"bilinear"</span>  ; Interpolation method: <span class="string">"bilinear"</span> (default), <span class="string">"patch"</span>, <span class="literal">or</span> <span class="string">"conserve"</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">Opt</span> = True</span><br><span class="line">  Opt@<span class="attr">WgtFileName</span>      = <span class="string">"XY_to_rect.nc"</span></span><br><span class="line"></span><br><span class="line">  Opt@<span class="attr">SrcGridLat</span>       = lat2d</span><br><span class="line">  Opt@<span class="attr">SrcGridLon</span>       = lon2d</span><br><span class="line">  </span><br><span class="line">  Opt@<span class="attr">SrcRegional</span>      = True    ; the default</span><br><span class="line">  Opt@<span class="attr">SrcInputFileName</span> = fpath+fname  </span><br><span class="line">  Opt@<span class="attr">DstRegional</span>      = True</span><br><span class="line">  Opt@<span class="attr">SrcMask2D</span>        = where(.not.ismissing(olr),<span class="number">1</span>,<span class="number">0</span>) ; Necessary <span class="keyword">if</span> has</span><br><span class="line">                                                          ; missing values.</span><br><span class="line">  Opt@<span class="attr">InterpMethod</span>     = interp_method</span><br><span class="line"></span><br><span class="line">  Opt@<span class="attr">DstGridType</span>      = <span class="string">"0.5deg"</span>        ; destination grid</span><br><span class="line">  Opt@<span class="attr">DstTitle</span>         = <span class="string">"China Grid 0.5 degree resolution"</span></span><br><span class="line">  Opt@<span class="attr">DstLLCorner</span>      = (/minlat, minlon/)      ;;--Change (maybe)</span><br><span class="line">  Opt@<span class="attr">DstURCorner</span>      = (/maxlat, maxlon/)      ;;--Change (maybe)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  Opt@<span class="attr">ForceOverwrite</span>   = True</span><br><span class="line">  Opt@<span class="attr">CopyVarCoords</span>    = True</span><br><span class="line">  Opt@<span class="attr">Debug</span>            = True</span><br><span class="line"></span><br><span class="line">  <span class="attr">OLR</span> = ESMF_regrid(olr,Opt)</span><br><span class="line">  printVarSummary(OLR)</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; Use the rcm2rgrid_Wrap to regridding</span><br><span class="line">   <span class="attr">lat</span>        = new(<span class="number">81</span> , <span class="string">"float"</span>,lat2d@_FillValue)</span><br><span class="line">   <span class="attr">lon</span>        = new(<span class="number">129</span>, <span class="string">"float"</span>,lon2d@_FillValue)</span><br><span class="line"></span><br><span class="line">   <span class="attr">lat</span>        = ispan(minlat*<span class="number">10</span>,maxlat*<span class="number">10</span>,<span class="number">5</span>)*<span class="number">0.1</span></span><br><span class="line">   <span class="attr">lon</span>        = ispan(minlon*<span class="number">10</span>,maxlon*<span class="number">10</span>,<span class="number">5</span>)*<span class="number">0.1</span></span><br><span class="line">   lat@<span class="attr">_FillValue</span> = <span class="number">65534</span>.</span><br><span class="line">   lon@<span class="attr">_FillValue</span> = <span class="number">65534</span>.</span><br><span class="line">  ; <span class="attr">OLR</span>        = rcm2rgrid_Wrap(olr@lat2d,olr@lon2d,olr,lat,lon,<span class="number">0</span>)</span><br><span class="line">; =============================================================================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  lat@<span class="attr">units</span>  = <span class="string">"degrees_north"</span>     ;don't forget to assign the LatLon attributes</span><br><span class="line">  lon@<span class="attr">units</span>  = <span class="string">"degrees_east"</span></span><br><span class="line">  lat!<span class="number">0</span>      = <span class="string">"lat"</span></span><br><span class="line">  lat&amp;<span class="attr">lat</span>    = lat</span><br><span class="line">  lon!<span class="number">0</span>      = <span class="string">"lon"</span></span><br><span class="line">  lon&amp;<span class="attr">lon</span>    = lon </span><br><span class="line"></span><br><span class="line">  OLR!<span class="number">0</span>      = <span class="string">"lat"</span></span><br><span class="line">  OLR&amp;<span class="attr">lat</span>    = lat</span><br><span class="line">  OLR!<span class="number">1</span>      = <span class="string">"lon"</span></span><br><span class="line">  OLR&amp;<span class="attr">lon</span>    = lon</span><br><span class="line">  OLR@<span class="attr">units</span>  = <span class="string">"W/M2"</span></span><br><span class="line">  OLR@<span class="attr">coordinates</span> = <span class="string">"latlon"</span></span><br><span class="line"></span><br><span class="line">  printVarSummary(OLR)</span><br><span class="line"></span><br><span class="line">  print(<span class="string">"Get subregional data!"</span>)</span><br><span class="line">;===================================================================  </span><br><span class="line">; Assume variables T, PS <span class="literal">and</span> ORO exist <span class="literal">and</span> that they have </span><br><span class="line">; associated meta data: (a) coordinate variables time, lev, lat, lon       </span><br><span class="line">; <span class="literal">and</span> (b) attributes</span><br><span class="line">;===================================================================                                            </span><br><span class="line">  <span class="attr">nlat</span>  = dimsizes(lat)  </span><br><span class="line">  <span class="attr">nlon</span>  = dimsizes(lon)      </span><br><span class="line"></span><br><span class="line">  <span class="attr">filo</span>  = <span class="string">"OLR_China.nc"</span>             ; Output file</span><br><span class="line">  system(<span class="string">"/bin/rm -f "</span> + fpath + filo)    ; remove <span class="keyword">if</span> exists</span><br><span class="line">  <span class="attr">fout</span>  = addfile (fpath + filo, <span class="string">"c"</span>)  ; open output file</span><br><span class="line"></span><br><span class="line">;===================================================================</span><br><span class="line">; explicitly declare file definition mode. Improve efficiency.</span><br><span class="line">;===================================================================</span><br><span class="line">  setfileoption(fout,<span class="string">"DefineMode"</span>,True)</span><br><span class="line"></span><br><span class="line">;===================================================================</span><br><span class="line">; create global attributes of the file</span><br><span class="line">;===================================================================</span><br><span class="line">  <span class="attr">fAtt</span>               = True            ; assign file attributes</span><br><span class="line">  fAtt@<span class="attr">title</span>         = <span class="string">"NCL Efficient Approach to netCDF Creation"</span>  </span><br><span class="line">  fAtt@<span class="attr">source_file</span>   = <span class="string">""</span></span><br><span class="line">  fAtt@<span class="attr">Conventions</span>   = <span class="string">"None"</span>   </span><br><span class="line">  fAtt@<span class="attr">creation_date</span> = systemfunc (<span class="string">"date"</span>)        </span><br><span class="line">  fileattdef( fout, fAtt )            ; copy file attributes    </span><br><span class="line"></span><br><span class="line">;===================================================================</span><br><span class="line">; predefine the coordinate variables <span class="literal">and</span> their dimensionality</span><br><span class="line">; Note: to get an UNLIMITED record dimension, we set the dimensionality</span><br><span class="line">; to -<span class="number">1</span> (<span class="literal">or</span> the actual size) <span class="literal">and</span> set the dimension name to True.</span><br><span class="line">;===================================================================</span><br><span class="line">  <span class="attr">dimNames</span> = (/<span class="string">"lat"</span>, <span class="string">"lon"</span>/)  </span><br><span class="line">  <span class="attr">dimSizes</span> = (/nlat,  nlon/) </span><br><span class="line">  <span class="attr">dimUnlim</span> = (/False, False/)   </span><br><span class="line">  filedimdef(fout,dimNames,dimSizes,dimUnlim)</span><br><span class="line"></span><br><span class="line">;===================================================================</span><br><span class="line">; predefine the the dimensionality of the variables to be written out</span><br><span class="line">;===================================================================</span><br><span class="line">; Here we are using NCL functions to facilitate defining </span><br><span class="line">; each variable's dimension name(s) <span class="literal">and</span> type. </span><br><span class="line">; The following could be replaced <span class="keyword">with</span> explicit, user defined dimension </span><br><span class="line">; names different from those associated <span class="keyword">with</span> the variable <span class="keyword">in</span> memory. </span><br><span class="line">; Say, PS(time,lat,lon) <span class="keyword">in</span> the NCL script. They could be redefined for the file via: </span><br><span class="line">; filevardef(fout, <span class="string">"PS"</span>   ,typeof(PS) ,(/<span class="string">"TIME"</span>,<span class="string">"latitude"</span>,<span class="string">"longitude"</span>/)) </span><br><span class="line">;===================================================================                          </span><br><span class="line">  filevardef(fout, <span class="string">"lat"</span>    ,typeof(lat)  ,getvardims(lat))                          </span><br><span class="line">  filevardef(fout, <span class="string">"lon"</span>    ,typeof(lon)  ,getvardims(lon))                          </span><br><span class="line">  filevardef(fout, <span class="string">"OLR"</span>    ,typeof(OLR)  ,getvardims(OLR)) </span><br><span class="line"></span><br><span class="line">;===================================================================</span><br><span class="line">; Copy attributes associated <span class="keyword">with</span> each variable to the file</span><br><span class="line">; All attributes associated <span class="keyword">with</span> each variable will be copied.</span><br><span class="line">;====================================================================</span><br><span class="line">  filevarattdef(fout,<span class="string">"lat"</span>  ,lat)                     ; copy lat attributes</span><br><span class="line">  filevarattdef(fout,<span class="string">"lon"</span>  ,lon)                     ; copy lon attributes</span><br><span class="line">  filevarattdef(fout,<span class="string">"OLR"</span>  ,OLR)                     ; copy OLR attributes</span><br><span class="line">;===================================================================</span><br><span class="line">; explicitly exit file definition mode. **NOT REQUIRED**</span><br><span class="line">;===================================================================</span><br><span class="line">  setfileoption(fout,<span class="string">"DefineMode"</span>,False)</span><br><span class="line"></span><br><span class="line">;===================================================================</span><br><span class="line">; output only the data values since the dimensionality <span class="literal">and</span> such have</span><br><span class="line">; been predefined. The <span class="string">"(/"</span>, <span class="string">"/)"</span> syntax tells NCL to only output the</span><br><span class="line">; data values to the predefined locations on the file.</span><br><span class="line">;====================================================================</span><br><span class="line">  fout-&gt;<span class="attr">lat</span>    = (/lat/)</span><br><span class="line">  fout-&gt;<span class="attr">lon</span>    = (/lon/) </span><br><span class="line">  fout-&gt;<span class="attr">OLR</span>    = (/OLR/)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; ================================<span class="attr">plot=========================================</span></span><br><span class="line">; =============================================================================</span><br><span class="line"></span><br><span class="line">  <span class="attr">wks_type</span>          = <span class="string">"png"</span></span><br><span class="line">  wks_type@<span class="attr">wkWidth</span>  =  <span class="number">1200</span></span><br><span class="line">  wks_type@<span class="attr">wkHeight</span> =  <span class="number">1200</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">wks</span> = gsn_open_wks(wks_type,<span class="string">"FY4A_OLR_regrid_plot_China"</span>)              ; send graphics to PNG file</span><br><span class="line">  gsn_define_colormap(wks, <span class="string">"NCV_jet"</span>)  ;MPL_jet</span><br><span class="line"></span><br><span class="line">  ; <span class="attr">colors</span> = (/ (/<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>/),\</span><br><span class="line">  ;             (/<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>/),\</span><br><span class="line">  ;             (/<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.647</span>,<span class="number">0.953</span>,<span class="number">0.553</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.239</span>,<span class="number">0.725</span>,<span class="number">0.247</span>/), \</span><br><span class="line">  ;             (/<span class="number">0.388</span>,<span class="number">0.722</span>,<span class="number">0.976</span>/), \</span><br><span class="line">  ;             (/<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.996</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.953</span>,<span class="number">0.020</span>,<span class="number">0.933</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.506</span>,<span class="number">0</span>,<span class="number">0.251</span>/)/)</span><br><span class="line">  </span><br><span class="line">  ; gsn_define_colormap(wks,colors)     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">res</span>                      = True               ; plot mods desired</span><br><span class="line">  res@<span class="attr">gsnMaximize</span>          = True               ; maximize plot <span class="keyword">in</span> frame</span><br><span class="line">  res@<span class="attr">gsnDraw</span>              = False</span><br><span class="line">  res@<span class="attr">gsnFrame</span>             = False</span><br><span class="line">  res@<span class="attr">gsnSpreadColors</span>      = True              ; Use full color <span class="built_in">map</span> </span><br><span class="line"></span><br><span class="line">  ; res@<span class="attr">sfXArray</span>             = lon2d</span><br><span class="line">  ; res@<span class="attr">sfYArray</span>             = lat2d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  res@<span class="attr">cnFillOn</span>             = True               ; color fill </span><br><span class="line">  ; res@<span class="attr">cnFillMode</span>           = <span class="string">"RasterFill"</span>       ; Raster mode is much faster</span><br><span class="line">  ; res@<span class="attr">cnRasterSmoothingOn</span>  = True</span><br><span class="line">  ; res@<span class="attr">cnFillPalette</span>        = <span class="string">"gui_default"</span></span><br><span class="line">  res@<span class="attr">cnLinesOn</span>            = False              ; <span class="literal">and</span> uses less memory.</span><br><span class="line">  res@<span class="attr">cnLineLabelsOn</span>       = False</span><br><span class="line">  ; res@<span class="attr">trGridType</span>           = <span class="string">"TriangularMesh"</span>   ; Caution!!! can not ignore!</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; set for <span class="built_in">map</span></span><br><span class="line">  res@<span class="attr">mpLimitMode</span>                = <span class="string">"LatLon"</span></span><br><span class="line">  res@<span class="attr">mpMinLatF</span>                  = minlat</span><br><span class="line">  res@<span class="attr">mpMaxLatF</span>                  = maxlat</span><br><span class="line">  res@<span class="attr">mpMinLonF</span>                  = minlon</span><br><span class="line">  res@<span class="attr">mpMaxLonF</span>                  = maxlon</span><br><span class="line">  </span><br><span class="line">  res@<span class="attr">mpFillOn</span>                   = True</span><br><span class="line">  res@<span class="attr">mpDataSetName</span>              = <span class="string">"/Users/zhpfu/Downloads/DATA_MAC/00_FY_satellite/FY4A/NCL-Chinamap/database/Earth..4"</span></span><br><span class="line">  res@<span class="attr">mpDataBaseVersion</span>          = <span class="string">"MediumRes"</span> ; <span class="literal">or</span> <span class="string">"Ncarg4_1"</span></span><br><span class="line">  res@<span class="attr">mpAreaMaskingOn</span>            = True</span><br><span class="line">  res@<span class="attr">mpMaskAreaSpecifiers</span>       = (/<span class="string">"China"</span>/)</span><br><span class="line">  res@<span class="attr">mpOutlineSpecifiers</span>        = (/<span class="string">"China"</span>,<span class="string">"China:Provinces"</span>/)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  res@<span class="attr">mpLandFillColor</span>            = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpInlandWaterFillColor</span>     = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpOceanFillColor</span>           = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpFillBoundarySets</span>         = <span class="string">"NoBoundaries"</span></span><br><span class="line">  res@<span class="attr">mpOutlineBoundarySets</span>      = <span class="string">"NoBoundaries"</span></span><br><span class="line">  res@<span class="attr">mpNationalLineColor</span>        = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpProvincialLineColor</span>      = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpGeophysicalLineColor</span>     = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpNationalLineThicknessF</span>   = <span class="number">2</span></span><br><span class="line">  res@<span class="attr">mpProvincialLineThicknessF</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; set for the plot</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">cnFillDrawOrder</span>      = <span class="string">"PreDraw"</span></span><br><span class="line">  res@<span class="attr">cnLevelSelectionMode</span> = <span class="string">"ManualLevels"</span>     ; set manual contour levels</span><br><span class="line">  res@<span class="attr">cnMinLevelValF</span>       = <span class="number">100</span>;min(olr)           ; set min contour level</span><br><span class="line">  res@<span class="attr">cnMaxLevelValF</span>       = <span class="number">300</span>;max(olr)           ; set max contour level</span><br><span class="line">  res@<span class="attr">cnLevelSpacingF</span>      = <span class="number">5.0</span>               ; set contour spacing</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">gsnAddCyclic</span>         = False </span><br><span class="line"> </span><br><span class="line">  ; res@<span class="attr">tmXTOn</span>               = True</span><br><span class="line">  ; res@<span class="attr">tmYROn</span>               = True</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">lbOrientation</span>        = <span class="string">"Horizontal"</span>         ; vertical labelbar</span><br><span class="line">  res@<span class="attr">pmTickMarkDisplayMode=</span> <span class="string">"Always"</span></span><br><span class="line">  ; res@<span class="attr">pmLabelBarOrthogonalPosF</span>  = <span class="number">0.00</span>          ; Move labelbar up</span><br><span class="line">  ; res@<span class="attr">pmLabelBarParallelPosF</span>    = <span class="number">0.00</span>          ; Move labelbar Right</span><br><span class="line">  res@<span class="attr">pmLabelBarWidthF</span>     = <span class="number">0.65</span></span><br><span class="line">  res@<span class="attr">pmLabelBarHeightF</span>    = <span class="number">0.08</span></span><br><span class="line">  res@<span class="attr">lbLabelFontHeightF</span>   = <span class="number">0.018</span></span><br><span class="line">  res@<span class="attr">lbPerimOn</span>            = False</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">lbLabelAutoStride</span>    = True               ; Clean up labelbar labels.</span><br><span class="line">  res@<span class="attr">lbBoxLinesOn</span>         = False              ; No labelbar box lines. </span><br><span class="line">  res@<span class="attr">lbLabelFontHeightF</span>   = <span class="number">0.01</span>               ; make labels smaller ( <span class="attr">default=0.02</span> )</span><br><span class="line">  res@<span class="attr">lbBoxEndCapStyle</span>     = <span class="string">"TriangleBothEnds"</span> ; set the two-end triangle </span><br><span class="line">  res@<span class="attr">tiXAxisString</span>        = <span class="string">""</span></span><br><span class="line">  res@<span class="attr">tiYAxisString</span>        = <span class="string">""</span> </span><br><span class="line">  res@<span class="attr">gsnStringFontHeightF</span> = <span class="number">0.012</span></span><br><span class="line">  res@<span class="attr">gsnLeftString</span>        = <span class="string">"OLR"</span></span><br><span class="line">  res@<span class="attr">gsnRightString</span>       = <span class="string">"W/m~S~2~E~"</span>;<span class="string">"W/m2"</span></span><br><span class="line">   </span><br><span class="line">  <span class="attr">plot</span> = gsn_csm_contour_map(wks,OLR,res) ; create plot</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; add South China Sea  </span><br><span class="line">  <span class="attr">nhres</span>                          = res</span><br><span class="line">  nhres@<span class="attr">gsnMaximize</span>              = False</span><br><span class="line">  nhres@<span class="attr">vpHeightF</span>                = <span class="number">0.18</span>    </span><br><span class="line">  nhres@<span class="attr">vpWidthF</span>                 = <span class="number">0.18</span></span><br><span class="line">    </span><br><span class="line">  nhres@<span class="attr">mpMinLatF</span>                =   <span class="number">2</span>    </span><br><span class="line">  nhres@<span class="attr">mpMaxLatF</span>                =  <span class="number">23</span></span><br><span class="line">  nhres@<span class="attr">mpMinLonF</span>                = <span class="number">105</span></span><br><span class="line">  nhres@<span class="attr">mpMaxLonF</span>                = <span class="number">123</span></span><br><span class="line">  nhres@<span class="attr">lbLabelBarOn</span>             = False</span><br><span class="line">  nhres@<span class="attr">tmXBOn</span>                   = False </span><br><span class="line">  nhres@<span class="attr">tmXTOn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">tmYLOn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">tmYROn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">gsnLeftString</span>            = <span class="string">""</span></span><br><span class="line">  nhres@<span class="attr">gsnRightString</span>           = <span class="string">""</span></span><br><span class="line">  <span class="attr">map_nanhai</span> = gsn_csm_contour_map(wks,OLR,nhres)</span><br><span class="line">  <span class="attr">adres</span>                          = True</span><br><span class="line">  adres@<span class="attr">amParallelPosF</span>           = <span class="number">0.499</span> ; -<span class="number">0.5</span> is the left edge of the plot.</span><br><span class="line">  adres@<span class="attr">amOrthogonalPosF</span>         = <span class="number">0.50</span>  ; -<span class="number">0.5</span> is the top edge of the plot.</span><br><span class="line">  adres@<span class="attr">amJust</span>                   = <span class="string">"BottomRight"</span></span><br><span class="line">  <span class="attr">plotnh</span> = gsn_add_annotation(plot,map_nanhai,adres)</span><br><span class="line">; add Changjiang <span class="literal">and</span> Huanghe river  </span><br><span class="line">  <span class="attr">river</span>                          = True</span><br><span class="line">  river@<span class="attr">gsLineThicknessF</span>         = <span class="number">3.0</span>       </span><br><span class="line">  river@<span class="attr">gsLineColor</span>              = <span class="string">"blue"</span></span><br><span class="line">  <span class="attr">plotrv</span> = gsn_add_shapefile_polylines(wks,plot,<span class="string">"/Users/zhpfu/Downloads/DATA_MAC/00_FY_satellite/FY4A/NCL-Chinamap/cnmap_NetCDF/river.nc"</span>,river)</span><br><span class="line">  draw(plot)</span><br><span class="line">  frame(wks)</span><br><span class="line"></span><br><span class="line">  print_elapsed_time(start_time,<span class="string">"Game Over &gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/FY4A_OLR_regrid_plot_China.png" alt></p><h3 id="04-东亚区域MOD06-L2-Cloud-Top-Temperature原始数据绘图和脚本"><a href="#04-东亚区域MOD06-L2-Cloud-Top-Temperature原始数据绘图和脚本" class="headerlink" title="04.东亚区域MOD06_L2 Cloud_Top_Temperature原始数据绘图和脚本"></a>04.东亚区域MOD06_L2 Cloud_Top_Temperature原始数据绘图和脚本</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line">; =============================================================================</span><br><span class="line">; Author: Gavin | Affiliation: NJU</span><br><span class="line">; Email : Zhpfu.atm@gmail.com</span><br><span class="line">; Last modified:  <span class="number">2019</span>-<span class="number">07</span>-<span class="number">19</span> <span class="number">01</span>:<span class="number">15</span></span><br><span class="line">; Filename:   MODIS_Full_Area_regrid_latlon2d_to_rectilinear_grid.ncl</span><br><span class="line">; Description: Read MODIS  data; </span><br><span class="line">;              Take TCC for example; </span><br><span class="line">;              Mapping to specific area;</span><br><span class="line">;              Plotting China area <span class="keyword">with</span> China's nine-dash; </span><br><span class="line">;              Choosing different Map Projections; </span><br><span class="line">; To Be Determined(TBD):  </span><br><span class="line">;              问题：需要局部微调，经纬度刻度最好四周都有；投影方式暂时只有圆柱等距投影</span><br><span class="line">;                   Cylindrical Equidistant Projection；</span><br><span class="line">; =============================================================================</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; Given a start time <span class="literal">and</span> a title, this procedure calls get_cpu_time()</span><br><span class="line">; to get the end_time, <span class="keyword">then</span> prints <span class="string">"elapsed time"</span> information.</span><br><span class="line">; =============================================================================</span><br><span class="line">procedure print_elapsed_time(start_time,title)</span><br><span class="line">local end_time</span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">  <span class="attr">end_time</span> = get_cpu_time()</span><br><span class="line">  print(<span class="string">"======================================================================"</span>)</span><br><span class="line">  print(title + <span class="string">" elapsed time = "</span> + (end_time-start_time) + <span class="string">" CPU seconds."</span>)</span><br><span class="line">  print(<span class="string">"======================================================================"</span>)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; ===================================<span class="attr">MAIN======================================</span></span><br><span class="line">; =============================================================================</span><br><span class="line">  <span class="attr">start_time</span> = get_cpu_time()</span><br><span class="line"></span><br><span class="line">  <span class="attr">fpath</span> = <span class="string">"/Users/zhpfu/Downloads/DATA_MAC/MODIS/Full_Area/"</span></span><br><span class="line">  <span class="attr">fname</span> = <span class="string">"MOD06_L2.A2016095.0340.061.2017326010830.hdf"</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">f1</span>    = addfile(fpath+fname,<span class="string">"r"</span>)</span><br><span class="line"></span><br><span class="line">  <span class="attr">lon2d</span> = f1-&gt;Longitude(:,:)</span><br><span class="line">  <span class="attr">lat2d</span> = f1-&gt;Latitude(:,:)</span><br><span class="line"></span><br><span class="line">; Set default value  </span><br><span class="line">; <span class="number">65534</span> is the area out of Earth   </span><br><span class="line">  lon2d@<span class="attr">_FillValue</span> = -<span class="number">999.9</span></span><br><span class="line">  lat2d@<span class="attr">_FillValue</span> = -<span class="number">999.9</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (any(ismissing(ndtooned(lon2d)))) <span class="keyword">then</span></span><br><span class="line">    print(<span class="string">"Missing longitude coordinates detected"</span>)</span><br><span class="line">  end <span class="keyword">if</span> </span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (any(ismissing(ndtooned(lat2d)))) <span class="keyword">then</span></span><br><span class="line">    print(<span class="string">"Missing latitude coordinates detected"</span>)</span><br><span class="line">  end <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">; Set the specific area to plot</span><br><span class="line">  <span class="attr">minlat</span>   =   <span class="number">15</span></span><br><span class="line">  <span class="attr">maxlat</span>   =   <span class="number">75</span></span><br><span class="line">  <span class="attr">minlon</span>   =   <span class="number">72</span></span><br><span class="line">  <span class="attr">maxlon</span>   =   <span class="number">145</span></span><br><span class="line"></span><br><span class="line">; Read  cloud temperature.</span><br><span class="line">  <span class="attr">wv1s</span> = f1-&gt;Cloud_Top_Temperature</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; Apply scale <span class="literal">and</span> offset <span class="literal">and</span> convert to double.</span><br><span class="line">  <span class="attr">CTT0</span> =  wv1s@scale_factor*<span class="number">1</span>.d * (wv1s - wv1s@add_offset)</span><br><span class="line">  CTT0@<span class="attr">_FillValue</span> = -<span class="number">32768</span></span><br><span class="line"></span><br><span class="line">; Add the attributes</span><br><span class="line">  lat2d@<span class="attr">units</span>  = <span class="string">"degrees_north"</span></span><br><span class="line">  lon2d@<span class="attr">units</span>  = <span class="string">"degrees_east"</span></span><br><span class="line">  CTT0@<span class="attr">lat2d</span>    = lat2d</span><br><span class="line">  CTT0@<span class="attr">lon2d</span>    = lon2d</span><br><span class="line">  CTT0@<span class="attr">units</span>    = <span class="string">"K"</span></span><br><span class="line">  CTT0@<span class="attr">coordinates</span> = <span class="string">"lat2d lon2d"</span></span><br><span class="line"></span><br><span class="line">  print(<span class="string">"++++++++++++++++AAAAA++++++++++++++++++"</span>)</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; ================================<span class="attr">plot=========================================</span></span><br><span class="line">; =============================================================================</span><br><span class="line"></span><br><span class="line">  <span class="attr">wks_type</span>          = <span class="string">"png"</span></span><br><span class="line">  wks_type@<span class="attr">wkWidth</span>  =  <span class="number">2400</span></span><br><span class="line">  wks_type@<span class="attr">wkHeight</span> =  <span class="number">2400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">wks</span> = gsn_open_wks(wks_type,<span class="string">"MODIS_CTT_plot_China"</span>)              ; send graphics to PNG file</span><br><span class="line">  gsn_define_colormap(wks, <span class="string">"NCV_jet"</span>)  ;MPL_jet</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">res</span>                      = True               ; plot mods desired</span><br><span class="line">  res@<span class="attr">gsnMaximize</span>          = True               ; maximize plot <span class="keyword">in</span> frame</span><br><span class="line">  res@<span class="attr">gsnDraw</span>              = False</span><br><span class="line">  res@<span class="attr">gsnFrame</span>             = False</span><br><span class="line">  res@<span class="attr">gsnSpreadColors</span>      = True              ; Use full color <span class="built_in">map</span> </span><br><span class="line"></span><br><span class="line">  res@<span class="attr">sfXArray</span>             = lon2d</span><br><span class="line">  res@<span class="attr">sfYArray</span>             = lat2d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  res@<span class="attr">cnFillOn</span>             = True               ; color fill </span><br><span class="line">  res@<span class="attr">cnFillMode</span>           = <span class="string">"RasterFill"</span>       ; Raster mode is much faster</span><br><span class="line">  ; res@<span class="attr">cnRasterSmoothingOn</span>  = True</span><br><span class="line">  ; res@<span class="attr">cnFillPalette</span>        = <span class="string">"gui_default"</span></span><br><span class="line">  res@<span class="attr">cnLinesOn</span>            = False              ; <span class="literal">and</span> uses less memory.</span><br><span class="line">  res@<span class="attr">cnLineLabelsOn</span>       = False</span><br><span class="line">  ; res@<span class="attr">trGridType</span>           = <span class="string">"TriangularMesh"</span>   ; Caution!!! can not ignore!</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; set for <span class="built_in">map</span></span><br><span class="line">  res@<span class="attr">mpLimitMode</span>                = <span class="string">"LatLon"</span></span><br><span class="line">  res@<span class="attr">mpMinLatF</span>                  = minlat</span><br><span class="line">  res@<span class="attr">mpMaxLatF</span>                  = maxlat</span><br><span class="line">  res@<span class="attr">mpMinLonF</span>                  = minlon</span><br><span class="line">  res@<span class="attr">mpMaxLonF</span>                  = maxlon</span><br><span class="line">  </span><br><span class="line">  res@<span class="attr">mpFillOn</span>                   = True</span><br><span class="line">  res@<span class="attr">mpDataSetName</span>              = <span class="string">"/Users/zhpfu/Downloads/DATA_MAC/FY_satellite/FY4A/NCL-Chinamap/database/Earth..4"</span></span><br><span class="line">  res@<span class="attr">mpDataBaseVersion</span>          = <span class="string">"MediumRes"</span> ; <span class="literal">or</span> <span class="string">"Ncarg4_1"</span></span><br><span class="line">  res@<span class="attr">mpAreaMaskingOn</span>            = True</span><br><span class="line">  res@<span class="attr">mpMaskAreaSpecifiers</span>       = (/<span class="string">"China"</span>,<span class="string">"Japan"</span>, <span class="string">"North Korea"</span>,<span class="string">"South Korea"</span>, <span class="string">"Russia"</span>/)</span><br><span class="line">  res@<span class="attr">mpOutlineSpecifiers</span>        = (/<span class="string">"China"</span>,<span class="string">"China:Provinces"</span>/)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  res@<span class="attr">mpLandFillColor</span>            = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpInlandWaterFillColor</span>     = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpOceanFillColor</span>           = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpFillBoundarySets</span>         = <span class="string">"NoBoundaries"</span></span><br><span class="line">  res@<span class="attr">mpOutlineBoundarySets</span>      = <span class="string">"NoBoundaries"</span></span><br><span class="line">  res@<span class="attr">mpNationalLineColor</span>        = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpProvincialLineColor</span>      = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpGeophysicalLineColor</span>     = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpNationalLineThicknessF</span>   = <span class="number">2</span></span><br><span class="line">  res@<span class="attr">mpProvincialLineThicknessF</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; set for the plot</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">cnFillDrawOrder</span>      = <span class="string">"PreDraw"</span></span><br><span class="line">  res@<span class="attr">cnLevelSelectionMode</span> = <span class="string">"ManualLevels"</span>     ; set manual contour levels</span><br><span class="line">  res@<span class="attr">cnMinLevelValF</span>       = <span class="number">180</span>;min(olr)           ; set min contour level</span><br><span class="line">  res@<span class="attr">cnMaxLevelValF</span>       = <span class="number">280</span>;max(olr)           ; set max contour level</span><br><span class="line">  res@<span class="attr">cnLevelSpacingF</span>      = <span class="number">10.0</span>               ; set contour spacing</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">gsnAddCyclic</span>         = False </span><br><span class="line"> </span><br><span class="line">  ; res@<span class="attr">tmXTOn</span>               = True</span><br><span class="line">  ; res@<span class="attr">tmYROn</span>               = True</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">lbOrientation</span>        = <span class="string">"Horizontal"</span>         ; vertical labelbar</span><br><span class="line">  res@<span class="attr">pmTickMarkDisplayMode=</span> <span class="string">"Always"</span></span><br><span class="line">  ; res@<span class="attr">pmLabelBarOrthogonalPosF</span>  = <span class="number">0.00</span>          ; Move labelbar up</span><br><span class="line">  ; res@<span class="attr">pmLabelBarParallelPosF</span>    = <span class="number">0.00</span>          ; Move labelbar Right</span><br><span class="line">  res@<span class="attr">pmLabelBarWidthF</span>     = <span class="number">0.65</span></span><br><span class="line">  res@<span class="attr">pmLabelBarHeightF</span>    = <span class="number">0.08</span></span><br><span class="line">  res@<span class="attr">lbLabelFontHeightF</span>   = <span class="number">0.018</span></span><br><span class="line">  res@<span class="attr">lbPerimOn</span>            = False</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">lbLabelAutoStride</span>    = True               ; Clean up labelbar labels.</span><br><span class="line">  res@<span class="attr">lbBoxLinesOn</span>         = False              ; No labelbar box lines. </span><br><span class="line">  res@<span class="attr">lbLabelFontHeightF</span>   = <span class="number">0.01</span>               ; make labels smaller ( <span class="attr">default=0.02</span> )</span><br><span class="line">  res@<span class="attr">lbBoxEndCapStyle</span>     = <span class="string">"TriangleBothEnds"</span> ; set the two-end triangle </span><br><span class="line">  res@<span class="attr">tiXAxisString</span>        = <span class="string">""</span></span><br><span class="line">  res@<span class="attr">tiYAxisString</span>        = <span class="string">""</span> </span><br><span class="line">  res@<span class="attr">gsnStringFontHeightF</span> = <span class="number">0.012</span></span><br><span class="line">  res@<span class="attr">gsnLeftString</span>        = <span class="string">"Cloud_Top_Temperature"</span></span><br><span class="line">  res@<span class="attr">gsnRightString</span>       = <span class="string">"K"</span>;<span class="string">"W/m2"</span></span><br><span class="line">   </span><br><span class="line">  <span class="attr">plot</span> = gsn_csm_contour_map(wks,CTT0,res) ; create plot</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; add South China Sea  </span><br><span class="line">  <span class="attr">nhres</span>                          = res</span><br><span class="line">  nhres@<span class="attr">gsnMaximize</span>              = False</span><br><span class="line">  nhres@<span class="attr">vpHeightF</span>                = <span class="number">0.18</span>    </span><br><span class="line">  nhres@<span class="attr">vpWidthF</span>                 = <span class="number">0.18</span></span><br><span class="line">    </span><br><span class="line">  nhres@<span class="attr">mpMinLatF</span>                =   <span class="number">2</span>    </span><br><span class="line">  nhres@<span class="attr">mpMaxLatF</span>                =  <span class="number">23</span></span><br><span class="line">  nhres@<span class="attr">mpMinLonF</span>                = <span class="number">105</span></span><br><span class="line">  nhres@<span class="attr">mpMaxLonF</span>                = <span class="number">123</span></span><br><span class="line">  nhres@<span class="attr">lbLabelBarOn</span>             = False</span><br><span class="line">  nhres@<span class="attr">tmXBOn</span>                   = False </span><br><span class="line">  nhres@<span class="attr">tmXTOn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">tmYLOn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">tmYROn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">gsnLeftString</span>            = <span class="string">""</span></span><br><span class="line">  nhres@<span class="attr">gsnRightString</span>           = <span class="string">""</span></span><br><span class="line">  <span class="attr">map_nanhai</span> = gsn_csm_contour_map(wks,CTT0,nhres)</span><br><span class="line">  <span class="attr">adres</span>                          = True</span><br><span class="line">  adres@<span class="attr">amParallelPosF</span>           = <span class="number">0.499</span> ; -<span class="number">0.5</span> is the left edge of the plot.</span><br><span class="line">  adres@<span class="attr">amOrthogonalPosF</span>         = <span class="number">0.50</span>  ; -<span class="number">0.5</span> is the top edge of the plot.</span><br><span class="line">  adres@<span class="attr">amJust</span>                   = <span class="string">"BottomRight"</span></span><br><span class="line">  <span class="attr">plotnh</span> = gsn_add_annotation(plot,map_nanhai,adres)</span><br><span class="line">; add Changjiang <span class="literal">and</span> Huanghe river  </span><br><span class="line">  <span class="attr">river</span>                          = True</span><br><span class="line">  river@<span class="attr">gsLineThicknessF</span>         = <span class="number">3.0</span>       </span><br><span class="line">  river@<span class="attr">gsLineColor</span>              = <span class="string">"blue"</span></span><br><span class="line">  <span class="attr">plotrv</span> = gsn_add_shapefile_polylines(wks,plot,<span class="string">"/Users/zhpfu/Downloads/DATA_MAC/FY_satellite/FY4A/NCL-Chinamap/cnmap_NetCDF/river.nc"</span>,river)</span><br><span class="line">  draw(plot)</span><br><span class="line">  frame(wks)</span><br><span class="line"></span><br><span class="line">  print_elapsed_time(start_time,<span class="string">"Plotting Over &gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/MODIS_CTT_plot_China.png" alt></p><h3 id="05-东亚区域MOD06-L2-Cloud-Top-Temperature插值数据绘图和脚本"><a href="#05-东亚区域MOD06-L2-Cloud-Top-Temperature插值数据绘图和脚本" class="headerlink" title="05.东亚区域MOD06_L2 Cloud_Top_Temperature插值数据绘图和脚本"></a>05.东亚区域MOD06_L2 Cloud_Top_Temperature插值数据绘图和脚本</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br></pre></td><td class="code"><pre><span class="line">; =============================================================================</span><br><span class="line">; Author: Gavin | Affiliation: NJU</span><br><span class="line">; Email : Zhpfu.atm@gmail.com</span><br><span class="line">; Last modified:<span class="number">2019</span>-<span class="number">07</span>-<span class="number">19</span> <span class="number">01</span>:<span class="number">15</span></span><br><span class="line">; Filename:MODIS_Full_Area_regrid_latlon2d_to_rectilinear_grid.ncl</span><br><span class="line">; Description: Transform xy kilometer to lat lon grid;</span><br><span class="line">;              Output data <span class="keyword">with</span> NetCDF; </span><br><span class="line">; To Be Determined(TBD):  </span><br><span class="line">;               存在的问题是用rcm2rgrid_Wrap无法插值出有效的数值</span><br><span class="line">; =============================================================================</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; Given a start time <span class="literal">and</span> a title, this procedure calls get_cpu_time()</span><br><span class="line">; to get the end_time, <span class="keyword">then</span> prints <span class="string">"elapsed time"</span> information.</span><br><span class="line">; =============================================================================</span><br><span class="line">procedure print_elapsed_time(start_time,title)</span><br><span class="line">local end_time</span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">  <span class="attr">end_time</span> = get_cpu_time()</span><br><span class="line">  print(<span class="string">"======================================================================"</span>)</span><br><span class="line">  print(title + <span class="string">" elapsed time = "</span> + (end_time-start_time) + <span class="string">" CPU seconds."</span>)</span><br><span class="line">  print(<span class="string">"======================================================================"</span>)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; ===================================<span class="attr">MAIN======================================</span></span><br><span class="line">; =============================================================================</span><br><span class="line">load <span class="string">"$NCARG_ROOT/lib/ncarg/nclscripts/esmf/ESMF_regridding.ncl"</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">start_time</span> = get_cpu_time()</span><br><span class="line"></span><br><span class="line">  <span class="attr">fpath</span> = <span class="string">"/Users/zhpfu/Downloads/DATA_MAC/MODIS/Full_Area/"</span></span><br><span class="line">  <span class="attr">fname</span> = <span class="string">"MOD06_L2.A2016095.0340.061.2017326010830.hdf"</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">f1</span>    = addfile(fpath+fname,<span class="string">"r"</span>)</span><br><span class="line"></span><br><span class="line">  <span class="attr">lon2d</span> = f1-&gt;Longitude(:,:)</span><br><span class="line">  <span class="attr">lat2d</span> = f1-&gt;Latitude(:,:)</span><br><span class="line"></span><br><span class="line">; Set default value  </span><br><span class="line">; <span class="number">65534</span> is the area out of Earth   </span><br><span class="line">  lon2d@<span class="attr">_FillValue</span> = -<span class="number">999.9</span></span><br><span class="line">  lat2d@<span class="attr">_FillValue</span> = -<span class="number">999.9</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (any(ismissing(ndtooned(lon2d)))) <span class="keyword">then</span></span><br><span class="line">    print(<span class="string">"Missing longitude coordinates detected"</span>)</span><br><span class="line">  end <span class="keyword">if</span> </span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (any(ismissing(ndtooned(lat2d)))) <span class="keyword">then</span></span><br><span class="line">    print(<span class="string">"Missing latitude coordinates detected"</span>)</span><br><span class="line">  end <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">; Set the specific area to plot</span><br><span class="line">  <span class="attr">minlat</span>   =   <span class="number">15</span></span><br><span class="line">  <span class="attr">maxlat</span>   =   <span class="number">75</span></span><br><span class="line">  <span class="attr">minlon</span>   =   <span class="number">72</span></span><br><span class="line">  <span class="attr">maxlon</span>   =   <span class="number">145</span></span><br><span class="line"></span><br><span class="line">; Read  cloud temperature.</span><br><span class="line">  <span class="attr">wv1s</span> = f1-&gt;Cloud_Top_Temperature</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; Apply scale <span class="literal">and</span> offset <span class="literal">and</span> convert to double.</span><br><span class="line">  <span class="attr">CTT0</span> =  wv1s@scale_factor*<span class="number">1</span>.d * (wv1s - wv1s@add_offset)</span><br><span class="line">  CTT0@<span class="attr">_FillValue</span> = -<span class="number">32768</span></span><br><span class="line"></span><br><span class="line">; Add the attributes</span><br><span class="line">  lat2d@<span class="attr">units</span>  = <span class="string">"degrees_north"</span></span><br><span class="line">  lon2d@<span class="attr">units</span>  = <span class="string">"degrees_east"</span></span><br><span class="line">  CTT0@<span class="attr">lat2d</span>    = lat2d</span><br><span class="line">  CTT0@<span class="attr">lon2d</span>    = lon2d</span><br><span class="line">  CTT0@<span class="attr">units</span>    = <span class="string">"K"</span></span><br><span class="line">  CTT0@<span class="attr">coordinates</span> = <span class="string">"lat2d lon2d"</span></span><br><span class="line"></span><br><span class="line">  print(<span class="string">"++++++++++++++++AAAAA++++++++++++++++++"</span>)</span><br><span class="line"></span><br><span class="line">; Options to set for regridding</span><br><span class="line">  <span class="attr">interp_method</span> = <span class="string">"bilinear"</span>  ; Interpolation method: <span class="string">"bilinear"</span> (default), <span class="string">"patch"</span>, <span class="literal">or</span> <span class="string">"conserve"</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">Opt</span> = True</span><br><span class="line">  Opt@<span class="attr">WgtFileName</span>      = <span class="string">"XY_to_rect.nc"</span></span><br><span class="line"></span><br><span class="line">  Opt@<span class="attr">SrcGridLat</span>       = lat2d</span><br><span class="line">  Opt@<span class="attr">SrcGridLon</span>       = lon2d</span><br><span class="line">  </span><br><span class="line">  Opt@<span class="attr">SrcRegional</span>      = True    ; the default</span><br><span class="line">  Opt@<span class="attr">SrcInputFileName</span> = fpath+fname  </span><br><span class="line">  Opt@<span class="attr">DstRegional</span>      = True</span><br><span class="line">  Opt@<span class="attr">SrcMask2D</span>        = where(.not.ismissing(CTT0),<span class="number">1</span>,<span class="number">0</span>) ; Necessary <span class="keyword">if</span> has</span><br><span class="line">                                                          ; missing values.</span><br><span class="line">  Opt@<span class="attr">InterpMethod</span>     = interp_method</span><br><span class="line"></span><br><span class="line">  Opt@<span class="attr">DstGridType</span>      = <span class="string">"0.05deg"</span>        ; destination grid</span><br><span class="line">  Opt@<span class="attr">DstTitle</span>         = <span class="string">"China Grid 0.05 degree resolution"</span></span><br><span class="line">  Opt@<span class="attr">DstLLCorner</span>      = (/minlat, minlon/)      ;;--Change (maybe)</span><br><span class="line">  Opt@<span class="attr">DstURCorner</span>      = (/maxlat, maxlon/)      ;;--Change (maybe)</span><br><span class="line"></span><br><span class="line">  print(<span class="string">"++++++++++++++++BBBBB++++++++++++++++++"</span>)</span><br><span class="line"></span><br><span class="line">  Opt@<span class="attr">ForceOverwrite</span>   = True</span><br><span class="line">  Opt@<span class="attr">CopyVarCoords</span>    = True</span><br><span class="line">  Opt@<span class="attr">Debug</span>            = True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">CTT</span> = ESMF_regrid(CTT0,Opt)</span><br><span class="line">  printVarSummary(CTT)</span><br><span class="line">  print(<span class="string">"++++++++++++++++CCCCC++++++++++++++++++"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; ;---Interpolate to a <span class="number">0.05</span>x0.<span class="number">05</span> grid</span><br><span class="line">;    <span class="attr">Opt</span>                = True</span><br><span class="line">;    Opt@<span class="attr">ForceOverwrite</span> = True</span><br><span class="line">;    Opt@<span class="attr">Debug</span>          = True</span><br><span class="line"></span><br><span class="line">;    Opt@<span class="attr">DstGridType</span> = <span class="string">"0.05deg"</span></span><br><span class="line">;    Opt@<span class="attr">WgtFileName</span> = wgt_filename</span><br><span class="line">;    Opt@<span class="attr">SrcMask2D</span>   = where(.not.ismissing(CTT),<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line">;    <span class="attr">CTT</span>      = ESMF_regrid (CTT, opt)</span><br><span class="line">;    end <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">;    l3m_regrid@<span class="attr">long_name</span>  =  CTT@long_name + <span class="string">" (0.05x0.05)"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  print(<span class="string">"++++++++++++++++DDDDD++++++++++++++++++"</span>)</span><br><span class="line">; =============================================================================</span><br><span class="line">; Use the rcm2rgrid_Wrap to regridding</span><br><span class="line">   <span class="attr">lat</span>        = new(<span class="number">1201</span> , <span class="string">"float"</span>,lat2d@_FillValue)</span><br><span class="line">   <span class="attr">lon</span>        = new(<span class="number">1461</span>, <span class="string">"float"</span>,lon2d@_FillValue)</span><br><span class="line"></span><br><span class="line">   <span class="attr">lat</span>        = ispan(minlat*<span class="number">100</span>,maxlat*<span class="number">100</span>,<span class="number">5</span>)*<span class="number">0.01</span></span><br><span class="line">   <span class="attr">lon</span>        = ispan(minlon*<span class="number">100</span>,maxlon*<span class="number">100</span>,<span class="number">5</span>)*<span class="number">0.01</span></span><br><span class="line">   lat@<span class="attr">_FillValue</span> = -<span class="number">999.9</span></span><br><span class="line">   lon@<span class="attr">_FillValue</span> = -<span class="number">999.9</span></span><br><span class="line">; =============================================================================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  lat@<span class="attr">units</span>  = <span class="string">"degrees_north"</span>     ;don't forget to assign the LatLon attributes</span><br><span class="line">  lon@<span class="attr">units</span>  = <span class="string">"degrees_east"</span></span><br><span class="line">  lat!<span class="number">0</span>      = <span class="string">"lat"</span></span><br><span class="line">  lat&amp;<span class="attr">lat</span>    = lat</span><br><span class="line">  lon!<span class="number">0</span>      = <span class="string">"lon"</span></span><br><span class="line">  lon&amp;<span class="attr">lon</span>    = lon </span><br><span class="line"></span><br><span class="line">  CTT!<span class="number">0</span>      = <span class="string">"lat"</span></span><br><span class="line">  CTT&amp;<span class="attr">lat</span>    = lat</span><br><span class="line">  CTT!<span class="number">1</span>      = <span class="string">"lon"</span></span><br><span class="line">  CTT&amp;<span class="attr">lon</span>    = lon</span><br><span class="line">  CTT@<span class="attr">units</span>  = <span class="string">"K"</span></span><br><span class="line">  CTT@<span class="attr">coordinates</span> = <span class="string">"latlon"</span></span><br><span class="line"></span><br><span class="line">  printVarSummary(CTT)</span><br><span class="line"></span><br><span class="line">  print(<span class="string">"Get subregional data!"</span>)</span><br><span class="line">;===================================================================  </span><br><span class="line">; Assume variables T, PS <span class="literal">and</span> ORO exist <span class="literal">and</span> that they have </span><br><span class="line">; associated meta data: (a) coordinate variables time, lev, lat, lon       </span><br><span class="line">; <span class="literal">and</span> (b) attributes</span><br><span class="line">;===================================================================                                            </span><br><span class="line">  <span class="attr">nlat</span>  = dimsizes(lat)  </span><br><span class="line">  <span class="attr">nlon</span>  = dimsizes(lon)      </span><br><span class="line"></span><br><span class="line">  <span class="attr">filo</span>  = <span class="string">"CTT_China.nc"</span>             ; Output file</span><br><span class="line">  system(<span class="string">"/bin/rm -f "</span> + fpath + filo)    ; remove <span class="keyword">if</span> exists</span><br><span class="line">  <span class="attr">fout</span>  = addfile (fpath + filo, <span class="string">"c"</span>)  ; open output file</span><br><span class="line"></span><br><span class="line">;===================================================================</span><br><span class="line">; explicitly declare file definition mode. Improve efficiency.</span><br><span class="line">;===================================================================</span><br><span class="line">  setfileoption(fout,<span class="string">"DefineMode"</span>,True)</span><br><span class="line"></span><br><span class="line">;===================================================================</span><br><span class="line">; create global attributes of the file</span><br><span class="line">;===================================================================</span><br><span class="line">  <span class="attr">fAtt</span>               = True            ; assign file attributes</span><br><span class="line">  fAtt@<span class="attr">title</span>         = <span class="string">"NCL Efficient Approach to netCDF Creation"</span>  </span><br><span class="line">  fAtt@<span class="attr">source_file</span>   = <span class="string">""</span></span><br><span class="line">  fAtt@<span class="attr">Conventions</span>   = <span class="string">"None"</span>   </span><br><span class="line">  fAtt@<span class="attr">creation_date</span> = systemfunc (<span class="string">"date"</span>)        </span><br><span class="line">  fileattdef( fout, fAtt )            ; copy file attributes    </span><br><span class="line"></span><br><span class="line">;===================================================================</span><br><span class="line">; predefine the coordinate variables <span class="literal">and</span> their dimensionality</span><br><span class="line">; Note: to get an UNLIMITED record dimension, we set the dimensionality</span><br><span class="line">; to -<span class="number">1</span> (<span class="literal">or</span> the actual size) <span class="literal">and</span> set the dimension name to True.</span><br><span class="line">;===================================================================</span><br><span class="line">  <span class="attr">dimNames</span> = (/<span class="string">"lat"</span>, <span class="string">"lon"</span>/)  </span><br><span class="line">  <span class="attr">dimSizes</span> = (/nlat,  nlon/) </span><br><span class="line">  <span class="attr">dimUnlim</span> = (/False, False/)   </span><br><span class="line">  filedimdef(fout,dimNames,dimSizes,dimUnlim)</span><br><span class="line"></span><br><span class="line">;===================================================================</span><br><span class="line">; predefine the the dimensionality of the variables to be written out</span><br><span class="line">;===================================================================</span><br><span class="line">; Here we are using NCL functions to facilitate defining </span><br><span class="line">; each variable's dimension name(s) <span class="literal">and</span> type. </span><br><span class="line">; The following could be replaced <span class="keyword">with</span> explicit, user defined dimension </span><br><span class="line">; names different from those associated <span class="keyword">with</span> the variable <span class="keyword">in</span> memory. </span><br><span class="line">; Say, PS(time,lat,lon) <span class="keyword">in</span> the NCL script. They could be redefined for the file via: </span><br><span class="line">; filevardef(fout, <span class="string">"PS"</span>   ,typeof(PS) ,(/<span class="string">"TIME"</span>,<span class="string">"latitude"</span>,<span class="string">"longitude"</span>/)) </span><br><span class="line">;===================================================================                          </span><br><span class="line">  filevardef(fout, <span class="string">"lat"</span>    ,typeof(lat)  ,getvardims(lat))                          </span><br><span class="line">  filevardef(fout, <span class="string">"lon"</span>    ,typeof(lon)  ,getvardims(lon))                          </span><br><span class="line">  filevardef(fout, <span class="string">"CTT"</span>    ,typeof(CTT)  ,getvardims(CTT)) </span><br><span class="line"></span><br><span class="line">;===================================================================</span><br><span class="line">; Copy attributes associated <span class="keyword">with</span> each variable to the file</span><br><span class="line">; All attributes associated <span class="keyword">with</span> each variable will be copied.</span><br><span class="line">;====================================================================</span><br><span class="line">  filevarattdef(fout,<span class="string">"lat"</span>  ,lat)                     ; copy lat attributes</span><br><span class="line">  filevarattdef(fout,<span class="string">"lon"</span>  ,lon)                     ; copy lon attributes</span><br><span class="line">  filevarattdef(fout,<span class="string">"CTT"</span>  ,CTT)                     ; copy CTT attributes</span><br><span class="line">;===================================================================</span><br><span class="line">; explicitly exit file definition mode. **NOT REQUIRED**</span><br><span class="line">;===================================================================</span><br><span class="line">  setfileoption(fout,<span class="string">"DefineMode"</span>,False)</span><br><span class="line"></span><br><span class="line">;===================================================================</span><br><span class="line">; output only the data values since the dimensionality <span class="literal">and</span> such have</span><br><span class="line">; been predefined. The <span class="string">"(/"</span>, <span class="string">"/)"</span> syntax tells NCL to only output the</span><br><span class="line">; data values to the predefined locations on the file.</span><br><span class="line">;====================================================================</span><br><span class="line">  fout-&gt;<span class="attr">lat</span>    = (/lat/)</span><br><span class="line">  fout-&gt;<span class="attr">lon</span>    = (/lon/) </span><br><span class="line">  fout-&gt;<span class="attr">CTT</span>    = (/CTT/)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; ================================<span class="attr">plot=========================================</span></span><br><span class="line">; =============================================================================</span><br><span class="line"></span><br><span class="line">  <span class="attr">wks_type</span>          = <span class="string">"png"</span></span><br><span class="line">  wks_type@<span class="attr">wkWidth</span>  =  <span class="number">2400</span></span><br><span class="line">  wks_type@<span class="attr">wkHeight</span> =  <span class="number">2400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">wks</span> = gsn_open_wks(wks_type,<span class="string">"MODIS_CTT_regrid_plot_China"</span>)              ; send graphics to PNG file</span><br><span class="line">  gsn_define_colormap(wks, <span class="string">"NCV_jet"</span>)  ;MPL_jet</span><br><span class="line"></span><br><span class="line">  ; <span class="attr">colors</span> = (/ (/<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>/),\</span><br><span class="line">  ;             (/<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>/),\</span><br><span class="line">  ;             (/<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.647</span>,<span class="number">0.953</span>,<span class="number">0.553</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.239</span>,<span class="number">0.725</span>,<span class="number">0.247</span>/), \</span><br><span class="line">  ;             (/<span class="number">0.388</span>,<span class="number">0.722</span>,<span class="number">0.976</span>/), \</span><br><span class="line">  ;             (/<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.996</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.953</span>,<span class="number">0.020</span>,<span class="number">0.933</span>/),\</span><br><span class="line">  ;             (/<span class="number">0.506</span>,<span class="number">0</span>,<span class="number">0.251</span>/)/)</span><br><span class="line">  </span><br><span class="line">  ; gsn_define_colormap(wks,colors)     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">res</span>                      = True               ; plot mods desired</span><br><span class="line">  res@<span class="attr">gsnMaximize</span>          = True               ; maximize plot <span class="keyword">in</span> frame</span><br><span class="line">  res@<span class="attr">gsnDraw</span>              = False</span><br><span class="line">  res@<span class="attr">gsnFrame</span>             = False</span><br><span class="line">  res@<span class="attr">gsnSpreadColors</span>      = True              ; Use full color <span class="built_in">map</span> </span><br><span class="line"></span><br><span class="line">  ; res@<span class="attr">sfXArray</span>             = lon2d</span><br><span class="line">  ; res@<span class="attr">sfYArray</span>             = lat2d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  res@<span class="attr">cnFillOn</span>             = True               ; color fill </span><br><span class="line">  res@<span class="attr">cnFillMode</span>           = <span class="string">"RasterFill"</span>       ; Raster mode is much faster</span><br><span class="line">  ; res@<span class="attr">cnRasterSmoothingOn</span>  = True</span><br><span class="line">  ; res@<span class="attr">cnFillPalette</span>        = <span class="string">"gui_default"</span></span><br><span class="line">  res@<span class="attr">cnLinesOn</span>            = False              ; <span class="literal">and</span> uses less memory.</span><br><span class="line">  res@<span class="attr">cnLineLabelsOn</span>       = False</span><br><span class="line">  ; res@<span class="attr">trGridType</span>           = <span class="string">"TriangularMesh"</span>   ; Caution!!! can not ignore!</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; set for <span class="built_in">map</span></span><br><span class="line">  res@<span class="attr">mpLimitMode</span>                = <span class="string">"LatLon"</span></span><br><span class="line">  res@<span class="attr">mpMinLatF</span>                  = minlat</span><br><span class="line">  res@<span class="attr">mpMaxLatF</span>                  = maxlat</span><br><span class="line">  res@<span class="attr">mpMinLonF</span>                  = minlon</span><br><span class="line">  res@<span class="attr">mpMaxLonF</span>                  = maxlon</span><br><span class="line">  </span><br><span class="line">  res@<span class="attr">mpFillOn</span>                   = True</span><br><span class="line">  res@<span class="attr">mpDataSetName</span>              = <span class="string">"/Users/zhpfu/Downloads/DATA_MAC/FY_satellite/FY4A/NCL-Chinamap/database/Earth..4"</span></span><br><span class="line">  res@<span class="attr">mpDataBaseVersion</span>          = <span class="string">"MediumRes"</span> ; <span class="literal">or</span> <span class="string">"Ncarg4_1"</span></span><br><span class="line">  res@<span class="attr">mpAreaMaskingOn</span>            = True</span><br><span class="line">  res@<span class="attr">mpMaskAreaSpecifiers</span>       = (/<span class="string">"China"</span>,<span class="string">"Japan"</span>, <span class="string">"North Korea"</span>,<span class="string">"South Korea"</span>, <span class="string">"Russia"</span>/)</span><br><span class="line">  res@<span class="attr">mpOutlineSpecifiers</span>        = (/<span class="string">"China"</span>,<span class="string">"China:Provinces"</span>/)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  res@<span class="attr">mpLandFillColor</span>            = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpInlandWaterFillColor</span>     = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpOceanFillColor</span>           = <span class="string">"white"</span></span><br><span class="line">  res@<span class="attr">mpFillBoundarySets</span>         = <span class="string">"NoBoundaries"</span></span><br><span class="line">  res@<span class="attr">mpOutlineBoundarySets</span>      = <span class="string">"NoBoundaries"</span></span><br><span class="line">  res@<span class="attr">mpNationalLineColor</span>        = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpProvincialLineColor</span>      = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpGeophysicalLineColor</span>     = <span class="string">"black"</span></span><br><span class="line">  res@<span class="attr">mpNationalLineThicknessF</span>   = <span class="number">2</span></span><br><span class="line">  res@<span class="attr">mpProvincialLineThicknessF</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; set for the plot</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">cnFillDrawOrder</span>      = <span class="string">"PreDraw"</span></span><br><span class="line">  res@<span class="attr">cnLevelSelectionMode</span> = <span class="string">"ManualLevels"</span>     ; set manual contour levels</span><br><span class="line">  res@<span class="attr">cnMinLevelValF</span>       = <span class="number">180</span>;min(CTT)           ; set min contour level</span><br><span class="line">  res@<span class="attr">cnMaxLevelValF</span>       = <span class="number">280</span>;max(CTT)           ; set max contour level</span><br><span class="line">  res@<span class="attr">cnLevelSpacingF</span>      = <span class="number">10.0</span>               ; set contour spacing</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">gsnAddCyclic</span>         = False </span><br><span class="line"> </span><br><span class="line">  ; res@<span class="attr">tmXTOn</span>               = True</span><br><span class="line">  ; res@<span class="attr">tmYROn</span>               = True</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">lbOrientation</span>        = <span class="string">"Horizontal"</span>         ; vertical labelbar</span><br><span class="line">  res@<span class="attr">pmTickMarkDisplayMode=</span> <span class="string">"Always"</span></span><br><span class="line">  ; res@<span class="attr">pmLabelBarOrthogonalPosF</span>  = <span class="number">0.00</span>          ; Move labelbar up</span><br><span class="line">  ; res@<span class="attr">pmLabelBarParallelPosF</span>    = <span class="number">0.00</span>          ; Move labelbar Right</span><br><span class="line">  res@<span class="attr">pmLabelBarWidthF</span>     = <span class="number">0.65</span></span><br><span class="line">  res@<span class="attr">pmLabelBarHeightF</span>    = <span class="number">0.08</span></span><br><span class="line">  res@<span class="attr">lbLabelFontHeightF</span>   = <span class="number">0.018</span></span><br><span class="line">  res@<span class="attr">lbPerimOn</span>            = False</span><br><span class="line"></span><br><span class="line">  res@<span class="attr">lbLabelAutoStride</span>    = True               ; Clean up labelbar labels.</span><br><span class="line">  res@<span class="attr">lbBoxLinesOn</span>         = False              ; No labelbar box lines. </span><br><span class="line">  res@<span class="attr">lbLabelFontHeightF</span>   = <span class="number">0.01</span>               ; make labels smaller ( <span class="attr">default=0.02</span> )</span><br><span class="line">  res@<span class="attr">lbBoxEndCapStyle</span>     = <span class="string">"TriangleBothEnds"</span> ; set the two-end triangle </span><br><span class="line">  res@<span class="attr">tiXAxisString</span>        = <span class="string">""</span></span><br><span class="line">  res@<span class="attr">tiYAxisString</span>        = <span class="string">""</span> </span><br><span class="line">  res@<span class="attr">gsnStringFontHeightF</span> = <span class="number">0.012</span></span><br><span class="line">  res@<span class="attr">gsnLeftString</span>        = <span class="string">"Cloud_Top_Temperature"</span></span><br><span class="line">  res@<span class="attr">gsnRightString</span>       = <span class="string">"K"</span>;<span class="string">"W/m2"</span></span><br><span class="line">   </span><br><span class="line">  <span class="attr">plot</span> = gsn_csm_contour_map(wks,CTT,res) ; create plot</span><br><span class="line"></span><br><span class="line">; =============================================================================</span><br><span class="line">; add South China Sea  </span><br><span class="line">  <span class="attr">nhres</span>                          = res</span><br><span class="line">  nhres@<span class="attr">gsnMaximize</span>              = False</span><br><span class="line">  nhres@<span class="attr">vpHeightF</span>                = <span class="number">0.18</span>    </span><br><span class="line">  nhres@<span class="attr">vpWidthF</span>                 = <span class="number">0.18</span></span><br><span class="line">    </span><br><span class="line">  nhres@<span class="attr">mpMinLatF</span>                =   <span class="number">2</span>    </span><br><span class="line">  nhres@<span class="attr">mpMaxLatF</span>                =  <span class="number">23</span></span><br><span class="line">  nhres@<span class="attr">mpMinLonF</span>                = <span class="number">105</span></span><br><span class="line">  nhres@<span class="attr">mpMaxLonF</span>                = <span class="number">123</span></span><br><span class="line">  nhres@<span class="attr">lbLabelBarOn</span>             = False</span><br><span class="line">  nhres@<span class="attr">tmXBOn</span>                   = False </span><br><span class="line">  nhres@<span class="attr">tmXTOn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">tmYLOn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">tmYROn</span>                   = False</span><br><span class="line">  nhres@<span class="attr">gsnLeftString</span>            = <span class="string">""</span></span><br><span class="line">  nhres@<span class="attr">gsnRightString</span>           = <span class="string">""</span></span><br><span class="line">  <span class="attr">map_nanhai</span> = gsn_csm_contour_map(wks,CTT,nhres)</span><br><span class="line">  <span class="attr">adres</span>                          = True</span><br><span class="line">  adres@<span class="attr">amParallelPosF</span>           = <span class="number">0.499</span> ; -<span class="number">0.5</span> is the left edge of the plot.</span><br><span class="line">  adres@<span class="attr">amOrthogonalPosF</span>         = <span class="number">0.50</span>  ; -<span class="number">0.5</span> is the top edge of the plot.</span><br><span class="line">  adres@<span class="attr">amJust</span>                   = <span class="string">"BottomRight"</span></span><br><span class="line">  <span class="attr">plotnh</span> = gsn_add_annotation(plot,map_nanhai,adres)</span><br><span class="line">; add Changjiang <span class="literal">and</span> Huanghe river  </span><br><span class="line">  <span class="attr">river</span>                          = True</span><br><span class="line">  river@<span class="attr">gsLineThicknessF</span>         = <span class="number">3.0</span>       </span><br><span class="line">  river@<span class="attr">gsLineColor</span>              = <span class="string">"blue"</span></span><br><span class="line">  <span class="attr">plotrv</span> = gsn_add_shapefile_polylines(wks,plot,<span class="string">"/Users/zhpfu/Downloads/DATA_MAC/FY_satellite/FY4A/NCL-Chinamap/cnmap_NetCDF/river.nc"</span>,river)</span><br><span class="line">  draw(plot)</span><br><span class="line">  frame(wks)</span><br><span class="line"></span><br><span class="line">  print_elapsed_time(start_time,<span class="string">"Game Over &gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/MODIS_CTT_regrid_plot_China.png" alt></p><h3 id="06-数据和脚本获取"><a href="#06-数据和脚本获取" class="headerlink" title="06.数据和脚本获取"></a>06.数据和脚本获取</h3><p>公众号后台回复：“fy4a”</p><h3 id="07-参考"><a href="#07-参考" class="headerlink" title="07.参考"></a>07.参考</h3><p><a href="1.https://www.ncl.ucar.edu/" target="_blank" rel="noopener">链接.1</a><br><a href="https://coding.net/u/huangynj/p/NCL-Chinamap/git" target="_blank" rel="noopener">链接.2</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/FY4A_OLR_plot_latlon2d_Lambert.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;本文在『气象学家』同步推送&lt;a href=&quot;https://mp.weixin.qq.com/s/atA9PlOM4F70CXHn8xLoSg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;；读取和处理了两种FY-4A和MODIS卫星数据，进行相关产品的绘图，插值为不同分辨率经纬度格点数据并保存为nc格式文件。抛砖引玉，不做更深入的分析。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术积累" scheme="https://gavin971.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="NCL" scheme="https://gavin971.github.io/tags/NCL/"/>
    
      <category term="FY-4A" scheme="https://gavin971.github.io/tags/FY-4A/"/>
    
      <category term="MODIS" scheme="https://gavin971.github.io/tags/MODIS/"/>
    
  </entry>
  
  <entry>
    <title>Python绘制气象实用地图(附代码和测试数据)</title>
    <link href="https://gavin971.github.io/2019/08/10/python-map/"/>
    <id>https://gavin971.github.io/2019/08/10/python-map/</id>
    <published>2019-08-10T06:54:42.000Z</published>
    <updated>2019-08-10T07:14:24.099Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/py_map_5.png" alt></p><blockquote><p><font color="#0000ff">本文同步在<code>MeteoAI</code>和<code>气象学家</code>公众号推送。前面的推文对于常用的Python绘图工具都有了一些介绍，在这里就不赘述了。本文主要就以下几个方面：<strong>“中国区域绘图”</strong>、<strong>“包含南海”</strong>、<strong>“兰伯特投影带经纬度标签”</strong>、<strong>“基于salem的mask方法”</strong>、<strong>“进阶中国区域mask方法”</strong>、<strong>“进阶省份mask方法”</strong>。对日常的实用需求能够在一定程度上满足。</font></p></blockquote><blockquote><p><font color="#0000ff">简单粗暴，<code>Just show you my code!</code>，细节暂不做过多分析，有问题可以探讨。数据、中文字体、地图shapefile文件、代码后文全部提供。使用建议，根据提示把缺失的库使用<code>pip install xxx</code> /<code>conda install xxx</code> /<code>python setup.py install</code>；安装完备，Python环境管理只推荐conda来统一管理。IDE推荐：PyCharm(有教育版)本地/服务器远程、Jupyter notebook。</font></p></blockquote><a id="more"></a><hr><ul><li>绘制兰勃脱投影的中国区域(包含南海子图)、</li><li>Mask掉海洋部分的兰勃脱投影(包含南海子图)</li><li>基于salem的白化</li><li>中国区域白化(包含南海子图)</li><li>单独省份区域白化</li></ul><hr><h3 id="绘制兰勃脱投影的中国区域-包含南海子图-代码；"><a href="#绘制兰勃脱投影的中国区域-包含南海子图-代码；" class="headerlink" title="绘制兰勃脱投影的中国区域(包含南海子图)代码；"></a>绘制兰勃脱投影的中国区域(包含南海子图)代码；</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> xarray <span class="keyword">as</span> xr</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> cartopy.crs <span class="keyword">as</span> ccrs</span><br><span class="line"><span class="keyword">import</span> cartopy.feature <span class="keyword">as</span> cfeature</span><br><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> copy</span><br><span class="line"><span class="keyword">from</span> cartopy.mpl.gridliner <span class="keyword">import</span> LATITUDE_FORMATTER, LONGITUDE_FORMATTER</span><br><span class="line"><span class="keyword">import</span> shapely.geometry <span class="keyword">as</span> sgeom</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_side</span><span class="params">(ls, side)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string"> Given a shapely LineString which is assumed to be rectangular, return the</span></span><br><span class="line"><span class="string"> line corresponding to a given side of the rectangle.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> """</span></span><br><span class="line">    minx, miny, maxx, maxy = ls.bounds</span><br><span class="line">    points = &#123;<span class="string">'left'</span>: [(minx, miny), (minx, maxy)],</span><br><span class="line">              <span class="string">'right'</span>: [(maxx, miny), (maxx, maxy)],</span><br><span class="line">              <span class="string">'bottom'</span>: [(minx, miny), (maxx, miny)],</span><br><span class="line">              <span class="string">'top'</span>: [(minx, maxy), (maxx, maxy)],&#125;</span><br><span class="line">    <span class="keyword">return</span> sgeom.LineString(points[side])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lambert_xticks</span><span class="params">(ax, ticks)</span>:</span></span><br><span class="line">    <span class="string">"""Draw ticks on the bottom x-axis of a Lambert Conformal projection."""</span></span><br><span class="line">    te = <span class="keyword">lambda</span> xy: xy[<span class="number">0</span>]</span><br><span class="line">    lc = <span class="keyword">lambda</span> t, n, b: np.vstack((np.zeros(n) + t, np.linspace(b[<span class="number">2</span>], b[<span class="number">3</span>], n))).T</span><br><span class="line">    xticks, xticklabels = _lambert_ticks(ax, ticks, <span class="string">'bottom'</span>, lc, te)</span><br><span class="line">    ax.xaxis.tick_bottom()</span><br><span class="line">    ax.set_xticks(xticks)</span><br><span class="line">    ax.set_xticklabels([ax.xaxis.get_major_formatter()(xtick) <span class="keyword">for</span> xtick <span class="keyword">in</span> xticklabels])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lambert_yticks</span><span class="params">(ax, ticks)</span>:</span></span><br><span class="line">    <span class="string">"""Draw ricks on the left y-axis of a Lamber Conformal projection."""</span></span><br><span class="line">    te = <span class="keyword">lambda</span> xy: xy[<span class="number">1</span>]</span><br><span class="line">    lc = <span class="keyword">lambda</span> t, n, b: np.vstack((np.linspace(b[<span class="number">0</span>], b[<span class="number">1</span>], n), np.zeros(n) + t)).T</span><br><span class="line">    yticks, yticklabels = _lambert_ticks(ax, ticks, <span class="string">'left'</span>, lc, te)</span><br><span class="line">    ax.yaxis.tick_left()</span><br><span class="line">    ax.set_yticks(yticks)</span><br><span class="line">    ax.set_yticklabels([ax.yaxis.get_major_formatter()(ytick) <span class="keyword">for</span> ytick <span class="keyword">in</span> yticklabels])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_lambert_ticks</span><span class="params">(ax, ticks, tick_location, line_constructor, tick_extractor)</span>:</span></span><br><span class="line">    <span class="string">"""Get the tick locations and labels for an axis of a Lambert Conformal projection."""</span></span><br><span class="line">    outline_patch = sgeom.LineString(ax.outline_patch.get_path().vertices.tolist())</span><br><span class="line">    axis = find_side(outline_patch, tick_location)</span><br><span class="line">    n_steps = <span class="number">30</span></span><br><span class="line">    extent = ax.get_extent(ccrs.PlateCarree())</span><br><span class="line">    _ticks = []</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> ticks:</span><br><span class="line">        xy = line_constructor(t, n_steps, extent)</span><br><span class="line">        proj_xyz = ax.projection.transform_points(ccrs.Geodetic(), xy[:, <span class="number">0</span>], xy[:, <span class="number">1</span>])</span><br><span class="line">        xyt = proj_xyz[..., :<span class="number">2</span>]</span><br><span class="line">        ls = sgeom.LineString(xyt.tolist())</span><br><span class="line">        locs = axis.intersection(ls)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> locs:</span><br><span class="line">            tick = [<span class="keyword">None</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tick = tick_extractor(locs.xy)</span><br><span class="line">        _ticks.append(tick[<span class="number">0</span>])</span><br><span class="line">    <span class="comment"># Remove ticks that aren't visible: </span></span><br><span class="line">    ticklabels = copy(ticks)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            index = _ticks.index(<span class="keyword">None</span>)</span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        _ticks.pop(index)</span><br><span class="line">        ticklabels.pop(index)</span><br><span class="line">    <span class="keyword">return</span> _ticks, ticklabels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load the border data, CN-border-La.dat is downloaded from</span></span><br><span class="line"><span class="comment"># https://gmt-china.org/data/CN-border-La.dat</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'CN-border-La.dat'</span>) <span class="keyword">as</span> src:</span><br><span class="line">    context = src.read()</span><br><span class="line">    blocks = [cnt <span class="keyword">for</span> cnt <span class="keyword">in</span> context.split(<span class="string">'&gt;'</span>) <span class="keyword">if</span> len(cnt) &gt; <span class="number">0</span>]</span><br><span class="line">    borders = [np.fromstring(block, dtype=float, sep=<span class="string">' '</span>) <span class="keyword">for</span> block <span class="keyword">in</span> blocks]</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment"># Set figure size</span></span><br><span class="line">proj = ccrs.LambertConformal(central_longitude=<span class="number">105</span>, central_latitude=<span class="number">90</span>,</span><br><span class="line">                             false_easting=<span class="number">400000</span>, false_northing=<span class="number">400000</span>)<span class="comment">#,standard_parallels=(46, 49))</span></span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=[<span class="number">10</span>, <span class="number">8</span>],frameon=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set projection and plot the main figure</span></span><br><span class="line">ax = fig.add_axes([<span class="number">0.08</span>, <span class="number">0.05</span>, <span class="number">0.8</span>, <span class="number">0.94</span>], projection=proj)</span><br><span class="line"><span class="comment"># Set figure extent</span></span><br><span class="line">ax.set_extent([<span class="number">80</span>, <span class="number">130</span>, <span class="number">15</span>, <span class="number">55</span>],crs=ccrs.PlateCarree())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot border lines</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> borders:</span><br><span class="line">    ax.plot(line[<span class="number">0</span>::<span class="number">2</span>], line[<span class="number">1</span>::<span class="number">2</span>], <span class="string">'-'</span>, lw=<span class="number">1.5</span>, color=<span class="string">'k'</span>,</span><br><span class="line">            transform=ccrs.Geodetic())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add ocean, land, rivers and lakes</span></span><br><span class="line">ax.add_feature(cfeature.OCEAN.with_scale(<span class="string">'50m'</span>))</span><br><span class="line">ax.add_feature(cfeature.LAND.with_scale(<span class="string">'50m'</span>))</span><br><span class="line">ax.add_feature(cfeature.RIVERS.with_scale(<span class="string">'50m'</span>))</span><br><span class="line">ax.add_feature(cfeature.LAKES.with_scale(<span class="string">'50m'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># *must* call draw in order to get the axis boundary used to add ticks:</span></span><br><span class="line">fig.canvas.draw()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define gridline locations and draw the lines using cartopy's built-in gridliner:</span></span><br><span class="line"><span class="comment"># xticks = np.arange(80,130,10)</span></span><br><span class="line"><span class="comment"># yticks = np.arange(15,55,5)</span></span><br><span class="line">xticks = [<span class="number">55</span>, <span class="number">65</span>, <span class="number">75</span>, <span class="number">85</span>, <span class="number">95</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">125</span>, <span class="number">135</span>, <span class="number">145</span>, <span class="number">155</span>, <span class="number">165</span>]</span><br><span class="line">yticks = [<span class="number">0</span> , <span class="number">5</span> , <span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">25</span> , <span class="number">30</span> , <span class="number">35</span> , <span class="number">40</span> , <span class="number">45</span> , <span class="number">50</span> , <span class="number">55</span> , <span class="number">60</span> , <span class="number">65</span>]</span><br><span class="line">ax.gridlines(xlocs=xticks, ylocs=yticks,linestyle=<span class="string">'--'</span>,lw=<span class="number">1</span>,color=<span class="string">'dimgrey'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Label the end-points of the gridlines using the custom tick makers:</span></span><br><span class="line">ax.xaxis.set_major_formatter(LONGITUDE_FORMATTER) </span><br><span class="line">ax.yaxis.set_major_formatter(LATITUDE_FORMATTER)</span><br><span class="line"></span><br><span class="line">lambert_xticks(ax, xticks)</span><br><span class="line">lambert_yticks(ax, yticks)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Plot South China Sea as a subfigure</span></span><br><span class="line">sub_ax = fig.add_axes([<span class="number">0.754</span>, <span class="number">0.107</span>, <span class="number">0.14</span>, <span class="number">0.155</span>],</span><br><span class="line">                      projection=ccrs.LambertConformal(central_latitude=<span class="number">90</span>,</span><br><span class="line">                                                       central_longitude=<span class="number">115</span>))</span><br><span class="line"><span class="comment"># Add ocean, land, rivers and lakes</span></span><br><span class="line">sub_ax.add_feature(cfeature.OCEAN.with_scale(<span class="string">'50m'</span>))</span><br><span class="line">sub_ax.add_feature(cfeature.LAND.with_scale(<span class="string">'50m'</span>))</span><br><span class="line">sub_ax.add_feature(cfeature.RIVERS.with_scale(<span class="string">'50m'</span>))</span><br><span class="line">sub_ax.add_feature(cfeature.LAKES.with_scale(<span class="string">'50m'</span>))</span><br><span class="line"><span class="comment"># Plot border lines</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> borders:</span><br><span class="line">    sub_ax.plot(line[<span class="number">0</span>::<span class="number">2</span>], line[<span class="number">1</span>::<span class="number">2</span>], <span class="string">'-'</span>, lw=<span class="number">1</span>, color=<span class="string">'k'</span>,</span><br><span class="line">                transform=ccrs.Geodetic())</span><br><span class="line"><span class="comment"># Set figure extent</span></span><br><span class="line">sub_ax.set_extent([<span class="number">105</span>, <span class="number">125</span>, <span class="number">0</span>, <span class="number">25</span>],crs=ccrs.PlateCarree())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Show figure</span></span><br><span class="line">plt.savefig(<span class="string">"China_nine_lines_lambert.png"</span>, dpi=<span class="number">500</span>, bbox_inches=<span class="string">'tight'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><blockquote><p>出图：</p></blockquote><p><img src="/images/py_map_1.png" alt></p><h3 id="Mask掉海洋部分的兰勃脱投影-包含南海子图"><a href="#Mask掉海洋部分的兰勃脱投影-包含南海子图" class="headerlink" title="Mask掉海洋部分的兰勃脱投影(包含南海子图)"></a>Mask掉海洋部分的兰勃脱投影(包含南海子图)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://gnss.help/2018/04/24/cartopy-gallery/index.html</span></span><br><span class="line"><span class="comment"># http://www.meteo.mcgill.ca/~cmccray/python.html</span></span><br><span class="line"><span class="comment"># https://www.jianshu.com/p/6506691f0788</span></span><br><span class="line"><span class="comment"># https://nbviewer.jupyter.org/gist/ajdawson/dd536f786741e987ae4e</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os,sys</span><br><span class="line"><span class="keyword">import</span> xarray <span class="keyword">as</span> xr</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> cartopy.crs <span class="keyword">as</span> ccrs</span><br><span class="line"><span class="keyword">import</span> cartopy.feature <span class="keyword">as</span> cfeature</span><br><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> copy</span><br><span class="line"><span class="keyword">from</span> cartopy.mpl.gridliner <span class="keyword">import</span> LATITUDE_FORMATTER, LONGITUDE_FORMATTER</span><br><span class="line"><span class="keyword">import</span> shapely.geometry <span class="keyword">as</span> sgeom</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_side</span><span class="params">(ls, side)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string"> Given a shapely LineString which is assumed to be rectangular, return the</span></span><br><span class="line"><span class="string"> line corresponding to a given side of the rectangle.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> """</span></span><br><span class="line">    minx, miny, maxx, maxy = ls.bounds</span><br><span class="line">    points = &#123;<span class="string">'left'</span>: [(minx, miny), (minx, maxy)],</span><br><span class="line">              <span class="string">'right'</span>: [(maxx, miny), (maxx, maxy)],</span><br><span class="line">              <span class="string">'bottom'</span>: [(minx, miny), (maxx, miny)],</span><br><span class="line">              <span class="string">'top'</span>: [(minx, maxy), (maxx, maxy)],&#125;</span><br><span class="line">    <span class="keyword">return</span> sgeom.LineString(points[side])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lambert_xticks</span><span class="params">(ax, ticks)</span>:</span></span><br><span class="line">    <span class="string">"""Draw ticks on the bottom x-axis of a Lambert Conformal projection."""</span></span><br><span class="line">    te = <span class="keyword">lambda</span> xy: xy[<span class="number">0</span>]</span><br><span class="line">    lc = <span class="keyword">lambda</span> t, n, b: np.vstack((np.zeros(n) + t, np.linspace(b[<span class="number">2</span>], b[<span class="number">3</span>], n))).T</span><br><span class="line">    xticks, xticklabels = _lambert_ticks(ax, ticks, <span class="string">'bottom'</span>, lc, te)</span><br><span class="line">    ax.xaxis.tick_bottom()</span><br><span class="line">    ax.set_xticks(xticks)</span><br><span class="line">    ax.set_xticklabels([ax.xaxis.get_major_formatter()(xtick) <span class="keyword">for</span> xtick <span class="keyword">in</span> xticklabels])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lambert_yticks</span><span class="params">(ax, ticks)</span>:</span></span><br><span class="line">    <span class="string">"""Draw ricks on the left y-axis of a Lamber Conformal projection."""</span></span><br><span class="line">    te = <span class="keyword">lambda</span> xy: xy[<span class="number">1</span>]</span><br><span class="line">    lc = <span class="keyword">lambda</span> t, n, b: np.vstack((np.linspace(b[<span class="number">0</span>], b[<span class="number">1</span>], n), np.zeros(n) + t)).T</span><br><span class="line">    yticks, yticklabels = _lambert_ticks(ax, ticks, <span class="string">'left'</span>, lc, te)</span><br><span class="line">    ax.yaxis.tick_left()</span><br><span class="line">    ax.set_yticks(yticks)</span><br><span class="line">    ax.set_yticklabels([ax.yaxis.get_major_formatter()(ytick) <span class="keyword">for</span> ytick <span class="keyword">in</span> yticklabels])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_lambert_ticks</span><span class="params">(ax, ticks, tick_location, line_constructor, tick_extractor)</span>:</span></span><br><span class="line">    <span class="string">"""Get the tick locations and labels for an axis of a Lambert Conformal projection."""</span></span><br><span class="line">    outline_patch = sgeom.LineString(ax.outline_patch.get_path().vertices.tolist())</span><br><span class="line">    axis = find_side(outline_patch, tick_location)</span><br><span class="line">    n_steps = <span class="number">30</span></span><br><span class="line">    extent = ax.get_extent(ccrs.PlateCarree())</span><br><span class="line">    _ticks = []</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> ticks:</span><br><span class="line">        xy = line_constructor(t, n_steps, extent)</span><br><span class="line">        proj_xyz = ax.projection.transform_points(ccrs.Geodetic(), xy[:, <span class="number">0</span>], xy[:, <span class="number">1</span>])</span><br><span class="line">        xyt = proj_xyz[..., :<span class="number">2</span>]</span><br><span class="line">        ls = sgeom.LineString(xyt.tolist())</span><br><span class="line">        locs = axis.intersection(ls)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> locs:</span><br><span class="line">            tick = [<span class="keyword">None</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tick = tick_extractor(locs.xy)</span><br><span class="line">        _ticks.append(tick[<span class="number">0</span>])</span><br><span class="line">    <span class="comment"># Remove ticks that aren't visible: </span></span><br><span class="line">    ticklabels = copy(ticks)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            index = _ticks.index(<span class="keyword">None</span>)</span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        _ticks.pop(index)</span><br><span class="line">        ticklabels.pop(index)</span><br><span class="line">    <span class="keyword">return</span> _ticks, ticklabels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load the border data, CN-border-La.dat is downloaded from</span></span><br><span class="line"><span class="comment"># https://gmt-china.org/data/CN-border-La.dat</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'CN-border-La.dat'</span>) <span class="keyword">as</span> src:</span><br><span class="line">    context = src.read()</span><br><span class="line">    blocks = [cnt <span class="keyword">for</span> cnt <span class="keyword">in</span> context.split(<span class="string">'&gt;'</span>) <span class="keyword">if</span> len(cnt) &gt; <span class="number">0</span>]</span><br><span class="line">    borders = [np.fromstring(block, dtype=float, sep=<span class="string">' '</span>) <span class="keyword">for</span> block <span class="keyword">in</span> blocks]</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment"># Set figure size</span></span><br><span class="line">proj = ccrs.LambertConformal(central_longitude=<span class="number">105</span>, central_latitude=<span class="number">90</span>,</span><br><span class="line">                             false_easting=<span class="number">400000</span>, false_northing=<span class="number">400000</span>)<span class="comment">#,standard_parallels=(46, 49))</span></span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=[<span class="number">10</span>, <span class="number">8</span>],frameon=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set projection and plot the main figure</span></span><br><span class="line">ax = fig.add_axes([<span class="number">0.08</span>, <span class="number">0.05</span>, <span class="number">0.8</span>, <span class="number">0.94</span>], projection=proj)</span><br><span class="line"><span class="comment"># Set figure extent</span></span><br><span class="line">ax.set_extent([<span class="number">80</span>, <span class="number">130</span>, <span class="number">15</span>, <span class="number">55</span>],crs=ccrs.PlateCarree())</span><br><span class="line"><span class="comment"># ax.set_title('ChinaChinaChinaChinaChinaChinaChinaChinaChinaChina',fontsize=20)       </span></span><br><span class="line"><span class="comment"># Plot border lines</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> borders:</span><br><span class="line">    ax.plot(line[<span class="number">0</span>::<span class="number">2</span>], line[<span class="number">1</span>::<span class="number">2</span>], <span class="string">'-'</span>, lw=<span class="number">1.5</span>, color=<span class="string">'k'</span>,</span><br><span class="line">            transform=ccrs.Geodetic())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add ocean, land, rivers and lakes</span></span><br><span class="line">ax.add_feature(cfeature.OCEAN.with_scale(<span class="string">'50m'</span>))</span><br><span class="line">ax.add_feature(cfeature.LAND.with_scale(<span class="string">'50m'</span>))</span><br><span class="line">ax.add_feature(cfeature.RIVERS.with_scale(<span class="string">'50m'</span>))</span><br><span class="line">ax.add_feature(cfeature.LAKES.with_scale(<span class="string">'50m'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># *must* call draw in order to get the axis boundary used to add ticks:</span></span><br><span class="line">fig.canvas.draw()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define gridline locations and draw the lines using cartopy's built-in gridliner:</span></span><br><span class="line"><span class="comment"># xticks = np.arange(80,130,10)</span></span><br><span class="line"><span class="comment"># yticks = np.arange(15,55,5)</span></span><br><span class="line">xticks = [<span class="number">55</span>, <span class="number">65</span>, <span class="number">75</span>, <span class="number">85</span>, <span class="number">95</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">125</span>, <span class="number">135</span>, <span class="number">145</span>, <span class="number">155</span>, <span class="number">165</span>]</span><br><span class="line">yticks = [<span class="number">0</span> , <span class="number">5</span> , <span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">25</span> , <span class="number">30</span> , <span class="number">35</span> , <span class="number">40</span> , <span class="number">45</span> , <span class="number">50</span> , <span class="number">55</span> , <span class="number">60</span> , <span class="number">65</span>]</span><br><span class="line">ax.gridlines(xlocs=xticks, ylocs=yticks,linestyle=<span class="string">'--'</span>,lw=<span class="number">1</span>,color=<span class="string">'dimgrey'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Label the end-points of the gridlines using the custom tick makers:</span></span><br><span class="line">ax.xaxis.set_major_formatter(LONGITUDE_FORMATTER) </span><br><span class="line">ax.yaxis.set_major_formatter(LATITUDE_FORMATTER)</span><br><span class="line"></span><br><span class="line"><span class="comment"># https://stackoverflow.com/questions/30030328/correct-placement-of-colorbar-relative-to-geo-axes-cartopy</span></span><br><span class="line"><span class="comment"># ax.set_aspect('auto', adjustable=None)</span></span><br><span class="line"></span><br><span class="line">lambert_xticks(ax, xticks)</span><br><span class="line">lambert_yticks(ax, yticks)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Plot South China Sea as a subfigure</span></span><br><span class="line">sub_ax = fig.add_axes([<span class="number">0.592</span>, <span class="number">0.189</span>, <span class="number">0.14</span>, <span class="number">0.155</span>],</span><br><span class="line">                      projection=ccrs.LambertConformal(central_latitude=<span class="number">90</span>,</span><br><span class="line">                                                       central_longitude=<span class="number">115</span>))</span><br><span class="line"><span class="comment"># Add ocean, land, rivers and lakes</span></span><br><span class="line">sub_ax.add_feature(cfeature.OCEAN.with_scale(<span class="string">'50m'</span>))</span><br><span class="line">sub_ax.add_feature(cfeature.LAND.with_scale(<span class="string">'50m'</span>))</span><br><span class="line">sub_ax.add_feature(cfeature.RIVERS.with_scale(<span class="string">'50m'</span>))</span><br><span class="line">sub_ax.add_feature(cfeature.LAKES.with_scale(<span class="string">'50m'</span>))</span><br><span class="line"><span class="comment"># Plot border lines</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> borders:</span><br><span class="line">    sub_ax.plot(line[<span class="number">0</span>::<span class="number">2</span>], line[<span class="number">1</span>::<span class="number">2</span>], <span class="string">'-'</span>, lw=<span class="number">1</span>, color=<span class="string">'k'</span>,</span><br><span class="line">                transform=ccrs.Geodetic())</span><br><span class="line"><span class="comment"># Set figure extent</span></span><br><span class="line">sub_ax.set_extent([<span class="number">105</span>, <span class="number">125</span>, <span class="number">0</span>, <span class="number">25</span>],crs=ccrs.PlateCarree())</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mask</span><span class="params">(ds, label=<span class="string">'land'</span>)</span>:</span></span><br><span class="line">    landsea = xr.open_dataset(<span class="string">'landsea.nc'</span>)</span><br><span class="line">    landsea = landsea[<span class="string">'LSMASK'</span>]</span><br><span class="line">    <span class="comment"># --ds和地形数据分辨率不一致，需将地形数据插值</span></span><br><span class="line">    landsea = landsea.interp(lat=ds.latitude.values, lon=ds.longitude.values)</span><br><span class="line">    <span class="comment"># --利用地形掩盖海陆数据</span></span><br><span class="line">    ds.coords[<span class="string">'mask'</span>] = ((<span class="string">'latitude'</span>, <span class="string">'longitude'</span>), landsea.values)</span><br><span class="line">    print(ds.mask)</span><br><span class="line">    <span class="keyword">if</span> label == <span class="string">'land'</span>:</span><br><span class="line">        ds = ds.where(ds.mask &lt; <span class="number">0.8</span>) <span class="comment">#可以尝试调整default：0.8</span></span><br><span class="line">    <span class="keyword">elif</span> label == <span class="string">'ocean'</span>:</span><br><span class="line">        ds = ds.where(ds.mask &gt; <span class="number">0.3</span>) <span class="comment">#可以尝试调整default：0.2</span></span><br><span class="line">    <span class="keyword">return</span> ds</span><br><span class="line"></span><br><span class="line">ds = xr.open_dataset(<span class="string">'EC-Interim_monthly_2018.nc'</span>)</span><br><span class="line">lat = ds.latitude</span><br><span class="line">lon = ds.longitude</span><br><span class="line">time = ds.time</span><br><span class="line">temp = (ds[<span class="string">'t2m'</span>] - <span class="number">273.15</span>) <span class="comment"># 把温度转换为℃</span></span><br><span class="line"><span class="comment"># 区域选择</span></span><br><span class="line">lon_range = lon[(lon&gt;<span class="number">60</span>) &amp; (lon&lt;<span class="number">150</span>)]</span><br><span class="line">lat_range = lat[(lat&gt;<span class="number">10</span>) &amp; (lat&lt;<span class="number">60</span>)]</span><br><span class="line">temp_region = temp.sel(longitude=lon_range, latitude=lat_range, time=<span class="string">'2018-02-01'</span>)</span><br><span class="line">temp_mask = mask(temp_region, <span class="string">'ocean'</span>)</span><br><span class="line"><span class="comment"># 设置colorbar </span></span><br><span class="line"><span class="comment">#get size and extent of axes:</span></span><br><span class="line"></span><br><span class="line">cbar_kwargs = &#123;</span><br><span class="line">    <span class="string">'orientation'</span>: <span class="string">'vertical'</span>,</span><br><span class="line">    <span class="string">'label'</span>: <span class="string">'2m temperature (℃)'</span>,</span><br><span class="line">    <span class="string">'shrink'</span>: <span class="number">0.8</span>,</span><br><span class="line">    <span class="string">'ticks'</span>: np.arange(<span class="number">-30</span>, <span class="number">30</span> + <span class="number">5</span>, <span class="number">5</span>),</span><br><span class="line">    <span class="string">'pad'</span>: <span class="number">0.05</span>,</span><br><span class="line">    <span class="string">'shrink'</span>: <span class="number">0.65</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line">levels = np.arange(<span class="number">-30</span>, <span class="number">30</span> + <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">temp_mask.plot.contourf(ax=ax, levels=levels, cmap=<span class="string">'Spectral_r'</span>,</span><br><span class="line">                        cbar_kwargs=cbar_kwargs, transform=ccrs.PlateCarree())</span><br><span class="line"><span class="comment"># 设置标题的在代码中放置的位置很关键，注意不要放置在小图上或者新建画框了。</span></span><br><span class="line">ax.set_title(<span class="string">'China Map 2m Temperature'</span>,color=<span class="string">'blue'</span>,fontsize= <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save &amp; Show figure</span></span><br><span class="line"><span class="comment"># (filename, extension) = os.path.splitext(os.path.basename(sys.argv[0]))</span></span><br><span class="line">plt.savefig(<span class="string">"land_sea_mask_simple_lambert.png"</span>, dpi=<span class="number">500</span>, bbox_inches=<span class="string">'tight'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><blockquote><p>出图：</p></blockquote><p><img src="/images/py_map_2.png" alt></p><h3 id="基于salem的白化"><a href="#基于salem的白化" class="headerlink" title="基于salem的白化"></a>基于salem的白化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> salem</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> salem.utils <span class="keyword">import</span> get_demo_file</span><br><span class="line">ds = salem.open_xr_dataset(get_demo_file(<span class="string">'wrfout_d01.nc'</span>))</span><br><span class="line">t2 = ds.T2.isel(Time=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># t2.salem.quick_map()</span></span><br><span class="line">t2_sub = t2.salem.subset(corners=((<span class="number">77.</span>, <span class="number">20.</span>), (<span class="number">97.</span>, <span class="number">35.</span>)), crs=salem.wgs84)</span><br><span class="line"><span class="comment"># t2_sub.salem.quick_map()</span></span><br><span class="line">shdf = salem.read_shapefile(get_demo_file(<span class="string">'world_borders.shp'</span>))</span><br><span class="line">shdf = shdf.loc[shdf[<span class="string">'CNTRY_NAME'</span>].isin([<span class="string">'Nepal'</span>, <span class="string">'Bhutan'</span>])]  <span class="comment"># GeoPandas' GeoDataFrame</span></span><br><span class="line">t2_sub = t2_sub.salem.subset(shape=shdf, margin=<span class="number">2</span>)  <span class="comment"># add 2 grid points</span></span><br><span class="line"><span class="comment"># t2_sub.salem.quick_map()</span></span><br><span class="line">t2_roi = t2_sub.salem.roi(shape=shdf)</span><br><span class="line"><span class="comment"># t2_roi.salem.quick_map()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Change the country borders</span></span><br><span class="line">smap = t2_roi.salem.get_map(data=t2_roi<span class="number">-273.15</span>, cmap=<span class="string">'RdYlBu_r'</span>, vmin=<span class="number">-14</span>, vmax=<span class="number">18</span>)</span><br><span class="line">_ = smap.set_topography(get_demo_file(<span class="string">'himalaya.tif'</span>))</span><br><span class="line">smap.set_shapefile(shape=shdf, color=<span class="string">'grey'</span>, linewidth=<span class="number">3</span>)</span><br><span class="line">smap.set_shapefile(countries=<span class="keyword">True</span>, color=<span class="string">'C3'</span>, linewidths=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add oceans and lakes</span></span><br><span class="line">smap.set_shapefile(oceans=<span class="keyword">True</span>)</span><br><span class="line">smap.set_shapefile(rivers=<span class="keyword">True</span>,linewidths=<span class="number">0.8</span>,color=<span class="string">'green'</span>)</span><br><span class="line">smap.set_shapefile(lakes=<span class="keyword">True</span>, facecolor=<span class="string">'blue'</span>, edgecolor=<span class="string">'blue'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Change the lon-lat countour setting</span></span><br><span class="line">smap.set_lonlat_contours(add_ytick_labels=<span class="keyword">True</span>, interval=<span class="number">2</span>, linewidths=<span class="number">0.5</span>,</span><br><span class="line">                         linestyles=<span class="string">'--'</span>, colors=<span class="string">'grey'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add a scalebar (experimental)</span></span><br><span class="line">smap.set_scale_bar(location=(<span class="number">0.10</span>, <span class="number">0.10</span>), add_bbox=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line">smap.set_points(<span class="number">91.1</span>, <span class="number">29.6</span>)</span><br><span class="line">smap.set_text(<span class="number">90.0</span>, <span class="number">30.1</span>, <span class="string">'Lhasa'</span>, fontsize=<span class="number">17</span>)</span><br><span class="line"></span><br><span class="line">smap.visualize()</span><br><span class="line">plt.savefig(<span class="string">"Himalayas_mask.png"</span>, dpi=<span class="number">500</span>, bbox_inches=<span class="string">'tight'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><blockquote><p>出图：</p></blockquote><p><img src="/images/py_map_3.png" alt></p><h3 id="中国区域白化-包含南海子图"><a href="#中国区域白化-包含南海子图" class="headerlink" title="中国区域白化(包含南海子图)"></a>中国区域白化(包含南海子图)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#https://regionmask.readthedocs.io/en/stable/defined_landmask.html</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.basemap <span class="keyword">import</span> Basemap</span><br><span class="line"><span class="keyword">from</span> matplotlib.path <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">from</span> matplotlib.patches <span class="keyword">import</span> PathPatch</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> osgeo <span class="keyword">import</span> gdal</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cartopy.crs <span class="keyword">as</span> ccrs</span><br><span class="line"><span class="keyword">import</span> shapefile</span><br><span class="line"><span class="keyword">import</span> xarray <span class="keyword">as</span> xr</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> FontProperties</span><br><span class="line"><span class="keyword">import</span> netCDF4 <span class="keyword">as</span> nc</span><br><span class="line"><span class="keyword">from</span> cartopy.mpl.gridliner <span class="keyword">import</span> LONGITUDE_FORMATTER, LATITUDE_FORMATTER</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">ZHfont = matplotlib.font_manager.FontProperties(fname=<span class="string">'/Users/zhpfu/Documents/fonts/SimSun.ttf'</span>)</span><br><span class="line"></span><br><span class="line">plt.rcParams.update(&#123;<span class="string">'font.size'</span>:<span class="number">20</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=[<span class="number">12</span>,<span class="number">18</span>]) </span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sf = shapefile.Reader(<span class="string">"country1"</span>)</span><br><span class="line"><span class="keyword">for</span> shape_rec <span class="keyword">in</span> sf.shapeRecords():</span><br><span class="line">    <span class="keyword">if</span> shape_rec.record[<span class="number">2</span>] == <span class="string">'China'</span>:<span class="comment">#Hunan Sheng</span></span><br><span class="line">        vertices = []</span><br><span class="line">        codes = []</span><br><span class="line">        pts = shape_rec.shape.points</span><br><span class="line">        prt = list(shape_rec.shape.parts) + [len(pts)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(prt) - <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(prt[i], prt[i+<span class="number">1</span>]):</span><br><span class="line">                vertices.append((pts[j][<span class="number">0</span>], pts[j][<span class="number">1</span>]))</span><br><span class="line">            codes += [Path.MOVETO]</span><br><span class="line">            codes += [Path.LINETO] * (prt[i+<span class="number">1</span>] - prt[i] <span class="number">-2</span>)</span><br><span class="line">            codes += [Path.CLOSEPOLY]</span><br><span class="line">        clip = Path(vertices, codes)</span><br><span class="line">        clip = PathPatch(clip, transform=ax.transData)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makedegreelabel</span><span class="params">(degreelist)</span>:</span></span><br><span class="line">    labels=[str(x)+<span class="string">u'°E'</span> <span class="keyword">for</span> x <span class="keyword">in</span> degreelist]</span><br><span class="line">    <span class="keyword">return</span> labels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ds = xr.open_dataset(<span class="string">'EC-Interim_monthly_2018.nc'</span>)</span><br><span class="line">lat = ds.latitude</span><br><span class="line">lon = ds.longitude</span><br><span class="line">data = (ds[<span class="string">'t2m'</span>][<span class="number">0</span>,::<span class="number">-1</span>,:] - <span class="number">273.15</span>) <span class="comment"># 把温度转换为℃   [0,::-1,:]表示第一个时次、纬度反向</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ncdata=nc.Dataset('EC-Interim_monthly_2018.nc')</span></span><br><span class="line"><span class="comment"># data=ncdata.variables['t2m'][0,::-1,:] - 273.15 # 把温度转换为℃ </span></span><br><span class="line"><span class="comment"># lat=ncdata.variables['latitude'][:]</span></span><br><span class="line"><span class="comment"># lon=ncdata.variables['longitude'][:]</span></span><br><span class="line"></span><br><span class="line">nx=data.shape[<span class="number">1</span>]</span><br><span class="line">ny=data.shape[<span class="number">0</span>]</span><br><span class="line">               </span><br><span class="line">m = Basemap(llcrnrlon=<span class="number">72.0</span>,</span><br><span class="line">    llcrnrlat=<span class="number">10.0</span>,</span><br><span class="line">    urcrnrlon=<span class="number">137.0</span>,</span><br><span class="line">    urcrnrlat=<span class="number">55.0</span>,</span><br><span class="line">    resolution = <span class="keyword">None</span>, </span><br><span class="line">    projection = <span class="string">'cyl'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cbar_kwargs = &#123;</span><br><span class="line">    <span class="string">'orientation'</span>: <span class="string">'horizontal'</span>,</span><br><span class="line">    <span class="string">'label'</span>: <span class="string">'Temperature (℃)'</span>,</span><br><span class="line">    <span class="string">'shrink'</span>: <span class="number">0.02</span>,</span><br><span class="line">    <span class="string">'ticks'</span>: np.arange(<span class="number">-25</span>, <span class="number">25</span> + <span class="number">1</span>, <span class="number">5</span>),</span><br><span class="line">    <span class="string">'pad'</span>: <span class="number">-0.28</span>,</span><br><span class="line">    <span class="string">'shrink'</span>: <span class="number">0.95</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line">levels = np.arange(<span class="number">-25</span>, <span class="number">25</span> + <span class="number">1</span>, <span class="number">1</span>)   </span><br><span class="line">cs = data.plot.contourf(ax=ax,levels=levels,cbar_kwargs=cbar_kwargs, cmap=<span class="string">'Spectral_r'</span>)</span><br><span class="line"><span class="comment"># 设置标题的在代码中放置的位置很关键，注意不要放置在小图上或者新建画框了。</span></span><br><span class="line"></span><br><span class="line">m.readshapefile(<span class="string">'bou2_4l'</span>,<span class="string">'China Map'</span>,color=<span class="string">'k'</span>,linewidth=<span class="number">1.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> contour <span class="keyword">in</span> cs.collections:</span><br><span class="line">        contour.set_clip_path(clip)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="comment"># draw parallels and meridians.</span></span><br><span class="line"><span class="comment"># label parallels on right and top</span></span><br><span class="line"><span class="comment"># meridians on bottom and left</span></span><br><span class="line"><span class="comment"># http://code.activestate.com/recipes/578399-an-alternative-way-to-draw-parallels-and-meridians/</span></span><br><span class="line">parallels = np.arange(<span class="number">10</span>,<span class="number">55</span>,<span class="number">10</span>)</span><br><span class="line"><span class="comment"># labels = [left,right,top,bottom]</span></span><br><span class="line">m.drawparallels(parallels,labels=[<span class="keyword">True</span>,<span class="keyword">True</span>,<span class="keyword">True</span>,<span class="keyword">True</span>],color=<span class="string">'dimgrey'</span>,dashes=[<span class="number">1</span>, <span class="number">3</span>])  <span class="comment"># ha= 'right'</span></span><br><span class="line">meridians = np.arange(<span class="number">70</span>,<span class="number">135</span>,<span class="number">10</span>)</span><br><span class="line">m.drawmeridians(meridians,labels=[<span class="keyword">True</span>,<span class="keyword">True</span>,<span class="keyword">False</span>,<span class="keyword">True</span>],color=<span class="string">'dimgrey'</span>,dashes=[<span class="number">1</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#http://xarray.pydata.org/en/stable/plotting.html</span></span><br><span class="line">plt.ylabel(<span class="string">''</span>)    <span class="comment">#Remove the defult  lat / lon label  </span></span><br><span class="line">plt.xlabel(<span class="string">''</span>)        </span><br><span class="line">           </span><br><span class="line"></span><br><span class="line">plt.rcParams.update(&#123;<span class="string">'font.size'</span>:<span class="number">30</span>&#125;)</span><br><span class="line">ax.set_title(<span class="string">u' 中国区域2018年1月平均气温'</span>,color=<span class="string">'blue'</span>,fontsize= <span class="number">25</span> ,fontproperties=ZHfont) <span class="comment"># 2m Temperature</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.rcParams.update(&#123;<span class="string">'font.size'</span>:<span class="number">20</span>&#125;)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'CN-border-La.dat'</span>) <span class="keyword">as</span> src:</span><br><span class="line">    context = src.read()</span><br><span class="line">    blocks = [cnt <span class="keyword">for</span> cnt <span class="keyword">in</span> context.split(<span class="string">'&gt;'</span>) <span class="keyword">if</span> len(cnt) &gt; <span class="number">0</span>]</span><br><span class="line">    borders = [np.fromstring(block, dtype=float, sep=<span class="string">' '</span>) <span class="keyword">for</span> block <span class="keyword">in</span> blocks]</span><br><span class="line">    </span><br><span class="line"><span class="comment">#Plot South China Sea as a subfigure</span></span><br><span class="line">sub_ax = fig.add_axes([<span class="number">0.758</span>, <span class="number">0.249</span>, <span class="number">0.14</span>, <span class="number">0.155</span>],</span><br><span class="line">                      projection=ccrs.LambertConformal(central_latitude=<span class="number">90</span>,</span><br><span class="line">                                                       central_longitude=<span class="number">115</span>))</span><br><span class="line"><span class="comment"># Plot border lines</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> borders:</span><br><span class="line">    sub_ax.plot(line[<span class="number">0</span>::<span class="number">2</span>], line[<span class="number">1</span>::<span class="number">2</span>], <span class="string">'-'</span>, lw=<span class="number">1</span>, color=<span class="string">'k'</span>,</span><br><span class="line">                transform=ccrs.Geodetic())</span><br><span class="line"><span class="comment"># Set figure extent</span></span><br><span class="line">sub_ax.set_extent([<span class="number">106</span>, <span class="number">127</span>, <span class="number">0</span>, <span class="number">25</span>],crs=ccrs.PlateCarree())        </span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="comment"># Save &amp; Show figure</span></span><br><span class="line">plt.savefig(<span class="string">"China_mask_T2m.png"</span>, dpi=<span class="number">300</span>, bbox_inches=<span class="string">'tight'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><blockquote><p>出图：</p></blockquote><p><img src="/images/py_map_4.png" alt></p><h3 id="单独省份区域白化"><a href="#单独省份区域白化" class="headerlink" title="单独省份区域白化"></a>单独省份区域白化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#https://basemaptutorial.readthedocs.io/en/latest/clip.html</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.basemap <span class="keyword">import</span> Basemap</span><br><span class="line"><span class="keyword">from</span> matplotlib.path <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">from</span> matplotlib.patches <span class="keyword">import</span> PathPatch</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> osgeo <span class="keyword">import</span> gdal</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cartopy.crs <span class="keyword">as</span> ccrs</span><br><span class="line"><span class="keyword">import</span> shapefile</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"><span class="keyword">import</span> xarray <span class="keyword">as</span> xr</span><br><span class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> FontProperties</span><br><span class="line"><span class="keyword">import</span> netCDF4 <span class="keyword">as</span> nc</span><br><span class="line"><span class="keyword">from</span> cartopy.mpl.gridliner <span class="keyword">import</span> LONGITUDE_FORMATTER, LATITUDE_FORMATTER</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">ZHfont = matplotlib.font_manager.FontProperties(fname=<span class="string">'/Users/zhpfu/Documents/fonts/SimSun.ttf'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.rcParams.update(&#123;<span class="string">'font.size'</span>: <span class="number">20</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># plt.clf()</span></span><br><span class="line">fig = plt.figure(figsize=[<span class="number">12</span>,<span class="number">18</span>]) </span><br><span class="line"></span><br><span class="line"><span class="comment"># fig = plt.figure(figsize=(16,8.5),dpi=300)# figsize=(16,9.6)   </span></span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment"># set the projection to PlateCarree</span></span><br><span class="line"><span class="comment"># proj = ccrs.PlateCarree()</span></span><br><span class="line"><span class="comment"># ax = fig.add_subplot(1, 1, 1,projection = proj)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ax=fig.add_axes([.2,.2,.6,.68]) #[*left*, *bottom*, *width*,*height*]</span></span><br><span class="line"></span><br><span class="line">sf = shapefile.Reader(<span class="string">"national_provinces_shp/hunan"</span>)</span><br><span class="line"><span class="keyword">for</span> shape_rec <span class="keyword">in</span> sf.shapeRecords():</span><br><span class="line">    <span class="keyword">if</span> shape_rec.record[<span class="number">2</span>] == <span class="string">'Hunan Sheng'</span>:<span class="comment">#Hunan Sheng</span></span><br><span class="line">        vertices = []</span><br><span class="line">        codes = []</span><br><span class="line">        pts = shape_rec.shape.points</span><br><span class="line">        prt = list(shape_rec.shape.parts) + [len(pts)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(prt) - <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(prt[i], prt[i+<span class="number">1</span>]):</span><br><span class="line">                vertices.append((pts[j][<span class="number">0</span>], pts[j][<span class="number">1</span>]))</span><br><span class="line">            codes += [Path.MOVETO]</span><br><span class="line">            codes += [Path.LINETO] * (prt[i+<span class="number">1</span>] - prt[i] <span class="number">-2</span>)</span><br><span class="line">            codes += [Path.CLOSEPOLY]</span><br><span class="line">        clip = Path(vertices, codes)</span><br><span class="line">        clip = PathPatch(clip, transform=ax.transData)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makedegreelabel</span><span class="params">(degreelist)</span>:</span></span><br><span class="line">    labels=[str(x)+<span class="string">u'°E'</span> <span class="keyword">for</span> x <span class="keyword">in</span> degreelist]</span><br><span class="line">    <span class="keyword">return</span> labels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ds = xr.open_dataset(<span class="string">'EC-Interim_monthly_2018.nc'</span>)</span><br><span class="line">lat = ds.latitude</span><br><span class="line">lon = ds.longitude</span><br><span class="line">data = (ds[<span class="string">'t2m'</span>][<span class="number">0</span>,::<span class="number">-1</span>,:] - <span class="number">273.15</span>) <span class="comment"># 把温度转换为℃</span></span><br><span class="line"></span><br><span class="line">nx=data.shape[<span class="number">1</span>]</span><br><span class="line">ny=data.shape[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Hunan Province region = [108.6,114.3,24.5,30.2] # [west,east,south,north]</span></span><br><span class="line"></span><br><span class="line">m = Basemap(llcrnrlon=<span class="number">108.6</span>,</span><br><span class="line">    llcrnrlat=<span class="number">24.5</span>,</span><br><span class="line">    urcrnrlon=<span class="number">114.3</span>,</span><br><span class="line">    urcrnrlat=<span class="number">30.2</span>,</span><br><span class="line">    resolution = <span class="keyword">None</span>, </span><br><span class="line">    projection = <span class="string">'cyl'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cbar_kwargs = &#123;</span><br><span class="line">    <span class="string">'orientation'</span>: <span class="string">'horizontal'</span>,</span><br><span class="line">    <span class="string">'label'</span>: <span class="string">'Temperature (℃)'</span>,</span><br><span class="line">    <span class="string">'shrink'</span>: <span class="number">0.02</span>,</span><br><span class="line">    <span class="string">'ticks'</span>: np.arange(<span class="number">0</span>, <span class="number">10</span> + <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">    <span class="string">'pad'</span>: <span class="number">-0.01</span>,</span><br><span class="line">    <span class="string">'shrink'</span>: <span class="number">0.95</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line">levels = np.arange(<span class="number">0</span>, <span class="number">8</span> + <span class="number">1</span>, <span class="number">0.2</span>)   </span><br><span class="line">cs = data.plot.contourf(ax=ax,levels=levels,cbar_kwargs=cbar_kwargs, cmap=<span class="string">'Spectral_r'</span>)</span><br><span class="line"><span class="comment"># 设置标题的在代码中放置的位置很关键，注意不要放置在小图上或者新建画框了。</span></span><br><span class="line"></span><br><span class="line">m.readshapefile(<span class="string">'national_provinces_shp/hunan'</span>,<span class="string">'Hunan Map'</span>,color=<span class="string">'k'</span>,linewidth=<span class="number">1.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> contour <span class="keyword">in</span> cs.collections:</span><br><span class="line">        contour.set_clip_path(clip)</span><br><span class="line"></span><br><span class="line"><span class="comment"># draw parallels and meridians.</span></span><br><span class="line"><span class="comment"># label parallels on right and top</span></span><br><span class="line"><span class="comment"># meridians on bottom and left</span></span><br><span class="line"><span class="comment"># http://code.activestate.com/recipes/578399-an-alternative-way-to-draw-parallels-and-meridians/</span></span><br><span class="line">parallels = np.arange(<span class="number">24.5</span>,<span class="number">30.2</span>,<span class="number">1.0</span>)</span><br><span class="line"><span class="comment"># labels = [left,right,top,bottom]</span></span><br><span class="line">m.drawparallels(parallels,labels=[<span class="keyword">True</span>,<span class="keyword">True</span>,<span class="keyword">True</span>,<span class="keyword">True</span>],color=<span class="string">'dimgrey'</span>,dashes=[<span class="number">1</span>, <span class="number">3</span>])  <span class="comment"># ha= 'right'</span></span><br><span class="line">meridians = np.arange(<span class="number">108.6</span>,<span class="number">114.3</span>,<span class="number">1.0</span>)</span><br><span class="line">m.drawmeridians(meridians,labels=[<span class="keyword">True</span>,<span class="keyword">True</span>,<span class="keyword">False</span>,<span class="keyword">True</span>],color=<span class="string">'dimgrey'</span>,dashes=[<span class="number">1</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#http://xarray.pydata.org/en/stable/plotting.html</span></span><br><span class="line">plt.ylabel(<span class="string">''</span>)    <span class="comment">#Remove the defult  lat / lon label  </span></span><br><span class="line">plt.xlabel(<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.rcParams.update(&#123;<span class="string">'font.size'</span>:<span class="number">30</span>&#125;)</span><br><span class="line">ax.set_title(<span class="string">u' 湖南省2018年1月平均气温'</span>,color=<span class="string">'blue'</span>,fontsize= <span class="number">25</span> ,fontproperties=ZHfont) <span class="comment"># 2m Temperature</span></span><br><span class="line"></span><br><span class="line">bill0 = <span class="number">111.69</span></span><br><span class="line">tip0  =  <span class="number">29.05</span></span><br><span class="line">plt.scatter(bill0, tip0,marker=<span class="string">'.'</span>,s=<span class="number">100</span> ,color =<span class="string">"blue"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bill2 =  <span class="number">113.0</span></span><br><span class="line">tip2  = <span class="number">28.21</span></span><br><span class="line">plt.scatter(bill2, tip2,marker=<span class="string">'*'</span>,s=<span class="number">150</span> ,color =<span class="string">"orange"</span> )</span><br><span class="line"></span><br><span class="line">plt.rcParams.update(&#123;<span class="string">'font.size'</span>:<span class="number">30</span>&#125;)</span><br><span class="line">plt.text(bill0<span class="number">-0.4</span>, tip0+<span class="number">0.2</span>, <span class="string">u"常德市"</span>, fontsize= <span class="number">20</span> ,fontproperties=ZHfont)</span><br><span class="line">plt.text(bill2<span class="number">-0.4</span>, tip2+<span class="number">0.2</span>, <span class="string">u"长沙市"</span>, fontsize= <span class="number">20</span> ,fontproperties=ZHfont)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save &amp; Show figure</span></span><br><span class="line">plt.savefig(<span class="string">"Hunan_mask_T2m.png"</span>, dpi=<span class="number">300</span>, bbox_inches=<span class="string">'tight'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><blockquote><p>出图：</p></blockquote><p><img src="/images/py_map_5.png" alt></p><p>测试数据和代码：<code>链接:https://pan.baidu.com/s/18R6RWYhi5p_wMbMrdKzw2g  密码:jwil</code></p><p>参考：</p><p><a href="https://basemaptutorial.readthedocs.io/en/latest/clip.html" target="_blank" rel="noopener">链接.1</a><br><a href="http://code.activestate.com/recipes/578399-an-alternative-way-to-draw-parallels-and-meridians/" target="_blank" rel="noopener">链接.2</a><br><a href="https://stackoverflow.com/questions/30030328/correct-placement-of-colorbar-relative-to-geo-axes-cartopy" target="_blank" rel="noopener">链接.3</a><br><a href="https://gnss.help/2018/04/24/cartopy-gallery/index.html" target="_blank" rel="noopener">链接.4</a><br><a href="http://www.meteo.mcgill.ca/~cmccray/python.html" target="_blank" rel="noopener">链接.5</a><br><a href="https://www.jianshu.com/p/6506691f0788" target="_blank" rel="noopener">链接.6</a><br><a href="https://nbviewer.jupyter.org/gist/ajdawson/dd536f786741e987ae4e" target="_blank" rel="noopener">链接.7</a><br><a href="https://gmt-china.org/data/CN-border-La.dat" target="_blank" rel="noopener">链接.8</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/py_map_5.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font color=&quot;#0000ff&quot;&gt;本文同步在&lt;code&gt;MeteoAI&lt;/code&gt;和&lt;code&gt;气象学家&lt;/code&gt;公众号推送。前面的推文对于常用的Python绘图工具都有了一些介绍，在这里就不赘述了。本文主要就以下几个方面：&lt;strong&gt;“中国区域绘图”&lt;/strong&gt;、&lt;strong&gt;“包含南海”&lt;/strong&gt;、&lt;strong&gt;“兰伯特投影带经纬度标签”&lt;/strong&gt;、&lt;strong&gt;“基于salem的mask方法”&lt;/strong&gt;、&lt;strong&gt;“进阶中国区域mask方法”&lt;/strong&gt;、&lt;strong&gt;“进阶省份mask方法”&lt;/strong&gt;。对日常的实用需求能够在一定程度上满足。&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font color=&quot;#0000ff&quot;&gt;简单粗暴，&lt;code&gt;Just show you my code!&lt;/code&gt;，细节暂不做过多分析，有问题可以探讨。数据、中文字体、地图shapefile文件、代码后文全部提供。使用建议，根据提示把缺失的库使用&lt;code&gt;pip install xxx&lt;/code&gt; /&lt;code&gt;conda install xxx&lt;/code&gt; /&lt;code&gt;python setup.py install&lt;/code&gt;；安装完备，Python环境管理只推荐conda来统一管理。IDE推荐：PyCharm(有教育版)本地/服务器远程、Jupyter notebook。&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="气象绘图" scheme="https://gavin971.github.io/categories/%E6%B0%94%E8%B1%A1%E7%BB%98%E5%9B%BE/"/>
    
    
      <category term="Python" scheme="https://gavin971.github.io/tags/Python/"/>
    
      <category term="mask" scheme="https://gavin971.github.io/tags/mask/"/>
    
      <category term="China" scheme="https://gavin971.github.io/tags/China/"/>
    
      <category term="Map" scheme="https://gavin971.github.io/tags/Map/"/>
    
      <category term="Projection" scheme="https://gavin971.github.io/tags/Projection/"/>
    
  </entry>
  
  <entry>
    <title>气象学家周报-201908010</title>
    <link href="https://gavin971.github.io/2019/08/04/weekly201908011/"/>
    <id>https://gavin971.github.io/2019/08/04/weekly201908011/</id>
    <published>2019-08-04T14:38:19.000Z</published>
    <updated>2019-08-10T07:10:30.784Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/weekly.png" alt></p><blockquote><p><strong><font color="#0000ff">汇集20190804到20190810一周期间整理的资源，作为日常备份</font></strong></p></blockquote><a id="more"></a><p>#气象学术</p><ul><li><a href="https://pcmdi.llnl.gov/CMIP6/Guide/dataUsers.html" target="_blank" rel="noopener">CMIP6 Guidance for Data Users</a></li></ul><blockquote><p>包含以下八个方面：</p></blockquote><ul><li>Experiment design</li><li>Model output specifications</li><li>Accessing model output</li><li>Terms of use and citation requirements</li><li>Model and experiment documentation</li><li>Reporting suspected errors</li><li>Registering published work based on CMIP6</li><li>CMIP6 organization and governance</li></ul><p>#气象编程</p><ul><li><p><a href="https://github.com/peterwilletts24/Python-Scripts" target="_blank" rel="noopener">Python Scripts</a>：包含TRMM、CMORPH、CROSS_SECTION</p></li><li><p><a href="https://github.com/nicolasfauchereau/Auckland_Python_Workshop" target="_blank" rel="noopener">Auckland_Python_Workshop</a>；Python for Climate and Meteorological Data Analysis and Visualisation；注重练习！</p></li><li><p><a href="https://mp.weixin.qq.com/s/jpZOpnFvMwi4ZTafflXIzw" target="_blank" rel="noopener">捍卫祖国领土从每一张地图开始</a>；Python cartopy绘制标准中国地图；</p></li><li><p><a href="http://www.statsmodels.org/devel/" target="_blank" rel="noopener">statsmodels</a> is a Python module that provides classes and functions for the estimation of many different statistical models, as well as for conducting statistical tests, and statistical data exploration.<a href="http://www.statsmodels.org/devel/examples/index.html" target="_blank" rel="noopener">参考实例</a>。</p></li><li><p><a href="https://github.com/pangeo-data/awesome-open-climate-science" target="_blank" rel="noopener">Awesome Open Atmospheric, Ocean, and Climate Science</a>：This is a curated list of open source software packages that make our lives as scientists, hackers and data wranglers easier or just more awesome. This list is intended to be the fluid-earth counterpart of awesome open geoscience, although there is inevitably some overlap. It is not just climate science! We use the word “climate” in the repo name just as shorthand for the fluid part of the earth. Packages from atmospheric science, oceanography, climate science, and hydrology are all welcome.</p></li><li><p><a href="https://gist.github.com/jpwspicer/91c75f5cf7a2354fbb2d" target="_blank" rel="noopener">Julia Cartopy Examples</a></p></li><li><p>城市与生态路上的一个GISer。 主页与博客（hexo）： <a href="http://gisersqdai.top/；或，https://www.jianshu.com/u/8bfccfb12c0d" target="_blank" rel="noopener">http://gisersqdai.top/；或，https://www.jianshu.com/u/8bfccfb12c0d</a></p></li><li><p><a href="https://github.com/tjlang/SkewT" target="_blank" rel="noopener">Python 3 compliant SkewT</a></p><p>类似库：</p><ul><li><a href="https://github.com/aperezhortal/SkewTplus" target="_blank" rel="noopener">Atmospheric Profile Plotting and Diagnostics</a></li><li><a href="https://github.com/brodyfuchs/EnvAnalysis" target="_blank" rel="noopener">Modified version of SkewT module: https://pypi.python.org/pypi/SkewT</a></li><li><a href="https://github.com/timsliwin/skewt" target="_blank" rel="noopener">Skew T Project for ATMO5321 Cloud Physics Fall 2014</a></li><li><a href="https://github.com/aktaylor08/skewtpy" target="_blank" rel="noopener">plotting skewts and messing with sounding data</a></li><li><a href="https://github.com/KlemensBarfus/SkewT" target="_blank" rel="noopener">Slim Python routine for making a SkewT plot</a></li><li><a href="https://github.com/ZhengYuRadar/SkewTLP" target="_blank" rel="noopener">T-lnP图绘制，以及常见的对流参数的计算</a></li><li><a href="https://github.com/kuciauskas/skewt-data" target="_blank" rel="noopener">dataset for NUCAPS sounding data</a></li><li><a href="https://github.com/meteorologytoday/SkewT" target="_blank" rel="noopener">A python3+matplotlib+numpy+scipy Skew-T graph generator</a></li></ul></li><li><p><a href="https://github.com/meteorologytoday/Julia-NetCDF-meta" target="_blank" rel="noopener">Julia-NetCDF-meta</a>：A meta class built on NetCDF package.</p></li><li><p><a href="https://github.com/meteorologytoday/shallow-water-equation" target="_blank" rel="noopener">A spectral shallow water equation model. 1D and 2D cases.</a> 基于C++语言</p></li><li><p><a href="https://github.com/meteorologytoday/EddyDiffusivity" target="_blank" rel="noopener">EddyDiffusivity</a></p></li><li><p><a href="https://github.com/ZhengYuRadar/CPOL2CFRADIAL" target="_blank" rel="noopener">Convert China’s dual-polarization weather radar data format to CF format</a> 雷达格式转换，注释非常详细</p></li><li><p><a href="https://github.com/cwebster2/pyMeteo" target="_blank" rel="noopener">pyMeteo</a>：General meteorological routines, skew-T/log-p plotting and working with CM1 model data.Online documentation available at <a href="http://cwebster2.github.io/pyMeteo/" target="_blank" rel="noopener">http://cwebster2.github.io/pyMeteo/</a></p></li><li><p><a href="https://github.com/peterwilletts24/MetCalcs" target="_blank" rel="noopener">MetCalcs：Meteorological_Calculations</a></p></li><li><p><a href="https://github.com/peterwilletts24/Monsoon-Python-Scripts" target="_blank" rel="noopener">Python Scripts that are on Monsoon Supercomputer</a> </p><ul><li>cross_sections</li><li>geopotential</li><li>heat_flux</li><li>modules</li><li>msl_pressure</li><li>rad_flux</li><li>rain</li><li>templates</li><li>vort_and_div</li><li>winds</li></ul></li><li><p><a href="https://pyresample.readthedocs.io/en/stable/index.html" target="_blank" rel="noopener">Pyresample</a>：Pyresample is a python package for resampling geospatial image data. It is the primary method for resampling in the SatPy library, but can also be used as a standalone library. Resampling or reprojection is the process of mapping input geolocated data points to a new target geographic projection and area.Pyresample can operate on both fixed grids of data and geolocated swath data. For nearest neighbor and bilinear interpolation pyresample uses a kd-tree approach by using the fast KDTree implementation provided by the pykdtree library. Pyresample works with numpy arrays and numpy masked arrays. Interfaces to XArray objects (including dask array support) are provided in separate Resampler class interfaces and are in active development. Utility functions are available to easily plot data using Cartopy.Pyresample is tested with Python 2.7 and 3.6, but should additionally work on Python 3.4+. Pyresample will drop Python 2.7 at the end of 2019.To describe these data Pyresample uses various “geometry” objects including the AreaDefinition and SwathDefinition classes.Pyresample offers multiple resampling algorithms including:</p><ul><li>Nearest Neighbor</li><li>Elliptical Weighted Average (EWA)</li><li>Bilinear</li></ul></li></ul><ul><li><p><a href="https://github.com/Mo-Dabao/pyNMIC" target="_blank" rel="noopener">用Python处理国家气象信息中心（NMIC）的数据</a></p></li><li><p><a href="http://unidata.github.io/python-gallery/examples/index.html" target="_blank" rel="noopener">Unidata Python Gallery</a>;有大量的Python数据处理和绘图细节可以学习。<a href="https://unidata.github.io/python-gallery/_downloads/e691a362a5ef3a642b5d7e58b0147659/examples_python.zip" target="_blank" rel="noopener">下载链接：Download all examples in Python source code: examples_python.zip</a></p></li><li><p><a href="http://unidata.github.io/python-gallery/useful_tools.html" target="_blank" rel="noopener">Useful Python Tools</a>This is a list of useful and/or new Python tools that the Unidata Python Team and community are keeping an eye on or using.</p></li><li><p><a href="https://github.com/smft/gfdl_vortex_tracking_python" target="_blank" rel="noopener">gfdl_vortex_tracking_python</a>：Based on the GFDL vortex tracking algorithm to locate tropical cyclone. No need to covert wrf output to grib. 基于GFDL vortex tracking 算法追踪热带气旋，不再需要将wrf输出结果转格式再用GFDL的app了。</p></li><li><p><a href="https://github.com/smft/MPI-CRTM" target="_blank" rel="noopener">Simple code for calculating WRF output files Brightness Temperature ( TBB ) observed by MTSAT-2</a>基于Fortran语言</p></li><li><p><a href="https://github.com/NOAA-EMC/fv3gfs" target="_blank" rel="noopener">The public home of NOAA EMC’s FV3GFS Modeling System.</a> FV3GFS</p></li><li><p><a href="https://github.com/prisms-center/pbs" target="_blank" rel="noopener">A python package for submitting and managing PBS jobs</a></p></li><li><p><a href="https://github.com/travissluka/geoKdTree" target="_blank" rel="noopener">Fortran implementation of a geospatial K-d Tree for efficient lookup of closest latitude/longitude points</a></p></li><li><p><a href="https://github.com/smft/Preprocessing_CMIP5_Data_For_WRF" target="_blank" rel="noopener">Interpolate CMIP5 Data to ERA-Interim vertical levels and horizontal grid (generated by WPS).</a> ；Python绘图</p></li><li><p><a href="https://github.com/smft/Preprocessing_Ensemble_CESM_Data_For_WRF" target="_blank" rel="noopener"><strong>Preprocessing_Ensemble_CESM_Data_For_WRF</strong></a> Using <a href>CESM1(CAM5) LARGE ENSEMBLE COMMUNITY PROJECT</a>，to drive WRF. Compared with the Preprocessing_CMIP5_Data_For_WRF repositories, We update the horizontal interpolation module with <a href="https://www.earthsystemcog.org/projects/esmpy/" target="_blank" rel="noopener">ESMF’s python interface</a> ， but vertical interpolation part stays the same.Python脚本绘图</p></li><li><p><a href="https://xesmf.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">xESMF: Universal Regridder for Geospatial Data</a>；重点推荐！xESMF is a Python package for regridding. It is</p><ul><li>Powerful: It uses ESMF/ESMPy as backend and can regrid between general curvilinear grids with all ESMF regridding algorithms, such as bilinear, conservative and nearest neighbour.</li><li>Easy-to-use: It abstracts away ESMF’s complicated infrastructure and provides a simple, high-level API, compatible with xarray as well as basic numpy arrays.</li><li>Fast: It is faster than ESMPy’s original Fortran regridding engine in serial case, and also supports dask for out-of-core, parallel computation.</li></ul></li><li><p><a href="https://github.com/smft/Calculate_HSI" target="_blank" rel="noopener">Calculate human settlement index (HSI)</a>；Python计算人类宜居指数</p></li><li><p><a href="https://github.com/astrofrog/fortranlib" target="_blank" rel="noopener">Collection of personal scientific routines in Fortran</a></p></li><li><p><a href="https://github.com/osxfuse/sshfs" target="_blank" rel="noopener">File system based on the SSH File Transfer Protocol </a>；sshfs文件系统，基于C语言；<a href="http://fuse.sourceforge.net" target="_blank" rel="noopener">http://fuse.sourceforge.net</a></p></li><li><p><a href="https://github.com/MRedies/NPY-for-Fortran" target="_blank" rel="noopener">A FORTRAN module to write Numpy’s *.npy and *.npz files</a>；Fortran语言生成Python能读取的文件类型；</p></li><li><p><a href="https://github.com/openradar/PyDDA" target="_blank" rel="noopener">Pythonic multiple doppler code based off the 3D variational tecnnique</a> ；A Pythonic Multiple Doppler Radar Wind Retrieval Package。<a href="http://openradarscience.org/PyDDA" target="_blank" rel="noopener">http://openradarscience.org/PyDDA</a></p></li><li><p><a href="https://github.com/smft/ncep_bufr_reader_based_on_gsi" target="_blank" rel="noopener">读取necp卫星辐射bufr资料，基于GSI同化系统</a></p></li><li><p><a href="https://github.com/smft/CMA-AWS-converter" target="_blank" rel="noopener">CMA-AWS-converter 自动站数据转换为grads</a></p></li><li><p><a href="https://github.com/smft/Read_Himawari_binary_data" target="_blank" rel="noopener">读取向日葵卫星标准数据资料</a></p></li><li><p><a href="https://github.com/smft/CMA_SA_RADAR_READER" target="_blank" rel="noopener">读取CMA SA 雷达基数据文件&amp;&amp;球坐标转空间直角坐标</a>；读取CMA SA 雷达基数据文件&amp;&amp;球坐标转空间直角坐标 结合CMA-AWS-READER可以画基数据叠加自动站风场 read_RADAR.py:读雷达基数据文件&amp;&amp;球坐标转空间直坐标 barb_plot.py:结合CMA-AWS-READER可以画基数据叠加自动站风场</p></li><li><p><a href="https://github.com/smft/draw_basemap_from_shp_file" target="_blank" rel="noopener">根据shp文件绘制底图</a></p></li><li><p><a href="https://github.com/Derryxd/CodeSet" target="_blank" rel="noopener">demo scripts for different language</a>；气象相关语言集合；其中Fortran资料很良心</p></li><li><p><a href="https://gitlab.awi.de/paleodyn/model-analysis" target="_blank" rel="noopener">Analysis scripts for various Earth System models</a>;Paleoclimate Dynamics Shared Toolbox.A shared toolbox for common tasks within the Paleoclimate Dynamics working group at the AWI</p></li><li><p><a href="https://github.com/carpentrieslab/python-aos-lesson" target="_blank" rel="noopener">Python (and git) lesson for atmosphere and ocean scientists</a>；有数据和脚本供参考。</p></li><li><p><a href="https://docs.carpentries.org/index.html" target="_blank" rel="noopener">The Carpentries Handbook</a>；The Carpentries teaches foundational coding, and data science skills to researchers worldwide. Software Carpentry, Data Carpentry, and Library Carpentry workshops are based on our lessons. Workshop hosts, Instructors, and learners must be prepared to follow our Code of Conduct.</p></li><li><p><a href="https://carpentrieslab.github.io/python-aos-lesson/" target="_blank" rel="noopener">Python for Atmosphere and Ocean Scientists</a></p></li><li><p><a href="https://github.com/rveciana/BasemapTutorial" target="_blank" rel="noopener">BasemapTutorial</a>；比较实用；</p></li><li><p><a href="https://github.com/kpegion/SubX" target="_blank" rel="noopener">Kathy’s Codes for Accessing and Processing SubX Data from the IRI Data Library</a></p></li><li><p><a href="https://github.com/raybellwaves/xskillscore" target="_blank" rel="noopener">xskillscore: Metrics for verifying forecasts</a>：xskillscore is an open source project and Python package that provides verification metrics of deterministic (and probabilistic from properscoring) forecasts with xarray.</p><ul><li>What projects leverage xskillscore?</li></ul></li><li><p><a href="https://climpred.readthedocs.io/" target="_blank" rel="noopener">climpred</a>: An xarray wrapper for analysis of ensemble forecast models for climate prediction.</p></li><li><p><a href="https://esmlab.readthedocs.io/" target="_blank" rel="noopener">esmlab</a>: Tools for working with earth system multi-model analyses with xarray.</p></li><li><p><a href="https://mangomap.com/industries/web-mapping/tutorials/remove-unwanted-regions-from-map-data.html" target="_blank" rel="noopener">How To Remove Unwanted Regions From Your Map Data</a>；使用QGIS如何从shapefile中选取地图中指定的区域，并导出。其他相关<a href="https://gis.stackexchange.com/questions/307428/cannot-select-polygon-from-shapefile-in-qgis" target="_blank" rel="noopener">参考.1</a>；<a href="https://www.gislounge.com/save-selection-new-file-using-qgis/" target="_blank" rel="noopener">参考.2</a>；<a href="https://www.qgistutorials.com/en/docs/making_a_map.html" target="_blank" rel="noopener">参考3-对标arcgis的铁轨图</a>；<a href="https://guides.library.duke.edu/QGIS/Clip" target="_blank" rel="noopener">参考.4</a>；<a href="https://www.polarmicrobes.org/tutorial-on-qgis-how-to-make-a-map/" target="_blank" rel="noopener">参考.5</a>；</p></li><li><p><a href="https://github.com/mtop/speciesgeocoder" target="_blank" rel="noopener"> SpeciesGeoCoder</a>：Species locality data + polygons ,nexus file.</p></li><li><p><a href="https://www.jianshu.com/p/db7f5d89cbf5" target="_blank" rel="noopener">macos上安装qgis(python3.7)</a>；我的个人经验有两种：利用conda新建Python环境安装；下载QGIS完整包（700+MB）；</p></li><li><p><a href="https://ncar-hackathons.github.io/visualization/examples/cartopy_map_projections.html" target="_blank" rel="noopener">Data Visualization in Python</a>；基于bokeh和cartopy的交互绘图；</p></li><li><p><a href="https://github.com/huangynj/Python-Chinamap" target="_blank" rel="noopener">使用 PyNGL 库绘制中国地图</a>；</p></li><li><p><a href="https://coding.net/u/huangynj/p/NCL-Chinamap/git" target="_blank" rel="noopener">使用NCL绘制正确的国界、台湾岛屿、南海诸岛及省界等。</a></p></li><li><p><a href="https://salem.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">Salem</a>：Python白化的选择之一，Salem is a small library to do geoscientific data processing and plotting. It extends xarray to add geolocalised subsetting, masking, and plotting operations to xarray’s DataArray and DataSet structures.</p></li><li><p><a href="http://bbs.06climate.com/forum.php?mod=viewthread&tid=42437" target="_blank" rel="noopener">Python白化</a>；气象家园<a href="http://bbs.06climate.com/home.php?mod=space&uid=713" target="_blank" rel="noopener">@平流层的萝卜</a>提供；</p></li><li><p><a href="https://regionmask.readthedocs.io/en/stable/defined_landmask.html" target="_blank" rel="noopener">Regionmask,白化的方案之一</a></p></li><li><p><a href="https://beiyuan.me/clip-netcdf/" target="_blank" rel="noopener">从NetCDF中提取局部数据：使用的两个Python包：salem和regionmask</a>；值得借鉴！</p></li><li><p><a href="https://docs.qgis.org/3.4/en/docs/index.html" target="_blank" rel="noopener">Documentation for QGIS 3.4    </a>;python与QGIS的交互；</p></li><li><p><a href="https://github.com/pcjericks/py-gdalogr-cookbook" target="_blank" rel="noopener">py-gdalogr-cookbook</a>: A cookbook full of recipes for using the Python GDAL/OGR bindings. ;对于地图数据处理有非常详细的rst文档，图文并茂！</p></li><li><p><a href="http://pcjericks.github.io/py-gdalogr-cookbook/index.html" target="_blank" rel="noopener">Python GDAL/OGR Cookbook</a></p></li><li><p><a href="https://jakevdp.github.io/PythonDataScienceHandbook/04.13-geographic-data-with-basemap.html" target="_blank" rel="noopener">Geographic Data with Basemap</a>;配套书目《Python Data Science Handbook 》以及相应的<a href="https://github.com/jakevdp/PythonDataScienceHandbook" target="_blank" rel="noopener">Jupyter Notebooks</a></p></li><li><p><a href="https://rabernat.github.io/research_computing/" target="_blank" rel="noopener">Research Computing in Earth Sciences</a>;地球科学编程，课程网站，内容很丰富。</p></li><li><p><a href="https://python-visualization.github.io/folium/index.html" target="_blank" rel="noopener">Folium:</a> Python data, leaflet.js maps;builds on the data wrangling strengths of the Python ecosystem and the mapping strengths of the leaflet.js library. Manipulate your data in Python, then visualize it in on a Leaflet map via folium.</p></li><li><p><a href="[http://cn.voidcc.com/tag/cartopy](http://cn.voidcc.com/tag/cartopy)">cartopy常见绘图问题汇总</a></p></li><li><p><a href="https://shtools.oca.eu/shtools/index.html" target="_blank" rel="noopener">Spherical Harmonic Tools</a>：SHTOOLS is an archive of Python and Fortran 95 software that can be used to perform spherical harmonic transforms, multitaper spectral analyses on the sphere, expansions of functions into Slepian bases, and standard operations on global gravitational and magnetic field data.</p></li><li><p><a href="https://github.com/pySTEPS/pysteps" target="_blank" rel="noopener">pySTEPS</a> - Python framework for short-term ensemble prediction systems；<a href="https://pysteps.readthedocs.io/en/latest/auto_examples/index.html" target="_blank" rel="noopener">pySTEPS examples gallery</a>；强烈推荐！</p></li><li><p><a href="https://github.com/njfritter/UCSB-PSTAT-160B" target="_blank" rel="noopener">Stochastic Processes w/ Continuous Variables</a>：包含Markov chains！基于Python的脚本。</p></li><li><p><a href="https://pygsp.readthedocs.io/en/stable/index.html" target="_blank" rel="noopener">PyGSP: Graph Signal Processing in Python</a></p></li><li><p><a href="https://michaeldorman.github.io/Spatio-temporal-R-BGU-group-meeting-Sep-2018/trajectories_ggplot2_v01.html" target="_blank" rel="noopener">Visualizing trajectory direction with ggplot2</a></p></li><li><p><a href="https://github.com/UW-Hydro/VIC" target="_blank" rel="noopener">The Variable Infiltration Capacity (VIC) Macroscale Hydrologic Model</a> ；水文模型VIC；VIC (Liang et al., 1994) is a macroscale hydrologic model that solves full water and energy balances, originally developed by Xu Liang at the University of Washington. VIC is a research model and in its various forms it has been applied to most of the major river basins around the world, as well as globally. The VIC model is distributed under the GNU GPL v2.0 license. If you make use of this model, please acknowledge the appropriate references listed on the references page. These should include Liang et al., 1994, Hamman et al., 2018 for VIC-5, and any references relevant to the features you are using, which are cited in the feature descriptions on the Model Overview page.</p></li><li><p><a href="https://github.com/UW-Hydro/RVIC" target="_blank" rel="noopener">RVIC Streamflow Routing Model </a>；The RVIC streamflow routing model is an adapted version of the model the model typically used as a post-processor with the Variable Infiltration Capacity (VIC) hydrology model. The routing model is a source-to-sink model that solves a linearized version of the Saint-Venant equations. This model, developed by Lohmann et al. (1996, 1998a, 1998b), has been used in many offline studies at a variety of spatial scales. Furthermore, the development of the impulse response functions (IRFs) is done as a preprocessing step, which considerably reduces the computation time in subsequent routing steps.</p></li><li><p><a href="https://github.com/NCAR/GARD" target="_blank" rel="noopener">Generalized Analog Regression Downscaling (GARD) code</a>；广义相似回归降尺度模型；</p></li><li><p><a href="https://github.com/rabernat/intro_to_physical_oceanography" target="_blank" rel="noopener">Course materials for Introduction to Introduction to Physical Oceanography (EESC4925)</a>；物理海洋学Jupyter课程</p></li><li><p><a href="https://github.com/softwareunderground/awesome-open-geoscience" target="_blank" rel="noopener">Awesome Open Geoscience: </a>Open geoscience is even more awesome, so we made a list. This list is curated from repositories that make our lives as geoscientists, hackers and data wranglers easier or just more awesome. In accordance with the awesome manifesto, we add awesome repositories. We are open to contributions of course, this is a community effort after all.</p></li><li><p><a href="http://pangeo.io/" target="_blank" rel="noopener">Pangeo </a>:A community platform for Big Data geoscience;对应的降水图map非常细致精美！值得借鉴！</p><ul><li><a href="http://pangeo.io/use_cases/physical-oceanography/sea-surface-height.html#gallery-use-cases-physical-oceanography-sea-surface-height-ipynb" target="_blank" rel="noopener">Sea Surface Altimetry Data Analysis</a></li><li><a href="http://pangeo.io/use_cases/physical-oceanography/SOSE.html#gallery-use-cases-physical-oceanography-sose-ipynb" target="_blank" rel="noopener">SOSE Heat and Salt Budgets</a></li><li><a href="http://pangeo.io/use_cases/climate-modeling/CESM-Large-Ensemble-Tracer-Budget-Example.html#gallery-use-cases-climate-modeling-cesm-large-ensemble-tracer-budget-example-ipynb" target="_blank" rel="noopener">CESM Large Ensemble Tracer Budget</a></li><li><a href="http://pangeo.io/use_cases/meteorology/newmann_ensemble_meteorology.html#gallery-use-cases-meteorology-newmann-ensemble-meteorology-ipynb" target="_blank" rel="noopener">US Precipitation and Temperature Analysis</a></li></ul></li><li><p><a href="https://github.com/pangeo-data/pangeo-example-notebooks" target="_blank" rel="noopener">Pangeo Example Notebooks</a>;</p></li><li><p><a href="https://github.com/wenqiushi/project_mlwf" target="_blank" rel="noopener">project_mlwf:</a>;a tiny machine learning weather forcasting with not so much ambitions</p></li></ul><p>#气象数据</p><ul><li><a href>the University of Wyoming’s website</a></li><li><a href="https://github.com/vincentarelbundock/Rdatasets" target="_blank" rel="noopener"> An archive of datasets distributed with R</a></li><li><a href="https://github.com/nvkelso/natural-earth-vector" target="_blank" rel="noopener">Natural Earth Vector-</a>：A global, public domain map dataset available at three scales and featuring tightly integrated vector and raster data. Natural Earth is a public domain map dataset available at 1:10m, 1:50m, and 1:110 million scales. Featuring tightly integrated vector (here) and raster data (over there), with Natural Earth you can make a variety of visually pleasing, well-crafted maps with cartography or GIS software.Natural Earth was built through a collaboration of many volunteers and is supported by NACIS (North American Cartographic Information Society), and is free for use in any type of project (see our Terms of Use page for more information).</li><li></li></ul><p>#技不压身</p><ul><li><p><a href="https://github.com/jwasham/coding-interview-university" target="_blank" rel="noopener">Coding Interview University 一套完整的学习手册帮助自己准备 Google 的面试</a></p></li><li><p><a href="https://space.bilibili.com/97068901/channel/detail?cid=54167" target="_blank" rel="noopener">机器学习-白板推导系列</a>；公式推导特别详细，思路清晰！</p></li><li><p><a href="https://github.com/JustFollowUs/EE_MUST#learning_routine" target="_blank" rel="noopener">电子工程系必备技能EE_MUST</a>；其实，气象背景能有一定的EE的基础那真是如虎添翼！</p></li><li><p><a href="http://smellysheep.com/page/2/" target="_blank" rel="noopener">用 GRACE RL06 Level-2 月解和 GLDAS 水文模型数据反演地表质量异常和陆地水储量变化</a>；中科研云南天文台的一位地球动力学博士生的博客，涉及气象的部分知识，譬如，shapefile和gldas陆面数据等，可以借鉴其对于方法和概念的本质的理解和Python的动手实践。赞！👍</p></li></ul><p>#推荐书籍</p><ul><li>动力气象学引论（原书第五版）</li><li>数学指南：实用数学手册</li><li>Python物理学高效计算</li></ul><p>#大道至简</p><ul><li>When learning a technical concept, I find it’s better to start with a high-level overview and work your way down into the details rather than starting at the bottom and getting immediately lost.</li><li>真正的隐逸生活是在都市繁华之中，在心灵净土独善其身，找到一份宁静<br>The real reclusive life is in the prosperity of the city and find a peace in the pure land of mind.</li><li>勤学如春起之苗，不见其增，日有所长；辍学如磨刀之石，不见其损，日有所亏。（陶渊明）</li><li>When learning a technical concept, I find it’s better to start with a high-level overview and work your way down into the details rather than starting at the bottom and getting immediately lost.</li></ul><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/weekly.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;汇集20190804到20190810一周期间整理的资源，作为日常备份&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习资源" scheme="https://gavin971.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"/>
    
    
      <category term="Life" scheme="https://gavin971.github.io/tags/Life/"/>
    
      <category term="Progrmme" scheme="https://gavin971.github.io/tags/Progrmme/"/>
    
      <category term="Meteorology" scheme="https://gavin971.github.io/tags/Meteorology/"/>
    
  </entry>
  
  <entry>
    <title>Python中如何使用NCL的全部色表Colormaps？</title>
    <link href="https://gavin971.github.io/2019/06/15/cmaps-python/"/>
    <id>https://gavin971.github.io/2019/06/15/cmaps-python/</id>
    <published>2019-06-15T12:35:41.000Z</published>
    <updated>2019-06-15T15:45:01.106Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/colormaps.png" alt></p><blockquote><p><strong><font color="#0000ff">本文同步发布于公众号『气象学家』<a href="https://mp.weixin.qq.com/s/mvnVXr65J-VRW2wQO-1ufg" target="_blank" rel="noopener">传送门</a>。NCL中丰富的<a href="https://www.ncl.ucar.edu/Document/Graphics/color_table_gallery.shtml" target="_blank" rel="noopener">Color Table</a>，而在Python中matplotlib绘图工具包中默认的类型可能略显不足。所以，今天介绍一下Dr.🐱开源的cmaps库，即可将NCL的丰富多彩，完美地引入到Python绘图中来。另外，给Dr.🐱“打广告”，欢迎在GitHub（<a href="https://github.com/hhuangwx/cmaps" target="_blank" rel="noopener">&lt;&lt;项目地址&gt;&gt;https://github.com/hhuangwx/cmaps</a>）上Star或Fork.</font></strong></p></blockquote><a id="more"></a><h3 id="cmaps简介"><a href="#cmaps简介" class="headerlink" title="cmaps简介"></a>cmaps简介</h3><p>Make it easier to use user defined colormaps in matplotlib. Default colormaps are from NCL website.</p><p>Users can define a environmental variable CMAP_DIR pointing to the folder containing the self-defined rgb files.</p><h3 id="安装-Installation"><a href="#安装-Installation" class="headerlink" title="安装 Installation"></a>安装 Installation</h3><blockquote><p><code>pip install https://github.com/hhuangwx/cmaps/archive/master.zip</code></p></blockquote><blockquote><p>or:</p></blockquote><blockquote><p><code>git clone https://github.com/hhuangwx/cmaps.git</code><br><code>cd cmaps</code><br><code>python setup.py install</code></p></blockquote><h3 id="使用-Usage"><a href="#使用-Usage" class="headerlink" title="使用 Usage"></a>使用 Usage</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> cmaps</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = y = np.arange(<span class="number">-3.0</span>, <span class="number">3.01</span>, <span class="number">0.05</span>)</span><br><span class="line">X, Y = np.meshgrid(x, y)</span><br><span class="line"></span><br><span class="line">sigmax = sigmay = <span class="number">1.0</span></span><br><span class="line">mux = muy = sigmaxy=<span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">Xmu = X-mux</span><br><span class="line">Ymu = Y-muy</span><br><span class="line"></span><br><span class="line">rho = sigmaxy/(sigmax*sigmay)</span><br><span class="line">z = Xmu**<span class="number">2</span>/sigmax**<span class="number">2</span> + Ymu**<span class="number">2</span>/sigmay**<span class="number">2</span> - <span class="number">2</span>*rho*Xmu*Ymu/(sigmax*sigmay)</span><br><span class="line">denom = <span class="number">2</span>*np.pi*sigmax*sigmay*np.sqrt(<span class="number">1</span>-rho**<span class="number">2</span>)</span><br><span class="line">Z = np.exp(-z/(<span class="number">2</span>*(<span class="number">1</span>-rho**<span class="number">2</span>))) / denom</span><br><span class="line"></span><br><span class="line">plt.pcolormesh(X,Y,Z,cmap=cmaps.WhiteBlueGreenYellowRed)</span><br><span class="line">plt.colorbar()</span><br></pre></td></tr></table></figure><p><img src="/images/cmaps1.png/" alt></p><h3 id="罗列色图"><a href="#罗列色图" class="headerlink" title="罗列色图"></a>罗列色图</h3><p><code>List the colormaps using the code in the examples:</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cmaps</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> inspect</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">matplotlib.rc(<span class="string">'text'</span>, usetex=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">list_cmaps</span><span class="params">()</span>:</span></span><br><span class="line">    attributes = inspect.getmembers(cmaps, <span class="keyword">lambda</span> _: <span class="keyword">not</span> (inspect.isroutine(_)))</span><br><span class="line">    colors = [_[<span class="number">0</span>] <span class="keyword">for</span> _ <span class="keyword">in</span> attributes <span class="keyword">if</span></span><br><span class="line">              <span class="keyword">not</span> (_[<span class="number">0</span>].startswith(<span class="string">'__'</span>) <span class="keyword">and</span> _[<span class="number">0</span>].endswith(<span class="string">'__'</span>))]</span><br><span class="line">    <span class="keyword">return</span> colors</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    color = list_cmaps()</span><br><span class="line"></span><br><span class="line">    a = np.outer(np.arange(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0.001</span>), np.ones(<span class="number">10</span>))</span><br><span class="line">    plt.figure(figsize=(<span class="number">20</span>, <span class="number">20</span>))</span><br><span class="line">    plt.subplots_adjust(top=<span class="number">0.95</span>, bottom=<span class="number">0.05</span>, left=<span class="number">0.01</span>, right=<span class="number">0.99</span>)</span><br><span class="line">    ncmaps = len(color)</span><br><span class="line">    nrows = <span class="number">8</span></span><br><span class="line">    <span class="keyword">for</span> i, k <span class="keyword">in</span> enumerate(color):</span><br><span class="line">        plt.subplot(nrows, ncmaps // nrows + <span class="number">1</span>, i + <span class="number">1</span>)</span><br><span class="line">        plt.axis(<span class="string">'off'</span>)</span><br><span class="line">        plt.imshow(a, aspect=<span class="string">'auto'</span>, cmap=getattr(cmaps, k), origin=<span class="string">'lower'</span>)</span><br><span class="line">        plt.title(k, rotation=<span class="number">90</span>, fontsize=<span class="number">10</span>)</span><br><span class="line">        plt.title(k, fontsize=<span class="number">10</span>)</span><br><span class="line">    plt.savefig(<span class="string">'colormaps.png'</span>, dpi=<span class="number">300</span>)</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.ncl.ucar.edu/Document/Graphics/color_table_gallery.shtml" target="_blank" rel="noopener">链接.1</a><br><a href="https://github.com/hhuangwx/cmaps" target="_blank" rel="noopener">链接.2</a><br><a href="http://bbs.06climate.com/forum.php?mod=viewthread&tid=43521" target="_blank" rel="noopener">链接.3</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p> <img src="/images/QQRR1.png" width="300" height="250" alt align="center">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/colormaps.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;本文同步发布于公众号『气象学家』&lt;a href=&quot;https://mp.weixin.qq.com/s/mvnVXr65J-VRW2wQO-1ufg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;。NCL中丰富的&lt;a href=&quot;https://www.ncl.ucar.edu/Document/Graphics/color_table_gallery.shtml&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Color Table&lt;/a&gt;，而在Python中matplotlib绘图工具包中默认的类型可能略显不足。所以，今天介绍一下Dr.🐱开源的cmaps库，即可将NCL的丰富多彩，完美地引入到Python绘图中来。另外，给Dr.🐱“打广告”，欢迎在GitHub（&lt;a href=&quot;https://github.com/hhuangwx/cmaps&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;lt;&amp;lt;项目地址&amp;gt;&amp;gt;https://github.com/hhuangwx/cmaps&lt;/a&gt;）上Star或Fork.&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术积累" scheme="https://gavin971.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="Python" scheme="https://gavin971.github.io/tags/Python/"/>
    
      <category term="NCL" scheme="https://gavin971.github.io/tags/NCL/"/>
    
      <category term="Color Table" scheme="https://gavin971.github.io/tags/Color-Table/"/>
    
      <category term="Colormaps" scheme="https://gavin971.github.io/tags/Colormaps/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter notebook简介及嵌入Hexo博客中</title>
    <link href="https://gavin971.github.io/2019/06/06/jupyter-hexo/"/>
    <id>https://gavin971.github.io/2019/06/06/jupyter-hexo/</id>
    <published>2019-06-06T03:24:39.000Z</published>
    <updated>2019-06-06T15:55:37.868Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/jupyter.jpeg" alt></p><blockquote><p><strong><font color="#0000ff">本文简版同步发布于公众号『气象学家』<a href="https://mp.weixin.qq.com/s/IFi6FMD93ca73SnCpY-kyw" target="_blank" rel="noopener">传送门</a>。Jupyter是从IPython notebook演变升级而来，是一个交互式笔记本。其借助所谓的内核（Kernel）的概念，现在Jupyter Notebook 可以同时支持包括R、Julia、Python2、Python3、Ruby 等50多种不同编程环境。Jupyter集成了代码、公式、图片、注释、数据于一体，能够将其作为文档使用。Python的环境配置好后，可以逐步地处理数据，绘制图片，推导公式，能够极大地减少重复劳动，而且调试都很明了，调试通过，直接可以用作教学实践，而无需另外单独制作PPT。本文主要简单地介绍Jupyter的安装和使用，并用实例来说明。</font></strong></p></blockquote><a id="more"></a><h1 id="Jupyter基本安装"><a href="#Jupyter基本安装" class="headerlink" title="Jupyter基本安装"></a>Jupyter基本安装</h1><p>在安装之前建议安装好Python，而比较推荐的方法是使用<a href="https://www.anaconda.com/download/" target="_blank" rel="noopener">Anaconda</a>或者是精简的<a href="https://conda.io/miniconda.html" target="_blank" rel="noopener">Miniconda</a>，Anaconda是一个开源的Python发行版本，包含了conda、python等180多个科学包及其依赖项。因为包含了大量的科学包，所以Anaconda的安装包比较大。如果为了省时间，也可以使用Miniconda这个较小的发行版。现在推荐安装Python3.7+的版本，而Python2.x在2020年就停止维护了，目前大多数Python库都基于Python3+。</p><h2 id="若安装了Anaconda"><a href="#若安装了Anaconda" class="headerlink" title="若安装了Anaconda"></a>若安装了Anaconda</h2><p><code>无需在单独安装jupyter了，安装包内已经包含。</code></p><h3 id="可视化安装"><a href="#可视化安装" class="headerlink" title="可视化安装"></a>可视化安装</h3><p>64-Bit Graphical Installer (637 MB)安装方法，就是一顿点点点！！！即可！！！<br>Python 3.7 version(以Mac为例)<br><a href="https://repo.anaconda.com/archive/Anaconda3-2019.03-MacOSX-x86_64.pkg" target="_blank" rel="noopener">Download</a></p><h3 id="命令行安装"><a href="#命令行安装" class="headerlink" title="命令行安装"></a>命令行安装</h3><p>64-Bit Command Line Installer (542 MB)安装方法：</p><h4 id="获取安装文件"><a href="#获取安装文件" class="headerlink" title="获取安装文件"></a>获取安装文件</h4><p><code>cd ~/wget https://repo.anaconda.com/archive/Anaconda3-2019.03-MacOSX-x86_64.sh</code></p><h4 id="安装miniconda，根据提示完成安装"><a href="#安装miniconda，根据提示完成安装" class="headerlink" title="安装miniconda，根据提示完成安装"></a>安装miniconda，根据提示完成安装</h4><p><code>cd ~/bash  Anaconda3-2019.03-MacOSX-x86_64.sh</code></p><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><p>自动添加到zshrc或者bashrc中了</p><h4 id="手动更新环境变量"><a href="#手动更新环境变量" class="headerlink" title="手动更新环境变量"></a>手动更新环境变量</h4><p><code>source ~/.xxxxxxx</code></p><h2 id="若安装了Miniconda"><a href="#若安装了Miniconda" class="headerlink" title="若安装了Miniconda"></a>若安装了Miniconda</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>和anaconda安装步骤一致</p><h3 id="升级conda以及pip-version"><a href="#升级conda以及pip-version" class="headerlink" title="升级conda以及pip version"></a>升级conda以及pip version</h3><p><code>conda upgrade conda</code></p><p><code>pip install --upgrade pip</code></p><h3 id="conda命令安装"><a href="#conda命令安装" class="headerlink" title="conda命令安装"></a>conda命令安装</h3><p><code>conda install ipython jupyter</code></p><h3 id="pip命令安装"><a href="#pip命令安装" class="headerlink" title="pip命令安装"></a>pip命令安装</h3><p><code>pip install jupyter</code></p><p>更多详见<a href="https://jupyter.readthedocs.io/en/latest/install.html" target="_blank" rel="noopener">jupyter官网</a>。</p><h1 id="Jupyter的简单设置"><a href="#Jupyter的简单设置" class="headerlink" title="Jupyter的简单设置"></a>Jupyter的简单设置</h1><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p><code>jupyter notebook</code></p><p><img src="/images/tryjupyter_file.png" alt></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">jupyter </span>notebook notebook.ipynb</span><br><span class="line"></span><br><span class="line"><span class="keyword">jupyter </span>notebook --port <span class="number">9999</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">jupyter </span>notebook --no-<span class="keyword">browser</span></span><br></pre></td></tr></table></figure><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>在github上发现了一个jupyter-themes工具，可以通过pip安装，非常方便使用。<br>首先是主题下载，命令行如下所示：</p><p><code>pip install --no-dependencies jupyterthemes==0.18.2</code></p><p>安装好了，有的电脑可能会提示缺少 lesscpy，继续 pip 安装</p><p><code>pip install lesscpy</code><br>然后是对主题选择、字体大小进行设置，譬如:</p><p><code>jt --lineh 140 -f consolamono -tf ptmono -t grade3 -ofs 14 -nfs 14 -tfs 14 -fs 14 -T -N</code></p><p>接着让 jupyter notebook 实现自动代码补全，首先安装 nbextensions</p><p><code>pip install jupyter_contrib_nbextensions</code><br><code>jupyter contrib nbextension install --user</code></p><p>具体参考：<a href="https://www.cnblogs.com/qiuxirufeng/p/9609031.html" target="_blank" rel="noopener">链接</a></p><h1 id="Jupyter的实例"><a href="#Jupyter的实例" class="headerlink" title="Jupyter的实例"></a>Jupyter的实例</h1><p>从github上找到开源的气象ipynb文件”<a href="https://github.com/royalosyin/Python-Practical-Application-on-Climate-Variability-Studies" target="_blank" rel="noopener">Python-Practical-Application-on-Climate-Variability-Studies</a>“</p><p><img src="/images/ipynb.png" alt></p><h2 id="Jupyter的-ipynb文件显示加载"><a href="#Jupyter的-ipynb文件显示加载" class="headerlink" title="Jupyter的.ipynb文件显示加载"></a>Jupyter的.ipynb文件显示加载</h2><p>登陆<a href="https://nbviewer.jupyter.org/" target="_blank" rel="noopener">https://nbviewer.jupyter.org/</a>，然后输入相应的ipynb文件链接，即可在线显示。也可以在本地的jupyter中打开。</p><h2 id="Hexo个人博客静态页面中嵌入Jupyter"><a href="#Hexo个人博客静态页面中嵌入Jupyter" class="headerlink" title="Hexo个人博客静态页面中嵌入Jupyter"></a>Hexo个人博客静态页面中嵌入Jupyter</h2><p>由于Markdown能够支持html语法，所以，稍微调整一下高度和宽度，就能够适应博客的页面。</p><p><code>以GPCP降水相关分析。示例代码：</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"https://nbviewer.jupyter.org/github/royalosyin/Python-Practical-Application-on-Climate-Variability-Studies/blob/master/ex12-Analysis%20of%20Monthly%20GPCP%20precipitation.ipynb"</span> <span class="attr">width</span>=<span class="string">"570"</span> <span class="attr">height</span>=<span class="string">"2000"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>效果如下：</code></p><iframe src="https://nbviewer.jupyter.org/github/royalosyin/Python-Practical-Application-on-Climate-Variability-Studies/blob/master/ex12-Analysis%20of%20Monthly%20GPCP%20precipitation.ipynb" width="570" height="2000"></iframe> <p>参考：</p><p><a href="https://github.com/royalosyin/Python-Practical-Application-on-Climate-Variability-Studies" target="_blank" rel="noopener">链接.1</a><br><a href="https://www.cnblogs.com/qiuxirufeng/p/9609031.html" target="_blank" rel="noopener">链接.2</a><br><a href="http://bbs.06climate.com/forum.php?mod=viewthread&tid=61378&extra=page%3D2" target="_blank" rel="noopener">链接.3</a><br><a href="https://scitools.org.uk/iris/docs/latest/gallery.html" target="_blank" rel="noopener">链接.4</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p> <img src="/images/QQRR1.png" width="300" height="250" alt align="center">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/jupyter.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;本文简版同步发布于公众号『气象学家』&lt;a href=&quot;https://mp.weixin.qq.com/s/IFi6FMD93ca73SnCpY-kyw&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;。Jupyter是从IPython notebook演变升级而来，是一个交互式笔记本。其借助所谓的内核（Kernel）的概念，现在Jupyter Notebook 可以同时支持包括R、Julia、Python2、Python3、Ruby 等50多种不同编程环境。Jupyter集成了代码、公式、图片、注释、数据于一体，能够将其作为文档使用。Python的环境配置好后，可以逐步地处理数据，绘制图片，推导公式，能够极大地减少重复劳动，而且调试都很明了，调试通过，直接可以用作教学实践，而无需另外单独制作PPT。本文主要简单地介绍Jupyter的安装和使用，并用实例来说明。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术积累" scheme="https://gavin971.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="jupyter" scheme="https://gavin971.github.io/tags/jupyter/"/>
    
      <category term="Markdown" scheme="https://gavin971.github.io/tags/Markdown/"/>
    
      <category term="Hexo" scheme="https://gavin971.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Mac上如何使用Fortran来读写NetCDF数据文件</title>
    <link href="https://gavin971.github.io/2019/06/05/Mac-gfortran-netcdf/"/>
    <id>https://gavin971.github.io/2019/06/05/Mac-gfortran-netcdf/</id>
    <published>2019-06-04T17:00:31.000Z</published>
    <updated>2019-06-06T13:23:59.572Z</updated>
    
    <content type="html"><![CDATA[<p><strong><p align="center"><font color="#c8044b" size="2" face="黑体"><code>阅读建议：电脑端/iPad端阅读，按照文章左边栏三级标题来捋思路，安装过程输出可忽略。实际操作报错了，再按图索骥看细节！</code></font></p></strong><br><img src="/images/panoply.jpg" alt></p><blockquote><p><strong><font color="#0000ff">本文简版同步发布于公众号『气象学家』<a href="https://mp.weixin.qq.com/s/UNH8DcFvxtlakSURL4zoGQ" target="_blank" rel="noopener">传送门</a>。从页面<a href="https://www.unidata.ucar.edu/software/netcdf/software.html" target="_blank" rel="noopener">“Software for Manipulating or Displaying NetCDF Data”</a>能找到几十种语言或者工具软件可以处理NetCDF（<a href="https://www.unidata.ucar.edu/publications/factsheets/current/factsheet_netcdf.pdf" target="_blank" rel="noopener">Network Common Data Form</a>）的数据，有些软件是可以跨平台的，强烈推荐&gt;&gt;<a href="https://www.giss.nasa.gov/tools/panoply/" target="_blank" rel="noopener">免费软件Panoply</a>&lt;&lt;,对于NetCDF文件的可视化和简单的数据导出非常的优秀，Mac、Linux、Windows都能使用。当然，现在对于不同的处理要求和速度完全可以选择不同的工具方法处理NetCDF，Python/ncl对于NetCDF的读取和创建也已经非常得方便了。但是，目前就使用Fortran去调用NetCDF的Fortran API，处理速度上还是有很大的优势，所以，简单以MacOS为例，就Fortran处理NetCDF相关的库的安装和环境变量设置来做个简单的介绍，并用实例来加深理解，但是并不做深度解读，抛砖引玉而已。后面另开一篇文章就grib数据的处理做介绍（Python、NCL、wgrib2）。</font></strong></p></blockquote><a id="more"></a><h1 id="配料："><a href="#配料：" class="headerlink" title="配料："></a>配料：</h1><blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>NetCDF-C</span><br><span class="line"><span class="bullet">2. </span>NetCDF-Fortran </span><br><span class="line"><span class="bullet">3. </span>szip (Installing dependencies for netcdf: szip and hdf5)</span><br><span class="line"><span class="bullet">4. </span>hdf5 (Installing dependencies for netcdf: szip and hdf5)</span><br><span class="line"><span class="bullet">5. </span>gcc</span><br><span class="line"><span class="bullet">6. </span>gfortran</span><br><span class="line"><span class="bullet">7. </span>Homebrew</span><br></pre></td></tr></table></figure></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><code>系统版本：macOS Mojave  version 10.14.5</code></p><blockquote><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">对于macOS完全可以很大程度的依赖Homebrew来进行很多包的安装。</span><br><span class="line">因为有人已经造好了轮子，依赖关系都已经完美处理好了，对于野生气象码农简直是太有好了。</span><br><span class="line">当然，让我强行一波手动安装也是不在话下，对于初学者还是建议手动安装感受一下。</span><br><span class="line">而<span class="string">"熟练工"</span>节省时间成本完全可以一键式骚操作！</span><br><span class="line">本安装为了更省事可以说是一站式气象科学依赖库全家桶<span class="comment">(安装cdo</span></span><br><span class="line"><span class="comment">/nco)</span>都给安好了！</span><br><span class="line">废话不多说，上干货。</span><br></pre></td></tr></table></figure></blockquote><p><img src="/images/homebrew.png" alt></p><h2 id="安装Homebrew"><a href="#安装Homebrew" class="headerlink" title="安装Homebrew"></a>安装Homebrew</h2><h3 id="homebrew-can-be-downloaded-and-installed-in-one-step"><a href="#homebrew-can-be-downloaded-and-installed-in-one-step" class="headerlink" title="homebrew can be downloaded and installed in one step:"></a>homebrew can be downloaded and installed in one step:</h3><blockquote><p><code>ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></p></blockquote><p><code>or</code></p><h3 id="If-this-doesn’t-work-do"><a href="#If-this-doesn’t-work-do" class="headerlink" title="If this doesn’t work do"></a>If this doesn’t work do</h3><blockquote><p><code>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install &gt; brew_install_script</code></p><p><code>ruby brew_install_script</code></p><p><code>rehash</code></p></blockquote><p><code>在此，Homebrew安装结束！</code></p><h2 id="编译工具安装-gcc-g-、-gfortran、make、cmake"><a href="#编译工具安装-gcc-g-、-gfortran、make、cmake" class="headerlink" title="编译工具安装 gcc/g++ 、 gfortran、make、cmake"></a>编译工具安装 gcc/g++ 、 gfortran、make、cmake</h2><p>首先在终端查看诸工具是否已经安装：比如gcc –version，如果没有安装或者不够新，下面是自动安装命令</p><blockquote><p><code>gcc/g++: brew install gcc, brew install g++</code></p><p><code>gfortran: brew install gfortran</code></p><p><code>make: brew install make</code></p><p><code>cmake: brew install cmake</code></p><p><code>或者在cmake官网下载二进制安装文件(带GUI界面)，双击安装即可！</code></p></blockquote><h2 id="安装-cdo、netcdf、nco"><a href="#安装-cdo、netcdf、nco" class="headerlink" title="安装 cdo、netcdf、nco"></a>安装 cdo、netcdf、nco</h2><blockquote><p><code>$brew tap homebrew/science</code></p><p><code>$brew install cdo</code></p><p><code>$brew install netcdf</code></p><p><code>$brew install nco</code>  </p><p><code>nco安装时候，可能报错，需要安装[Java SE](https://github.com/frekele/oracle-java/releases). https://github.com/frekele/oracle-java/releases</code></p></blockquote><p><code>安装结束！</code></p><p><strong>具体的安装过程：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"> ✘ ⚙  ~  brew tap homebrew/science</span><br><span class="line">Error: homebrew/science was deprecated. This tap is now empty as all its formulae were migrated.</span><br><span class="line"> ✘ ⚙  ~  brew install netcdf</span><br><span class="line">==&gt; Installing dependencies for netcdf: szip and hdf5</span><br><span class="line">==&gt; Installing netcdf dependency: szip</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/szip-2.1.1_1.mojave.bottle.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Pouring szip-2.1.1_1.mojave.bottle.tar.gz</span><br><span class="line">🍺  /usr/local/Cellar/szip/2.1.1_1: 11 files, 109.4KB</span><br><span class="line">==&gt; Installing netcdf dependency: hdf5</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/hdf5-1.10.5_1.mojave.bottle.tar.gz</span><br><span class="line">==&gt; Downloading from https://akamai.bintray.com/28/28ee1944f9b17a50bddbfbc1730d06373efaf2f188930fa1624370bb895626df?__gda__=exp=1559187781~hmac=eda4d7981775af</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Pouring hdf5-1.10.5_1.mojave.bottle.tar.gz</span><br><span class="line">Warning: hdf5 dependency gcc was built with a different C++ standard</span><br><span class="line">library (libstdc++ from clang). This may cause problems at runtime.</span><br><span class="line">🍺  /usr/local/Cellar/hdf5/1.10.5_1: 256 files, 14.6MB</span><br><span class="line">==&gt; Installing netcdf</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/netcdf-4.6.3_1.mojave.bottle.tar.gz</span><br><span class="line">==&gt; Downloading from https://akamai.bintray.com/d7/d798cbc16c2e6c312d921abf4cef0d74f094c9f6496114c06219baabaa962974?__gda__=exp=1559187805~hmac=17d415c33a7f32</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Pouring netcdf-4.6.3_1.mojave.bottle.tar.gz</span><br><span class="line">Warning: netcdf dependency gcc was built with a different C++ standard</span><br><span class="line">library (libstdc++ from clang). This may cause problems at runtime.</span><br><span class="line">🍺  /usr/local/Cellar/netcdf/4.6.3_1: 85 files, 6.2MB</span><br><span class="line"> ⚙  ~  ncdump -h</span><br><span class="line">ncdump [-c|-h] [-v ...] [[-b|-f] [c|f]] [-l len] [-n name] [-p n[,n]] [-k] [-x] [-s] [-t|-i] [-g ...] [-w] [-Ln] file</span><br><span class="line">  [-c]             Coordinate variable data and header information</span><br><span class="line">  [-h]             Header information only, no data</span><br><span class="line">  [-v var1[,...]]  Data for variable(s) &lt;var1&gt;,... only</span><br><span class="line">  [-b [c|f]]       Brief annotations for C or Fortran indices in data</span><br><span class="line">  [-f [c|f]]       Full annotations for C or Fortran indices in data</span><br><span class="line">  [-l len]         Line length maximum in data section (default 80)</span><br><span class="line">  [-n name]        Name for netCDF (default derived from file name)</span><br><span class="line">  [-p n[,n]]       Display floating-point values with less precision</span><br><span class="line">  [-k]             Output kind of netCDF file</span><br><span class="line">  [-s]             Output special (virtual) attributes</span><br><span class="line">  [-t]             Output time data as date-time strings</span><br><span class="line">  [-i]             Output time data as date-time strings with ISO-8601 'T' separator</span><br><span class="line">  [-g grp1[,...]]  Data and metadata for group(s) &lt;grp1&gt;,... only</span><br><span class="line">  [-w]             With client-side caching of variables for DAP URLs</span><br><span class="line">  [-x]             Output XML (NcML) instead of CDL</span><br><span class="line">  [-Xp]            Unconditionally suppress output of the properties attribute</span><br><span class="line">  [-Ln]            Set log level to n (&gt;= 0); ignore if logging not enabled.</span><br><span class="line">  file             Name of netCDF file (or URL if DAP access enabled)</span><br><span class="line">netcdf library version 4.6.3 of May  8 2019 00:09:03 $</span><br><span class="line"> ✘ ⚙  ~  brew install cdo</span><br><span class="line">Updating Homebrew...</span><br><span class="line">==&gt; Auto-updated Homebrew!</span><br><span class="line">Updated 1 tap (homebrew/core).</span><br><span class="line">==&gt; Updated Formulae</span><br><span class="line">exploitdb</span><br><span class="line"></span><br><span class="line">Error: No available formula with the name "cdo"</span><br><span class="line">==&gt; Searching for a previously deleted formula (in the last month)...</span><br><span class="line">Warning: homebrew/core is shallow clone. To get complete history run:</span><br><span class="line">  git -C "$(brew --repo homebrew/core)" fetch --unshallow</span><br><span class="line"></span><br><span class="line">Error: No previously deleted formula found.</span><br><span class="line">==&gt; Searching for similarly named formulae...</span><br><span class="line">This similarly named formula was found:</span><br><span class="line">cdogs-sdl</span><br><span class="line">To install it, run:</span><br><span class="line">  brew install cdogs-sdl</span><br><span class="line">==&gt; Searching taps...</span><br><span class="line">==&gt; Searching taps on GitHub...</span><br><span class="line">Error: No formulae found in taps.</span><br><span class="line"> ✘ ⚙  ~  brew tap moffat/sciencebits</span><br><span class="line">==&gt; Tapping moffat/sciencebits</span><br><span class="line">Cloning into '/usr/local/Homebrew/Library/Taps/moffat/homebrew-sciencebits'...</span><br><span class="line">remote: Enumerating objects: 6, done.</span><br><span class="line">remote: Counting objects: 100% (6/6), done.</span><br><span class="line">remote: Compressing objects: 100% (5/5), done.</span><br><span class="line">remote: Total 6 (delta 0), reused 3 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (6/6), done.</span><br><span class="line">Tapped 1 formula (32 files, 28.0KB).</span><br><span class="line"> ⚙  ~  brew install cdo</span><br><span class="line"></span><br><span class="line">==&gt; Installing cdo from moffat/sciencebits</span><br><span class="line">==&gt; Downloading https://code.mpimet.mpg.de/attachments/download/19299/cdo-1.9.6.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; ./configure --prefix=/usr/local/Cellar/cdo/1.9.6 LIBS=-lhdf5 --with-netcdf=/usr/local/opt/netcdf --with-hdf5=/usr/local/opt/hdf5 --with-szlib=/usr/local/o</span><br><span class="line">==&gt; make install</span><br><span class="line">Warning: moffat/sciencebits/cdo dependency gcc was built with a different C++ standard</span><br><span class="line">library (libstdc++ from clang). This may cause problems at runtime.</span><br><span class="line">🍺  /usr/local/Cellar/cdo/1.9.6: 8 files, 4.8MB, built in 6 minutes 12 seconds</span><br><span class="line"> ⚙  ~  cdo</span><br><span class="line"></span><br><span class="line">No operator given!</span><br><span class="line"></span><br><span class="line">usage : cdo  [Options]  Operator1  [-Operator2  [-OperatorN]]</span><br><span class="line"></span><br><span class="line">  Options:</span><br><span class="line">    -a             Generate an absolute time axis</span><br><span class="line">    -b &lt;nbits&gt;     Set the number of bits for the output precision</span><br><span class="line">                   (I8/I16/I32/F32/F64 for nc1/nc2/nc4/nc4c/nc5; F32/F64 for grb2/srv/ext/ieg; P1 - P24 for grb1/grb2)</span><br><span class="line">                   Add L or B to set the byteorder to Little or Big endian</span><br><span class="line">    --cmor         CMOR conform NetCDF output</span><br><span class="line">    -C, --color    Colorized output messages</span><br><span class="line">    --eccodes      Use ecCodes to decode/encode GRIB1 messages</span><br><span class="line">    --enableexcept &lt;except&gt;</span><br><span class="line">                   Set individual floating-point traps (DIVBYZERO, INEXACT, INVALID, OVERFLOW, UNDERFLOW, ALL_EXCEPT)</span><br><span class="line">    -f, --format &lt;format&gt;</span><br><span class="line">                   Format of the output file. (grb1/grb2/nc1/nc2/nc4/nc4c/nc5/srv/ext/ieg)</span><br><span class="line">    -g &lt;grid&gt;      Set default grid name or file. Available grids:</span><br><span class="line">                   n&lt;N&gt;, t&lt;RES&gt;, tl&lt;RES&gt;, global_&lt;DXY&gt;, r&lt;NX&gt;x&lt;NY&gt;, g&lt;NX&gt;x&lt;NY&gt;, gme&lt;NI&gt;, lon=&lt;LON&gt;/lat=&lt;LAT&gt;</span><br><span class="line">    -h, --help     Help information for the operators</span><br><span class="line">    --history      Do not append to NetCDF "history" global attribute</span><br><span class="line">    --netcdf_hdr_pad, --hdr_pad, --header_pad &lt;nbr&gt;</span><br><span class="line">                   Pad NetCDF output header with nbr bytes</span><br><span class="line">    -k &lt;chunktype&gt; NetCDF4 chunk type: auto, grid or lines</span><br><span class="line">    -L             Lock IO (sequential access)</span><br><span class="line">    -M             Switch to indicate that the I/O streams have missing values</span><br><span class="line">    -m &lt;missval&gt;   Set the missing value of non NetCDF files (default: -9e+33)</span><br><span class="line">    --no_warnings  Inhibit warning messages</span><br><span class="line">    -O             Overwrite existing output file, if checked</span><br><span class="line">    --operators    List of all operators</span><br><span class="line">    --percentile &lt;method&gt;</span><br><span class="line">                   Percentile method: nrank, nist, numpy, numpy_lower, numpy_higher, numpy_nearest</span><br><span class="line">    --precision &lt;float_digits[,double_digits]&gt;</span><br><span class="line">                   Precision to use in displaying floating-point data (default: 7,15)</span><br><span class="line">    --reduce_dim   Reduce NetCDF dimensions</span><br><span class="line">    -R, --regular  Convert GRIB1 data from global reduced to regular Gaussian grid (cgribex only)</span><br><span class="line">    -r             Generate a relative time axis</span><br><span class="line">    -S             Create an extra output stream for the module TIMSTAT. This stream</span><br><span class="line">                   contains the number of non missing values for each output period.</span><br><span class="line">    -s, --silent   Silent mode</span><br><span class="line">    --sortname     Alphanumeric sorting of NetCDF parameter names</span><br><span class="line">    -t &lt;codetab&gt;   Set GRIB1 default parameter code table name or file (cgribex only)</span><br><span class="line">                   Predefined tables:  echam4 echam5 echam6 mpiom1 ecmwf remo cosmo002 cosmo201 cosmo202 cosmo203 cosmo205 cosmo250</span><br><span class="line">    --timestat_date &lt;srcdate&gt;</span><br><span class="line">                   Target timestamp (temporal statistics): first, middle, midhigh or last source timestep.</span><br><span class="line">    -V, --version  Print the version number</span><br><span class="line">    -v, --verbose  Print extra details for some operators</span><br><span class="line">    -W             Print extra warning messages</span><br><span class="line">    -z szip        SZIP compression of GRIB1 records</span><br><span class="line">       aec         AEC compression of GRIB2 records</span><br><span class="line">       jpeg        JPEG compression of GRIB2 records</span><br><span class="line">        zip[_1-9]  Deflate compression of NetCDF4 variables</span><br><span class="line"></span><br><span class="line">  Operators:</span><br><span class="line">    Use option --operators for a list of all operators.</span><br><span class="line"></span><br><span class="line">  CDO version 1.9.6, Copyright (C) 2003-2019 Uwe Schulzweida</span><br><span class="line">  This is free software and comes with ABSOLUTELY NO WARRANTY</span><br><span class="line">  Report bugs to &lt;http://mpimet.mpg.de/cdo&gt;</span><br><span class="line"> ✘ ⚙  ~  brew install nco</span><br><span class="line">antlr@2: Java is required to install this formula.</span><br><span class="line">Install AdoptOpenJDK with Homebrew Cask:</span><br><span class="line">  brew cask install adoptopenjdk</span><br><span class="line">Error: An unsatisfied requirement failed this build.</span><br><span class="line"> ✘ ⚙  ~  brew install https://raw.github.com/Homebrew/homebrew-science/master/nco.rb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">curl: (22) The requested URL returned error: 404 Not Found</span><br><span class="line">Error: Failure while executing; `/usr/bin/curl -q --show-error --user-agent Homebrew/2.1.4\ \(Macintosh\;\ Intel\ Mac\ OS\ X\ 10.14.5\)\ curl/7.54.0 --fail --progress-bar --location --remote-time --continue-at 0 --output /Users/zhpfu/Library/Caches/Homebrew/Formula/nco.rb https://raw.github.com/Homebrew/homebrew-science/master/nco.rb` exited with 22. Here's the output:</span><br><span class="line"></span><br><span class="line">curl: (22) The requested URL returned error: 404 Not Found</span><br><span class="line"></span><br><span class="line"> ✘ ⚙  ~  brew install homebrew/science/nco</span><br><span class="line">Error: homebrew/science was deprecated. This tap is now empty as all its formulae were migrated.</span><br><span class="line"> ✘ ⚙  ~  brew install nco</span><br><span class="line">antlr@2: Java is required to install this formula.</span><br><span class="line">Install AdoptOpenJDK with Homebrew Cask:</span><br><span class="line">  brew cask install adoptopenjdk</span><br><span class="line">Error: An unsatisfied requirement failed this build.</span><br><span class="line"> ✘ ⚙  ~  brew install nco</span><br><span class="line">==&gt; Installing dependencies for nco: antlr@2, gsl, texinfo and udunits</span><br><span class="line">==&gt; Installing nco dependency: antlr@2</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/antlr@2-2.7.7_1.mojave.bottle.tar.gz</span><br><span class="line">==&gt; Downloading from https://akamai.bintray.com/9b/9be9c82eba1b6b803c75114ed55947692693785566c59dca392b8bbae6b8aa19?__gda__=exp=1559191542~hmac=cc1f31c4e51967</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Pouring antlr@2-2.7.7_1.mojave.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">antlr@2 is keg-only, which means it was not symlinked into /usr/local,</span><br><span class="line">because this is an alternate version of another formula.</span><br><span class="line"></span><br><span class="line">If you need to have antlr@2 first in your PATH run:</span><br><span class="line">  echo 'export PATH="/usr/local/opt/antlr@2/bin:$PATH"' &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line">For compilers to find antlr@2 you may need to set:</span><br><span class="line">  export LDFLAGS="-L/usr/local/opt/antlr@2/lib"</span><br><span class="line">  export CPPFLAGS="-I/usr/local/opt/antlr@2/include"</span><br><span class="line"></span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /usr/local/Cellar/antlr@2/2.7.7_1: 60 files, 1012.4KB</span><br><span class="line">==&gt; Installing nco dependency: gsl</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/gsl-2.5.mojave.bottle.tar.gz</span><br><span class="line">==&gt; Downloading from https://akamai.bintray.com/2b/2b76f0bb640a36340efb3bc44a9df6e8b1694cc251637f95eca02c541add53ff?__gda__=exp=1559191556~hmac=54a7b3a02d4374</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Pouring gsl-2.5.mojave.bottle.tar.gz</span><br><span class="line">🍺  /usr/local/Cellar/gsl/2.5: 271 files, 9.1MB</span><br><span class="line">==&gt; Installing nco dependency: texinfo</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/texinfo-6.6.mojave.bottle.tar.gz</span><br><span class="line">==&gt; Downloading from https://akamai.bintray.com/2e/2ea78114fc2f1bedb52a8cc4148c7ab48cbfe15bb2347783fb7f84998247ccc3?__gda__=exp=1559191575~hmac=f389f644770463</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Pouring texinfo-6.6.mojave.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">texinfo is keg-only, which means it was not symlinked into /usr/local,</span><br><span class="line">because software that uses TeX, such as lilypond and octave, require a newer</span><br><span class="line">version of these files.</span><br><span class="line"></span><br><span class="line">If you need to have texinfo first in your PATH run:</span><br><span class="line">  echo 'export PATH="/usr/local/opt/texinfo/bin:$PATH"' &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /usr/local/Cellar/texinfo/6.6: 404 files, 7.3MB</span><br><span class="line">==&gt; Installing nco dependency: udunits</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/udunits-2.2.26.mojave.bottle.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Pouring udunits-2.2.26.mojave.bottle.tar.gz</span><br><span class="line">🍺  /usr/local/Cellar/udunits/2.2.26: 29 files, 538.7KB</span><br><span class="line">==&gt; Installing nco</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/nco-4.8.0.mojave.bottle.tar.gz</span><br><span class="line">==&gt; Downloading from https://akamai.bintray.com/8a/8a031331ccf4203570d7e87acc7da5434820dd872ce7c6690d02094b20cfa67f?__gda__=exp=1559191601~hmac=f3196d0b38d11d</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Pouring nco-4.8.0.mojave.bottle.tar.gz</span><br><span class="line">Warning: nco dependency gcc was built with a different C++ standard</span><br><span class="line">library (libstdc++ from clang). This may cause problems at runtime.</span><br><span class="line">🍺  /usr/local/Cellar/nco/4.8.0: 52 files, 10.9MB</span><br><span class="line">==&gt; Caveats</span><br><span class="line">==&gt; antlr@2</span><br><span class="line">antlr@2 is keg-only, which means it was not symlinked into /usr/local,</span><br><span class="line">because this is an alternate version of another formula.</span><br><span class="line"></span><br><span class="line">If you need to have antlr@2 first in your PATH run:</span><br><span class="line">  echo 'export PATH="/usr/local/opt/antlr@2/bin:$PATH"' &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line">For compilers to find antlr@2 you may need to set:</span><br><span class="line">  export LDFLAGS="-L/usr/local/opt/antlr@2/lib"</span><br><span class="line">  export CPPFLAGS="-I/usr/local/opt/antlr@2/include"</span><br><span class="line"></span><br><span class="line">==&gt; texinfo</span><br><span class="line">texinfo is keg-only, which means it was not symlinked into /usr/local,</span><br><span class="line">because software that uses TeX, such as lilypond and octave, require a newer</span><br><span class="line">version of these files.</span><br><span class="line"></span><br><span class="line">If you need to have texinfo first in your PATH run:</span><br><span class="line">  echo 'export PATH="/usr/local/opt/texinfo/bin:$PATH"' &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line"> ⚙  ~  echo 'export PATH="/usr/local/opt/texinfo/bin:$PATH"' &gt;&gt; ~/.zshrc</span><br><span class="line"> ⚙  ~  echo 'export PATH="/usr/local/opt/antlr@2/bin:$PATH"' &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><h1 id="环境变量的设置"><a href="#环境变量的设置" class="headerlink" title="环境变量的设置"></a>环境变量的设置</h1><p>不难发现，ncdump的命令是有效的，可以用于NetCDF文件的信息查看。<br>而其安装的位置其实是软连接过来的。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">~/Dropbox/</span>Code_Fortress/<span class="number">02.</span>My_Fortran_Library  which ncdump</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>ncdump</span><br><span class="line"> <span class="regexp">~/Dropbox/</span>Code_Fortress<span class="regexp">/02.My_Fortran_Library  ll /</span>usr<span class="regexp">/local/</span>bin/ncdump</span><br><span class="line">lrwxr-xr-x <span class="number">1</span> zhpfu admin <span class="number">35</span> May <span class="number">30</span> <span class="number">11</span>:<span class="number">31</span> <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>ncdump -&gt; ..<span class="regexp">/Cellar/</span>netcdf<span class="regexp">/4.6.3_1/</span>bin/ncdump</span><br><span class="line"> <span class="regexp">~/Dropbox/</span>Code_Fortress<span class="regexp">/02.My_Fortran_Library  ls /</span>usr<span class="regexp">/local/</span>Cellar<span class="regexp">/netcdf/</span><span class="number">4.6</span><span class="number">.3</span>_1<span class="regexp">/bin/</span>nc*</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/Cellar/</span>netcdf<span class="regexp">/4.6.3_1/</span>bin<span class="regexp">/nc-config  /</span>usr<span class="regexp">/local/</span>Cellar<span class="regexp">/netcdf/</span><span class="number">4.6</span><span class="number">.3</span>_1<span class="regexp">/bin/</span>ncdump  <span class="regexp">/usr/</span>local<span class="regexp">/Cellar/</span>netcdf<span class="regexp">/4.6.3_1/</span>bin/ncgen3</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/Cellar/</span>netcdf<span class="regexp">/4.6.3_1/</span>bin<span class="regexp">/nccopy     /</span>usr<span class="regexp">/local/</span>Cellar<span class="regexp">/netcdf/</span><span class="number">4.6</span><span class="number">.3</span>_1<span class="regexp">/bin/</span>ncgen</span><br></pre></td></tr></table></figure><p><code>这对后续的调用netcdf的库，指定路径是很有帮助的。</code></p><h1 id="NetCDF-Programs实例"><a href="#NetCDF-Programs实例" class="headerlink" title="NetCDF Programs实例"></a>NetCDF Programs实例</h1><p><a href="https://www.unidata.ucar.edu/software/netcdf/examples/programs/" target="_blank" rel="noopener">实例地址</a></p><p><code>选取f、f90结尾的文件即可！！！</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">Below we provide links to some sample netCDF programs.</span><br><span class="line"></span><br><span class="line">Write <span class="selector-tag">a</span> two-dimensional array of sample data that looks like simple_xy<span class="selector-class">.cdl</span>:</span><br><span class="line">C: simple_xy_wr.c</span><br><span class="line">Fortran <span class="number">77</span>: simple_xy_wr.f</span><br><span class="line">Fortran <span class="number">90</span>: simple_xy_wr.f90</span><br><span class="line">C++ (legacy): simple_xy_wr.cpp</span><br><span class="line">C++ (netCDF-<span class="number">4</span>): SimpleXyWr.cpp</span><br><span class="line">Java: Simple_xy_wr.java</span><br><span class="line">Contributed: Python: simple_xy_wr<span class="selector-class">.py</span>, MATLAB: simple_xy_wr<span class="selector-class">.m</span>, Perl: simple_xy_wr<span class="selector-class">.pl</span>, IDL: simple_xy_wr.pro</span><br><span class="line">Command-line: ncgen -<span class="selector-tag">b</span> simple_xy.cdl</span><br><span class="line">Read data from the simple file written above:</span><br><span class="line">C: simple_xy_rd.c</span><br><span class="line">Fortran <span class="number">77</span>: simple_xy_rd.f</span><br><span class="line">Fortran <span class="number">90</span>: simple_xy_rd.f90</span><br><span class="line">C++ (legacy): simple_xy_rd.cpp</span><br><span class="line">C++ (netCDF-<span class="number">4</span>): SimpleXyRd.cpp</span><br><span class="line">Java: Simple_xy_rd.java</span><br><span class="line">Contributed: Python: simple_xy_rd<span class="selector-class">.py</span>, MATLAB: simple_xy_rd<span class="selector-class">.m</span>, Perl: simple_xy_rd<span class="selector-class">.pl</span>, IDL: simple_xy_rd.pro</span><br><span class="line">Command-line: ncdump simple_xy.nc</span><br><span class="line">Write some variables with units attributes and coordinate dimensions that will look like sfc_pres_temp<span class="selector-class">.cdl</span>:</span><br><span class="line">C: sfc_pres_temp_wr.c</span><br><span class="line">Fortran <span class="number">77</span>: sfc_pres_temp_wr.f</span><br><span class="line">Fortran <span class="number">90</span>: sfc_pres_temp_wr.f90</span><br><span class="line">C++ (legacy): sfc_pres_temp_wr.cpp</span><br><span class="line">C++ (netCDF-<span class="number">4</span>): SfcPresTempWr.cpp</span><br><span class="line">Java: Sfc_pres_temp_wr.java</span><br><span class="line">Contributed: Python: sfc_pres_temp_wr<span class="selector-class">.py</span>, MATLAB: sfc_pres_temp_wr<span class="selector-class">.m</span>, Perl: sfc_pres_temp_wr<span class="selector-class">.pl</span>, IDL: sfc_pres_temp_wr.pro</span><br><span class="line">Command-line: ncgen -<span class="selector-tag">b</span> sfc_pres_temp.cdl</span><br><span class="line">Read data variables and attributes from the file written above:</span><br><span class="line">C: sfc_pres_temp_rd.c</span><br><span class="line">Fortran <span class="number">77</span>: sfc_pres_temp_rd.f</span><br><span class="line">Fortran <span class="number">90</span>: sfc_pres_temp_rd.f90</span><br><span class="line">C++ (legacy): sfc_pres_temp_rd.cpp</span><br><span class="line">C++ (netCDF-<span class="number">4</span>): SfcPresTempRd.cpp</span><br><span class="line">Java: Sfc_pres_temp_rd.java</span><br><span class="line">Contributed: Python: sfc_pres_temp_rd<span class="selector-class">.py</span>, MATLAB: sfc_pres_temp_rd<span class="selector-class">.m</span>, Perl: sfc_pres_temp_rd<span class="selector-class">.pl</span>, IDL: sfc_pres_temp_rd.pro</span><br><span class="line">Command-line: ncdump sfc_pres_temp.nc</span><br><span class="line">Write some four-dimensional variables using <span class="selector-tag">a</span> record dimension <span class="keyword">in</span> <span class="selector-tag">a</span> file that will look like pres_temp_4D<span class="selector-class">.cdl</span>:</span><br><span class="line">C: pres_temp_4D_wr.c</span><br><span class="line">Fortran <span class="number">77</span>: pres_temp_4D_wr.f</span><br><span class="line">Fortran <span class="number">90</span>: pres_temp_4D_wr.f90</span><br><span class="line">C++ (legacy): pres_temp_4D_wr.cpp</span><br><span class="line">C++ (netCDF-<span class="number">4</span>): PresTemp4dWr.cpp</span><br><span class="line">Java: Pres_temp_4D_wr.java</span><br><span class="line">Contributed: Python: pres_temp_4D_wr<span class="selector-class">.py</span>, MATLAB: pres_temp_4D_wr<span class="selector-class">.m</span>, Perl: pres_temp_4D_wr<span class="selector-class">.pl</span>, IDL: pres_temp_4D_wr.pro</span><br><span class="line">Command-line: ncgen -<span class="selector-tag">b</span> pres_temp_4D.cdl</span><br><span class="line">Read from the variables <span class="keyword">in</span> the file written above:</span><br><span class="line">C: pres_temp_4D_rd.c</span><br><span class="line">Fortran <span class="number">77</span>: pres_temp_4D_rd.f</span><br><span class="line">Fortran <span class="number">90</span>: pres_temp_4D_rd.f90</span><br><span class="line">C++ (legacy): pres_temp_4D_rd.cpp</span><br><span class="line">C++ (netCDF-<span class="number">4</span>): PresTemp4dRd.cpp</span><br><span class="line">Java: Pres_temp_4D_rd.java</span><br><span class="line">Contributed: Python: pres_temp_4D_rd<span class="selector-class">.py</span>, MATLAB: pres_temp_4D_rd<span class="selector-class">.m</span>, Perl: pres_temp_4D_rd<span class="selector-class">.pl</span>, IDL: pres_temp_4D_rd.pro</span><br><span class="line">Command-line: ncdump pres_temp_4D.nc</span><br><span class="line">Test MATLAB native support <span class="keyword">for</span> netCDF-<span class="number">4</span>: nc4test.m</span><br><span class="line">Copy any netCDF classic or <span class="number">64</span>-bit offset file, using only the netCDF-<span class="number">3</span> API:</span><br><span class="line">C: nccopy3.c</span><br><span class="line">Copy any netCDF file, using the netCDF-<span class="number">4</span> API:</span><br><span class="line">C: nccopy4.c</span><br><span class="line">Write profile data according to CF Conventions version <span class="number">1.6</span>, Appendix H:</span><br><span class="line">Fortran <span class="number">90</span>: example_h3_cf1_6.f90</span><br></pre></td></tr></table></figure><h1 id="gfortran读写NetCDF测试"><a href="#gfortran读写NetCDF测试" class="headerlink" title="gfortran读写NetCDF测试"></a>gfortran读写NetCDF测试</h1><p><strong>最最最重要的一点就是使用gfortran的时候，一定要指定具体依赖库的路径</strong></p><p><code>在使用gfortran时候，命令如下：</code></p><p><strong>&gt; <code>gfortran test.f90  -L/usr/local/Cellar/netcdf/4.6.3_1/lib  -I/usr/local/Cellar/netcdf/4.6.3_1/include -lnetcdff  -o  testf</code></strong></p><p><code>在使用intel fortran时候，命令形式如下：</code></p><p><strong>&gt; <code>ifort   -I/home/xxx/local/include read_netcdf.f90 -o a.exe  -L/home/xxx/local/lib -lnetcdf</code></strong></p><p><code>Linux中操作方法类似！</code></p><p><code>至于，用shell脚本或者Makefile来简化手动输入参数之苦，这也是更加实用的技能，再次不做介绍，感兴趣的可以自行</code><del>Google</del><code>百度/Bing！</code></p><p><img src="/images/netcdf.png" alt></p><h1 id="Homebrew一键式安装netcdf的原理揭示"><a href="#Homebrew一键式安装netcdf的原理揭示" class="headerlink" title="Homebrew一键式安装netcdf的原理揭示"></a>Homebrew一键式安装netcdf的原理揭示</h1><p><code>基于Ruby语言！！！[参考链接](https://github.com/Homebrew/homebrew-core/blob/master/Formula/netcdf.rb)</code></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Netcdf</span> &lt; Formula</span></span><br><span class="line">  desc <span class="string">"Libraries and data formats for array-oriented scientific data"</span></span><br><span class="line">  homepage <span class="string">"https://www.unidata.ucar.edu/software/netcdf"</span></span><br><span class="line">  url <span class="string">"https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-c-4.6.3.tar.gz"</span></span><br><span class="line">  sha256 <span class="string">"335fdf16d7531f430ad75e732ed1a9a3fc83ad3ef91fb33a70119a555dd5415c"</span></span><br><span class="line">  revision <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  bottle <span class="keyword">do</span></span><br><span class="line">    sha256 <span class="string">"d798cbc16c2e6c312d921abf4cef0d74f094c9f6496114c06219baabaa962974"</span> =&gt; <span class="symbol">:mojave</span></span><br><span class="line">    sha256 <span class="string">"0307831230fe41037beb09e9434d587497dc246ad4c0eb083e603efa4d5fbbec"</span> =&gt; <span class="symbol">:high_sierra</span></span><br><span class="line">    sha256 <span class="string">"272ebe803e2c331d4839387d644261281315486413d581e460c1fef91455df6b"</span> =&gt; <span class="symbol">:sierra</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  depends_on <span class="string">"cmake"</span> =&gt; <span class="symbol">:build</span></span><br><span class="line">  depends_on <span class="string">"gcc"</span> <span class="comment"># for gfortran</span></span><br><span class="line">  depends_on <span class="string">"hdf5"</span></span><br><span class="line"></span><br><span class="line">  resource <span class="string">"cxx"</span> <span class="keyword">do</span></span><br><span class="line">    url <span class="string">"https://github.com/Unidata/netcdf-cxx4/archive/v4.3.0.tar.gz"</span></span><br><span class="line">    sha256 <span class="string">"25da1c97d7a01bc4cee34121c32909872edd38404589c0427fefa1301743f18f"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  resource <span class="string">"cxx-compat"</span> <span class="keyword">do</span></span><br><span class="line">    url <span class="string">"https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx-4.2.tar.gz"</span></span><br><span class="line">    mirror <span class="string">"https://www.gfd-dennou.org/arch/netcdf/unidata-mirror/netcdf-cxx-4.2.tar.gz"</span></span><br><span class="line">    sha256 <span class="string">"95ed6ab49a0ee001255eac4e44aacb5ca4ea96ba850c08337a3e4c9a0872ccd1"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  resource <span class="string">"fortran"</span> <span class="keyword">do</span></span><br><span class="line">    url <span class="string">"https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.4.4.tar.gz"</span></span><br><span class="line">    mirror <span class="string">"https://www.gfd-dennou.org/arch/netcdf/unidata-mirror/netcdf-fortran-4.4.4.tar.gz"</span></span><br><span class="line">    sha256 <span class="string">"b2d395175f8d283e68c8be516e231a96b191ade67ad0caafaf7fa01b1e6b5d75"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">install</span></span></span><br><span class="line">    ENV.deparallelize</span><br><span class="line"></span><br><span class="line">    common_args = std_cmake_args &lt;&lt; <span class="string">"-DBUILD_TESTING=OFF"</span></span><br><span class="line"></span><br><span class="line">    mkdir <span class="string">"build"</span> <span class="keyword">do</span></span><br><span class="line">      args = common_args.dup</span><br><span class="line">      args &lt;&lt; <span class="string">"-DENABLE_TESTS=OFF"</span></span><br><span class="line">      args &lt;&lt; <span class="string">"-DNC_EXTRA_DEPS=-lmpi"</span> <span class="keyword">if</span> Tab.for_name(<span class="string">"hdf5"</span>).with? <span class="string">"mpi"</span></span><br><span class="line">      args &lt;&lt; <span class="string">"-DENABLE_DAP_AUTH_TESTS=OFF"</span> &lt;&lt; <span class="string">"-DENABLE_NETCDF_4=ON"</span> &lt;&lt; <span class="string">"-DENABLE_DOXYGEN=OFF"</span></span><br><span class="line"></span><br><span class="line">      system <span class="string">"cmake"</span>, <span class="string">".."</span>, <span class="string">"-DBUILD_SHARED_LIBS=ON"</span>, *args</span><br><span class="line">      system <span class="string">"make"</span>, <span class="string">"install"</span></span><br><span class="line">      system <span class="string">"make"</span>, <span class="string">"clean"</span></span><br><span class="line">      system <span class="string">"cmake"</span>, <span class="string">".."</span>, <span class="string">"-DBUILD_SHARED_LIBS=OFF"</span>, *args</span><br><span class="line">      system <span class="string">"make"</span></span><br><span class="line">      lib.install <span class="string">"liblib/libnetcdf.a"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Add newly created installation to paths so that binding libraries can</span></span><br><span class="line">    <span class="comment"># find the core libs.</span></span><br><span class="line">    args = common_args.dup &lt;&lt; <span class="string">"-DNETCDF_C_LIBRARY=<span class="subst">#&#123;lib&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">    cxx_args = args.dup</span><br><span class="line">    cxx_args &lt;&lt; <span class="string">"-DNCXX_ENABLE_TESTS=OFF"</span></span><br><span class="line">    resource(<span class="string">"cxx"</span>).stage <span class="keyword">do</span></span><br><span class="line">      mkdir <span class="string">"build-cxx"</span> <span class="keyword">do</span></span><br><span class="line">        system <span class="string">"cmake"</span>, <span class="string">".."</span>, <span class="string">"-DBUILD_SHARED_LIBS=ON"</span>, *cxx_args</span><br><span class="line">        system <span class="string">"make"</span>, <span class="string">"install"</span></span><br><span class="line">        system <span class="string">"make"</span>, <span class="string">"clean"</span></span><br><span class="line">        system <span class="string">"cmake"</span>, <span class="string">".."</span>, <span class="string">"-DBUILD_SHARED_LIBS=OFF"</span>, *cxx_args</span><br><span class="line">        system <span class="string">"make"</span></span><br><span class="line">        lib.install <span class="string">"cxx4/libnetcdf-cxx4.a"</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    fortran_args = args.dup</span><br><span class="line">    fortran_args &lt;&lt; <span class="string">"-DENABLE_TESTS=OFF"</span></span><br><span class="line">    resource(<span class="string">"fortran"</span>).stage <span class="keyword">do</span></span><br><span class="line">      mkdir <span class="string">"build-fortran"</span> <span class="keyword">do</span></span><br><span class="line">        system <span class="string">"cmake"</span>, <span class="string">".."</span>, <span class="string">"-DBUILD_SHARED_LIBS=ON"</span>, *fortran_args</span><br><span class="line">        system <span class="string">"make"</span>, <span class="string">"install"</span></span><br><span class="line">        system <span class="string">"make"</span>, <span class="string">"clean"</span></span><br><span class="line">        system <span class="string">"cmake"</span>, <span class="string">".."</span>, <span class="string">"-DBUILD_SHARED_LIBS=OFF"</span>, *fortran_args</span><br><span class="line">        system <span class="string">"make"</span></span><br><span class="line">        lib.install <span class="string">"fortran/libnetcdff.a"</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    ENV.prepend <span class="string">"CPPFLAGS"</span>, <span class="string">"-I<span class="subst">#&#123;<span class="keyword">include</span>&#125;</span>"</span></span><br><span class="line">    ENV.prepend <span class="string">"LDFLAGS"</span>, <span class="string">"-L<span class="subst">#&#123;lib&#125;</span>"</span></span><br><span class="line">    resource(<span class="string">"cxx-compat"</span>).stage <span class="keyword">do</span></span><br><span class="line">      system <span class="string">"./configure"</span>, <span class="string">"--disable-dependency-tracking"</span>,</span><br><span class="line">                            <span class="string">"--enable-shared"</span>,</span><br><span class="line">                            <span class="string">"--enable-static"</span>,</span><br><span class="line">                            <span class="string">"--prefix=<span class="subst">#&#123;prefix&#125;</span>"</span></span><br><span class="line">      system <span class="string">"make"</span></span><br><span class="line">      system <span class="string">"make"</span>, <span class="string">"install"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># SIP causes system Python not to play nicely with <span class="doctag">@rpath</span></span></span><br><span class="line">    libnetcdf = (lib/<span class="string">"libnetcdf.dylib"</span>).readlink</span><br><span class="line">    <span class="string">%w[libnetcdf-cxx4.dylib libnetcdf_c++.dylib]</span>.each <span class="keyword">do</span> <span class="params">|f|</span></span><br><span class="line">      macho = MachO.open(<span class="string">"<span class="subst">#&#123;lib&#125;</span>/<span class="subst">#&#123;f&#125;</span>"</span>)</span><br><span class="line">      macho.change_dylib(<span class="string">"@rpath/<span class="subst">#&#123;libnetcdf&#125;</span>"</span>,</span><br><span class="line">                         <span class="string">"<span class="subst">#&#123;lib&#125;</span>/<span class="subst">#&#123;libnetcdf&#125;</span>"</span>)</span><br><span class="line">      macho.write!</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  test <span class="keyword">do</span></span><br><span class="line">    (testpath/<span class="string">"test.c"</span>).write &lt;&lt;~EOS</span><br><span class="line">      <span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">      <span class="comment">#include "netcdf_meta.h"</span></span><br><span class="line">      int main()</span><br><span class="line">      &#123;</span><br><span class="line">        printf(NC_VERSION);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    EOS</span><br><span class="line">    system ENV.cc, <span class="string">"test.c"</span>, <span class="string">"-L<span class="subst">#&#123;lib&#125;</span>"</span>, <span class="string">"-I<span class="subst">#&#123;<span class="keyword">include</span>&#125;</span>"</span>, <span class="string">"-lnetcdf"</span>,</span><br><span class="line">                   <span class="string">"-o"</span>, <span class="string">"test"</span></span><br><span class="line">    assert_equal <span class="string">`./test`</span>, version.to_s</span><br><span class="line"></span><br><span class="line">    (testpath/<span class="string">"test.f90"</span>).write &lt;&lt;~EOS</span><br><span class="line">      program test</span><br><span class="line">        use netcdf</span><br><span class="line">        integer <span class="symbol">:</span>: ncid, varid, dimids(<span class="number">2</span>)</span><br><span class="line">        integer <span class="symbol">:</span>: dat(<span class="number">2</span>,<span class="number">2</span>) = reshape([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], [<span class="number">2</span>, <span class="number">2</span>])</span><br><span class="line">        call check( nf90_create(<span class="string">"test.nc"</span>, NF90_CLOBBER, ncid) )</span><br><span class="line">        call check( nf90_def_dim(ncid, <span class="string">"x"</span>, <span class="number">2</span>, dimids(<span class="number">2</span>)) )</span><br><span class="line">        call check( nf90_def_dim(ncid, <span class="string">"y"</span>, <span class="number">2</span>, dimids(<span class="number">1</span>)) )</span><br><span class="line">        call check( nf90_def_var(ncid, <span class="string">"data"</span>, NF90_INT, dimids, varid) )</span><br><span class="line">        call check( nf90_enddef(ncid) )</span><br><span class="line">        call check( nf90_put_var(ncid, varid, dat) )</span><br><span class="line">        call check( nf90_close(ncid) )</span><br><span class="line">      contains</span><br><span class="line">        subroutine check(status)</span><br><span class="line">          integer, intent(<span class="keyword">in</span>) <span class="symbol">:</span>: status</span><br><span class="line">          <span class="keyword">if</span> (status /= nf90_noerr) call abort</span><br><span class="line">        <span class="keyword">end</span> subroutine check</span><br><span class="line">      <span class="keyword">end</span> program test</span><br><span class="line">    EOS</span><br><span class="line">    system <span class="string">"gfortran"</span>, <span class="string">"test.f90"</span>, <span class="string">"-L<span class="subst">#&#123;lib&#125;</span>"</span>, <span class="string">"-I<span class="subst">#&#123;<span class="keyword">include</span>&#125;</span>"</span>, <span class="string">"-lnetcdff"</span>,</span><br><span class="line">                       <span class="string">"-o"</span>, <span class="string">"testf"</span></span><br><span class="line">    system <span class="string">"./testf"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h1 id="手动安装netcdf参考方法："><a href="#手动安装netcdf参考方法：" class="headerlink" title="手动安装netcdf参考方法："></a>手动安装netcdf参考方法：</h1><p><a href="https://github.com/dspelaez/install-netcdf-fortran/blob/master/install_netcdf.sh?1559670513694" target="_blank" rel="noopener">参考链接：install-netcdf-fortran/install_netcdf.sh</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> install_netcdf.sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Copyright (C) 2018 Daniel Santiago &lt;dpelaez@cicese.edu.mx&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Distributed under terms of the GNU/GPL license.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line">set -e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ============================================================================</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  Installation of NetCDF4 Fortran libraries</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ----------------------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  </span></span><br><span class="line"><span class="meta">#</span><span class="bash">  Purpose:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    This script get the given versions of the NetCD4 libreries and its</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    dependencies and install them <span class="keyword">in</span> the MAINDIR=/usr/<span class="built_in">local</span>/netcdf/ directory</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash">  Usage:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    [sudo] CC=gcc FC=gfortran MAINDIR=/usr/<span class="built_in">local</span>/netcdf ./install_netcdf.sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash">  Autor:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    Daniel Santiago</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    github/dspelaez</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ============================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># define compilers</span></span></span><br><span class="line">CC=$&#123;CC:-gcc&#125;</span><br><span class="line">FC=$&#123;FC:-gfortran&#125;</span><br><span class="line">F90=$&#123;FC&#125;</span><br><span class="line">F77=$&#123;FC&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> main directory</span></span><br><span class="line">MAINDIR=$&#123;MAINDIR:-/usr/local/netcdf&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> version of libs</span></span><br><span class="line">CLTAG="7.61.0"</span><br><span class="line">ZLTAG="1.2.10"</span><br><span class="line">H5TAG="1.10.1"</span><br><span class="line">NCTAG="4.6.1"</span><br><span class="line">NFTAG="4.4.4"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># donwload source code of depencies</span></span></span><br><span class="line">wget -nc -nv https://curl.haxx.se/download/curl-$CLTAG.tar.gz</span><br><span class="line">wget -nc -nv https://zlib.net/fossils/zlib-$ZLTAG.tar.gz</span><br><span class="line">wget -nc -nv https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-$H5TAG/src/hdf5-$H5TAG.tar </span><br><span class="line">wget -nc -nv ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-$NCTAG.tar.gz</span><br><span class="line">wget -nc -nv ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-fortran-$NFTAG.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># create config.log</span></span></span><br><span class="line">touch config.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># curl</span></span></span><br><span class="line">tar -xf curl-$CLTAG.tar.gz</span><br><span class="line">cd curl-$CLTAG/</span><br><span class="line">CLDIR=$MAINDIR</span><br><span class="line">echo " ---&gt;&gt; Compiling curl-$CLTAG"</span><br><span class="line">./configure --prefix=$&#123;CLDIR&#125; &gt; config.log 2&gt;&amp;1</span><br><span class="line">make -j4 &gt; config.log 2&gt;&amp;1</span><br><span class="line">make install &gt; config.log 2&gt;&amp;1</span><br><span class="line">cd ..</span><br><span class="line">rm -rf curl-$CLTAG</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># zlib </span></span></span><br><span class="line">tar -xf zlib-$ZLTAG.tar.gz</span><br><span class="line">cd zlib-$ZLTAG/</span><br><span class="line">ZDIR=$MAINDIR</span><br><span class="line">echo " ---&gt;&gt; Compiling zlib-$ZLTAG"</span><br><span class="line">./configure --prefix=$&#123;ZDIR&#125; &gt; config.log 2&gt;&amp;1</span><br><span class="line">make -j4 &gt; config.log 2&gt;&amp;1</span><br><span class="line">make install &gt; config.log 2&gt;&amp;1</span><br><span class="line">cd ..</span><br><span class="line">rm -rf zlib-$ZLTAG</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># hdf5</span></span></span><br><span class="line">tar -xf hdf5-$H5TAG.tar</span><br><span class="line">cd hdf5-$H5TAG/</span><br><span class="line">H5DIR=$MAINDIR</span><br><span class="line">echo " ---&gt;&gt; Compiling hdf5-$H5TAG"</span><br><span class="line">./configure --with-zlib=$&#123;ZDIR&#125; --prefix=$&#123;H5DIR&#125; &gt; config.log 2&gt;&amp;1</span><br><span class="line">make -j4 &gt; config.log 2&gt;&amp;1</span><br><span class="line">make install &gt; config.log 2&gt;&amp;1</span><br><span class="line">cd ..</span><br><span class="line">rm -rf hdf5-$H5TAG</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># netcdf4-c</span></span></span><br><span class="line">tar -xf netcdf-$NCTAG.tar.gz</span><br><span class="line">cd netcdf-$NCTAG/</span><br><span class="line">NCDIR=$MAINDIR</span><br><span class="line">echo " ---&gt;&gt; Compiling netcdf-$NCTAG"</span><br><span class="line">CPPFLAGS=-I$&#123;H5DIR&#125;/include LDFLAGS=-L$&#123;H5DIR&#125;/lib ./configure --prefix=$&#123;NCDIR&#125; &gt; config.log 2&gt;&amp;1</span><br><span class="line">make -j4 &gt; config.log 2&gt;&amp;1</span><br><span class="line">make install &gt; config.log 2&gt;&amp;1</span><br><span class="line">cd ..</span><br><span class="line">rm -rf netcdf-$NCTAG</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># netcdf4-fortran</span></span></span><br><span class="line">tar -xf netcdf-fortran-$NFTAG.tar.gz</span><br><span class="line">cd netcdf-fortran-$NFTAG/</span><br><span class="line">echo " ---&gt;&gt; Compiling netcdf-fortran-$NFTAG"</span><br><span class="line">CPPFLAGS=-I$&#123;NCDIR&#125;/include LDFLAGS=-L$&#123;NCDIR&#125;/lib ./configure --prefix=$&#123;NCDIR&#125; &gt; config.log 2&gt;&amp;1</span><br><span class="line">make -j4 &gt; config.log 2&gt;&amp;1</span><br><span class="line">make install &gt; config.log 2&gt;&amp;1</span><br><span class="line">cd ..</span><br><span class="line">rm -rf netcdf-fortran-$NFTAG</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># show compilation options</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">NCDIR/bin/nf-config --all</span></span><br><span class="line"></span><br><span class="line">echo ""</span><br><span class="line">echo ===============================================================================</span><br><span class="line">echo "Finally, you must add this to the .profile (or .bashrc or .zshrc) file"</span><br><span class="line">echo "  Linux --\&gt;" export LD_LIBRARY_PATH=$NCDIR/lib:'$LD_LIBRARY_PATH'</span><br><span class="line">echo "  OSX   --\&gt;" export DYLD_LIBRARY_PATH=$NCDIR/lib:'$DYLD_LIBRARY_PATH'</span><br><span class="line">echo ===============================================================================</span><br><span class="line">echo ""</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.unidata.ucar.edu/software/netcdf/examples/programs/" target="_blank" rel="noopener">链接.1</a><br><a href="https://brew.sh/" target="_blank" rel="noopener">链接.2</a><br><a href="https://github.com/Homebrew/homebrew-core/blob/master/Formula/netcdf.rb" target="_blank" rel="noopener">链接.3</a><br><a href="https://github.com/dspelaez/install-netcdf-fortran/blob/master/install_netcdf.sh?1559670513694" target="_blank" rel="noopener">链接.4</a><br><a href="https://github.com/Unidata/netcdf-fortran/tree/master/examples?1559673099354" target="_blank" rel="noopener">链接.5</a><br><a href="https://www.jianshu.com/p/d86ce50ba547" target="_blank" rel="noopener">链接.6</a><br><a href="https://blog.csdn.net/h4x0r_007/article/details/46900293" target="_blank" rel="noopener">链接.7</a><br><a href="http://internetwork.net/wiki/20141227605.html" target="_blank" rel="noopener">链接.8</a><br><a href="https://www.esrl.noaa.gov/psd/data/gridded/netsubs_read.shtml" target="_blank" rel="noopener">链接.9</a><br><a href="https://people.sc.fsu.edu/~jburkardt/f_src/" target="_blank" rel="noopener">链接.10</a><br><a href="https://www.unidata.ucar.edu/software/netcdf/docs_rc/building_netcdf_fortran.html" target="_blank" rel="noopener">链接.11</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p> <img src="/images/QQRR1.png" width="300" height="250" alt align="center">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;&lt;p align=&quot;center&quot;&gt;&lt;font color=&quot;#c8044b&quot; size=&quot;2&quot; face=&quot;黑体&quot;&gt;&lt;code&gt;阅读建议：电脑端/iPad端阅读，按照文章左边栏三级标题来捋思路，安装过程输出可忽略。实际操作报错了，再按图索骥看细节！&lt;/code&gt;&lt;/font&gt;&lt;/p&gt;&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/images/panoply.jpg&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;本文简版同步发布于公众号『气象学家』&lt;a href=&quot;https://mp.weixin.qq.com/s/UNH8DcFvxtlakSURL4zoGQ&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;。从页面&lt;a href=&quot;https://www.unidata.ucar.edu/software/netcdf/software.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;“Software for Manipulating or Displaying NetCDF Data”&lt;/a&gt;能找到几十种语言或者工具软件可以处理NetCDF（&lt;a href=&quot;https://www.unidata.ucar.edu/publications/factsheets/current/factsheet_netcdf.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Network Common Data Form&lt;/a&gt;）的数据，有些软件是可以跨平台的，强烈推荐&amp;gt;&amp;gt;&lt;a href=&quot;https://www.giss.nasa.gov/tools/panoply/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;免费软件Panoply&lt;/a&gt;&amp;lt;&amp;lt;,对于NetCDF文件的可视化和简单的数据导出非常的优秀，Mac、Linux、Windows都能使用。当然，现在对于不同的处理要求和速度完全可以选择不同的工具方法处理NetCDF，Python/ncl对于NetCDF的读取和创建也已经非常得方便了。但是，目前就使用Fortran去调用NetCDF的Fortran API，处理速度上还是有很大的优势，所以，简单以MacOS为例，就Fortran处理NetCDF相关的库的安装和环境变量设置来做个简单的介绍，并用实例来加深理解，但是并不做深度解读，抛砖引玉而已。后面另开一篇文章就grib数据的处理做介绍（Python、NCL、wgrib2）。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术积累" scheme="https://gavin971.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="Fortran" scheme="https://gavin971.github.io/tags/Fortran/"/>
    
      <category term="gfortran" scheme="https://gavin971.github.io/tags/gfortran/"/>
    
      <category term="gcc" scheme="https://gavin971.github.io/tags/gcc/"/>
    
      <category term="NetCDF" scheme="https://gavin971.github.io/tags/NetCDF/"/>
    
  </entry>
  
  <entry>
    <title>一台Mac上同时使用GitHub和Gitlab</title>
    <link href="https://gavin971.github.io/2019/06/03/git-gitlab/"/>
    <id>https://gavin971.github.io/2019/06/03/git-gitlab/</id>
    <published>2019-06-03T08:29:28.000Z</published>
    <updated>2019-06-04T17:33:08.207Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/github2.jpg" alt></p><blockquote><p><strong><font color="#0000ff">为了在Mac上同时使用github和gitlab,一般而言，都是不同的邮箱和用户名（公司/学校  | 个人），分别对应github和gitlab，所以，不做处理的话，git的全局变量会冲突报错。</font></strong></p></blockquote><a id="more"></a><h1 id="github的处理方案："><a href="#github的处理方案：" class="headerlink" title="github的处理方案："></a>github的处理方案：</h1><h2 id="创建repository-仓库"><a href="#创建repository-仓库" class="headerlink" title="创建repository(仓库)"></a>创建repository(仓库)</h2><blockquote><p><code>这一步需要在github的网站上手动创建，具体不细说！</code><br><code>创建成功后，可以看到自己的仓库地址，远程免费的仓库就创建了。</code><br><code>页面还有介绍github仓库的常用指令，这些指令需要在本地安装git客户端。</code></p></blockquote><h2 id="我们还是对github作全局声明："><a href="#我们还是对github作全局声明：" class="headerlink" title="我们还是对github作全局声明："></a>我们还是对github作<strong>全局</strong>声明：</h2><blockquote><p><code>git config --global user.name &quot;name_1&quot;</code><br><code>git config --global user.email &quot;xxxxxx@mail_1&quot;</code></p></blockquote><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//把这个目录变成Git可以管理的仓库</span><br><span class="line">git init </span><br><span class="line">//文件添加到仓库</span><br><span class="line">git add README.md </span><br><span class="line"> //不但可以跟单一文件，还可以跟通配符，更可以跟目录。</span><br><span class="line"> //一个点就把当前目录下所有未追踪的文件全部add了 </span><br><span class="line">git add .</span><br><span class="line">//把文件提交到仓库</span><br><span class="line">git commit -m "first commit" </span><br><span class="line">//关联远程仓库</span><br><span class="line">git remote add origin git@github.com:xxxx/xxxxx.git </span><br><span class="line"> //把本地库的所有内容推送到远程库上</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></blockquote><h2 id="GitHub添加SSH-Key"><a href="#GitHub添加SSH-Key" class="headerlink" title="GitHub添加SSH Key"></a>GitHub添加SSH Key</h2><p>GitHub配置SSH Key的目的是为了帮助我们在通过git提交代码是，不需要繁琐的验证过程，简化操作流程。</p><h1 id="gitlab的处理方案："><a href="#gitlab的处理方案：" class="headerlink" title="gitlab的处理方案："></a>gitlab的处理方案：</h1><h2 id="创建repository-仓库-1"><a href="#创建repository-仓库-1" class="headerlink" title="创建repository(仓库)"></a>创建repository(仓库)</h2><blockquote><p><code>这一步需要在gitlab的网站上手动创建，具体不细说！</code><br><code>创建成功后，可以看到自己的仓库地址，远程免费的仓库就创建了。</code><br><code>页面还有介绍gitlab仓库的常用指令，这些指令需要在本地安装git客户端，与前面的github客户端一样。</code></p></blockquote><h2 id="我们还是对gitlab作局部声明："><a href="#我们还是对gitlab作局部声明：" class="headerlink" title="我们还是对gitlab作局部声明："></a>我们还是对gitlab作<strong>局部</strong>声明：</h2><blockquote><p><code>git config --local user.name &quot;name_2&quot;</code><br><code>git config --local user.email &quot;xxxxxx@mail_2&quot;</code></p></blockquote><h2 id="可能会报错："><a href="#可能会报错：" class="headerlink" title="可能会报错："></a>可能会报错：</h2><h3 id="报错："><a href="#报错：" class="headerlink" title="报错："></a>报错：</h3><blockquote><p><code>remote: HTTP Basic: Access denied</code><br><code>fatal: Authentication failed for &#39;http://gitlab.***.com/***.git/&#39;</code></p></blockquote><h3 id="处理办法：-MacOS系统下"><a href="#处理办法：-MacOS系统下" class="headerlink" title="处理办法：(MacOS系统下)"></a>处理办法：(MacOS系统下)</h3><p><code>sudo git config --system --unset credential.helper</code>  </p><h3 id="报错：-1"><a href="#报错：-1" class="headerlink" title="报错："></a>报错：</h3><blockquote><p><code>remote: HTTP Basic: Access denied；remote: You must use a personal access token with ‘api’ scope for Git over HTTP.</code></p></blockquote><h3 id="处理办法：-MacOS系统下-1"><a href="#处理办法：-MacOS系统下-1" class="headerlink" title="处理办法：(MacOS系统下)"></a>处理办法：(MacOS系统下)</h3><p><code>GitLab设置个人秘钥，具体文末参考：[链接.3](http://copyfuture.com/blogs-details/9d530b015ea3e54b972f0b4a5db34b44)</code> </p><p><code>后续操作步骤与github类似，同样也可以采用生成适用于gitlab的 ssh key 。</code></p><p>参考：<br><a href="https://www.jianshu.com/p/cbb7117986d8" target="_blank" rel="noopener">链接.1</a><br><a href="https://www.twblogs.net/a/5c0a4188bd9eee6fb37b84bc/zh-cn" target="_blank" rel="noopener">链接.2</a><br><a href="http://copyfuture.com/blogs-details/9d530b015ea3e54b972f0b4a5db34b44" target="_blank" rel="noopener">链接.3</a><br><a href="http://blog.pingchas.com/index.php/archives/60/" target="_blank" rel="noopener">链接.4</a><br><a href="https://github.com/tankywoo/wiki.tankywoo.com/blob/master/content/tool/git.md" target="_blank" rel="noopener">链接.5</a><br><a href="https://stackoverflow.com/questions/4630704/receiving-fatal-not-a-git-repository-when-attempting-to-remote-add-a-git-repo" target="_blank" rel="noopener">链接.6</a><br><a href="https://www.cnblogs.com/specter45/p/github.html#s3" target="_blank" rel="noopener">链接.7</a><br><a href="https://www.cnblogs.com/520yang/articles/4654601.html" target="_blank" rel="noopener">链接.8</a><br><a href="https://www.cnblogs.com/520yang/articles/4654601.html" target="_blank" rel="noopener">链接.9</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/github2.jpg&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;为了在Mac上同时使用github和gitlab,一般而言，都是不同的邮箱和用户名（公司/学校  | 个人），分别对应github和gitlab，所以，不做处理的话，git的全局变量会冲突报错。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术积累" scheme="https://gavin971.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="Git" scheme="https://gavin971.github.io/tags/Git/"/>
    
      <category term="Github" scheme="https://gavin971.github.io/tags/Github/"/>
    
      <category term="GitLab" scheme="https://gavin971.github.io/tags/GitLab/"/>
    
  </entry>
  
  <entry>
    <title>快三十岁了，我所见，所想!</title>
    <link href="https://gavin971.github.io/2019/05/24/30s/"/>
    <id>https://gavin971.github.io/2019/05/24/30s/</id>
    <published>2019-05-24T15:05:34.000Z</published>
    <updated>2019-05-24T16:57:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/getmary.jpg" alt></p><blockquote><p><strong><font color="#0000ff">文章原载于公众号『颓着就挺好的』，一年前投稿的一篇文章。道听途说的故事而已，歪理邪说不值一看！<a href="https://mp.weixin.qq.com/s/9QXR-OWQ3Tb4oweJMEIKIw" target="_blank" rel="noopener">点击原文链接！</a></font></strong></p></blockquote><a id="more"></a><p><strong><p align="center"><font color="#3385ff" size="2" face="黑体">“我也才二十多岁，</font></p></strong><br><strong><p align="center"><font color="#3385ff" size="2" face="黑体">还相当年轻啊！”</font></p></strong></p><p>自从 “奔三” 这个词儿流行开始，时常有人提及这个词儿，调侃之余我也就对此习以为常，甚至“麻木不仁”。但当我很快就要奔到三十岁的时候，我回头再看，二十岁的光景较之三十岁来看大不一样。这迅速掠过的近十年时光，除了一把猪饲料撒向我之外，伴随着那些历历在目的白天黑夜，我也在属于自己的人生进程表上不断新添内容。说实话，社会性是人本质属性（好熟悉哪里听过，应该是被马克思提前总结过了），我也不例外。有些进程是自己内心所向，所以主动的选择；有些进程是身为“社会人”，身不由己不得不做出的选择。<strong>比较欣慰的一点是，就婚姻而言，我是属于 “只有该结婚的感情，而非仅仅是该结婚的年龄” 一类。</strong></p><p>我提及婚姻主要原因是这类话题是大多数三十岁左右都得关心关注的，而且婚姻生活的开始也将会贯穿始终，也是社会敏感的话题吧。更重要的一点是个人亲历这段，就是想讲讲。至于写这篇文章记录一下，主要是基于两个原因：1. 这个过去的 “五一” 假期有个关于婚姻关系颇为奇幻的经历；2. 这是一篇拖欠了很久的稿子，恰好紧接公众号上一篇日志谢耳朵和 Amy 结婚来展开。没有斐然文采，我就是想到哪就说说，如同“王嬷嬷的裹脚，又臭又长”，你要看还得定神细看。</p><p><img src="/images/get_1.png" alt></p><p>越接近三十岁，无论结婚与否人都会有个明显的变化，那就是想的事情越来越多了，有基于现实安身立命之本的工作事宜，也有个人感情，抑或是家庭事物（父母等亲人的健康）。是的，这个阶段是个逐渐开始交接的过渡期，父辈们已经陆陆续续的要准备退休了，且他们的身体状况或多或少的不如以前了。而多数这个年龄段的人已经工作了好几年了，甚至于很多已经成为了公司企业的中坚力量。在校园里的也不例外，至少是追求学术道路已经渐入佳境，准备出来大展身手了，颇有孤注一掷的意味。所以，对于那些结婚了的，面对自己的小家庭，则会有更多的事情衍生出来并为之操心。</p><p>《生活大爆炸》中 Sheldon 和 Amy 的婚姻让人感动，这是很多人的美好愿景，我只能讲艺术源于生活而高于生活，普通人的生活里，点滴幸福都是需要不断的修行才能换得的。成年人的世界一贯不是那么容易。资源有限，丛林法则，弱肉强食。面对现实，能不羡慕 Sheldon 和 Amy 这对神仙眷侣的 soul mate 关系吗？我们的生活过于现实，鸡毛蒜皮的事情普通人是无法逃脱的，日常各种鸡汤灌多了也是会导致身子越补越坏，道理都懂还是过不好这一生（过不好并非指过得很糟糕，只是不尽如人意罢了），大道至简，奈何纷繁复杂戏谑人生千百遍。</p><p><img src="/images/get_2.png" alt></p><p>有几次和一位很 Nice 的教授聊天，我们彼此交换心声，才意识到脑子里想多事情了（这多半是关于研究和工作的内容），难免会有个坏毛病，那就是人很焦虑啊。你问我焦虑吗？我能告诉你 NJ 凌晨四点的模样，您若觉得还不够齐全那我可以给你集齐一年四季的。焦虑最大的副作用就是让人失眠，这个神游过程中究竟会思考一些什么问题呢？<strong>我细细地罗列了一下：研究内容；未来工作；小孩成长；房价；夫妻感情；父母健康；个人身心健康……</strong></p><p>回想二十岁的时候，一人吃饱全家不愁，世界美好，放手去闯，或进取，或堕落，总有青春兜底，俺不怕！快到三十岁了，说实话，我在考量上行、下行的风险的时候，不敢如此冒进了，甚至于会收敛起自己的本性。至于为何？我最深刻的感受就是——基于现实！人难免存在的问题是：认不清现实，看不清未来。巴特农神庙的巨石柱上，也镌刻着先贤苏格拉底的醒世箴言：“人啊！认识你自己。”</p><p>对了，接下来说说，“五一” 奇幻的经历吧。这其实就是和一位陌生大哥的畅聊吧（暂且我就用大哥来称呼这位陌生人），大哥 75 年前后出生，假期前一天和妻子离婚了，回岳阳给自己父母交待事宜，且应朋友之邀到常德桃花源风景区去散散心。看得出来他整个人情绪很低落，但不失礼貌，刚开始我坐在他旁边，两人并未交谈，我看他穿着和举止还是有别于一般的人，但刚上车我也没功夫去主动招呼。因为早上十分匆忙，差点没赶上返湘的高铁，自然就没时间带午餐了。为尽快回到家，没有取道长沙，中途到岳阳下高铁，然后换乘了大巴。在上大巴车前就去候车室买了个大鸡腿，我饥不择食，吃的很酣畅，全然不顾还在陆陆续续上车的乘客，一直有心相印系列纸品不离身习惯的我，才发现包里居然没有，这个时候邻座大哥主动递了一张给我，也没拒绝，万分感激。所以，借着这么个机会就聊开了。</p><p>要知道，我早上五点多起来，前一天晚上也没怎么睡好，解决温饱后通常的流程就是呼呼大睡到目的地的。邻座大哥说：“我觉得你是比较好沟通，喜欢聊天的朋友”。我当时就很诧异了，接着说：“这你也能看得出来，我是属于那种要聊能聊得起话题的人，一般情况，又是属于比较安静的”。没想到的是，这位大哥当时就说了一句我很赞同的且富有哲理的话出来，“其实，很多时候，我们内心呈现的状态，决定了你看到的世界和接触的人是什么样子的。直觉告诉我，你是善于言谈的。” 大哥的一席话，瞬间让我联想到了与之对立的泰戈尔名言：“我们看错了世界，反而说他欺骗了我们”。由此可见，这位大哥心思缜密，观察细腻。相差十多岁，也不至于尬聊。</p><p>最开始并没有聊到婚姻的话题，更没有涉及到他离婚的细节。我们最开始还是从房价展开的。大哥毕竟比我大了十五岁，人生的进程自然就要比我提早很多年，资产的原始积累也要比我早，他当初买房也很难，但是房价和工资的畸形比例也还没有现在这么离谱，咬咬牙在岳阳陆陆续续地有了三套房，当初也就一两千入手的，后来因为城市的发展迅速，随着高铁通车，地段变得越来越好，现在均价都是一万多了。</p><p><img src="/images/get_3.png" alt></p><p>二十多年前他就去了东莞发展事业，家里主要由哥哥和妹妹来打理，父母住在他买的一套低层复式楼中。在东莞已经置业居家了，与妻子在东莞都有稳定的工作，小孩今年面临中考。在外人看来，他事业尚可、家庭圆满。所以，聊到这里，毕竟都是陌生人无利益瓜葛，我也讲了我近年来经历和人生的选择，可能彼此都比较真诚吧，聊得比较深入。大哥就婚姻关系上，和我聊着聊着就成为了话题的主要内容。可能从岳阳坐大巴到常德两个半小时期间有两个小时都在聊婚姻关系吧。这才把他此行的目的和缘由开始讲了出来。</p><p>我对婚姻关系的有限理解中，无非就是来自于自身、父母、其他比较亲近的亲朋。我没想过可以从如此刁钻的角度来 “窥探” 四十多岁年龄段人的婚姻关系。社会不断变化，人也会受到社会大氛围的影响，不可避免的就是婚姻关系也会随之变化。讲真，有生以来没有人真正教会过我如何去处理好自己的婚姻关系，一直以来都是摸石头过河。我想绝大多数人对于婚姻关系都是充满期待的，希望自己的另一半与自己安稳、幸福地度过一生吧。<strong>一直以来我都认为婚姻才是人生最好的修行方式，没有之一。</strong></p><p>那么当有个人比你年长，而且对生活比你有更加深刻的领悟，愿意去真实地表露自己的婚姻关系时，我是特别珍惜这样的机会的，实属难得。我可以很笃定地相信这位大哥讲述内容的真实性，我俩萍水相逢，此趟行程结束我们俩也就各自分道扬镳，或许他此行散心过程中也需要有人去倾听吧，我这个人也自认为是对生活有些细致入微的观察，城府不深但看得出思想深邃，想必我这样的听众，适当时候能接两句超越我年龄的话语，势必能够给这位大哥更多的心理安慰吧。我自己也是坦诚以待，无论是拿自己的摸石头过河的经历来作为补充，还是用我那个婚姻已经破灭的朋友来分析，这都是能够让话题继续进行的基本保障。</p><p><img src="/images/get_4.png" alt></p><p>大哥两口子当年到东莞定下来不久，在公司恰好有一对与之关系甚好的夫妻朋友，考虑到节约生活成本的问题，就两家人合租了一套大公寓，很长一段时间也都相安无事，大家工作相互协助，生活里也互相照顾，两家关系也都不错。再后来，大哥妻子怀孕了就回到岳阳养胎，而朋友中的男主需要到国外出差很长一段时间。因此，在这期间公寓里就只有大哥和合租朋友的妻子，大哥自己表示，这期间也并没有什么事情发生，未曾越界，做对不起妻子之类的事情。</p><p>但是，生活里总有一些是是非非会突然间闯入进来，让人背后议论。大哥和朋友妻子也都在一个公司上班，有时候上下班时间也比较接近，彼此也都很熟悉，所以大哥上下班途中有时候会开车载朋友妻子一程。以至于时间长了公司的同事对此议论纷纷，后来大哥的妻子生完小孩回到公司上班，时不时的听到别的同事对此议论，心里就十分地在意，而大哥在她妻子非常介意此事的情况下，也没有过多去审视这件不大不小的事情，他认为既然都是朋友，上下班顺带一下也是不为过的，只要自己身正就不怕影子斜，面对妻子表面上的少许不满，他也没有放在心上。</p><p>这件事情就像一个种子在大哥妻子的心里一直萌发着，再后来由于大哥公司转岗了，主要是为公司跑销售，所以，出差非常多，也经常需要陪同客户吃饭、娱乐，后续的这些年陆陆续续发生了一些小事，大哥依旧认为不是事儿，而在他妻子的心里不断累积，让他妻子对他的信任越来越少。而大哥男性思维主导，一方面，觉得自己确实是为了自己的事业在付出，努力地改善家庭的经济条件；另一方面，对自己的婚姻关系比较自信，认为期间只要自己管好自己不出轨就行了。所以，他很少审视自己的问题，几乎不太能感受得到妻子的怨言，还沉浸在结婚当初两人似乎还默契的婚姻关系中。</p><p><img src="/images/get_5.png" alt></p><p>事情发展到 “七年之痒” 时，大哥和他妻子就基本上意识到问题了，但婚姻关系并未得到修复，两人的矛盾由最初的冷暴力，发展为后来的经常性争吵了。大哥的理由就是自己为了家庭全身心的付出，给孩子一个不错的成长环境，给对方父母甚于亲儿子的亲情照顾（妻子的父亲生病两次，只有大哥一个人出面返湘照顾，甚至于小舅子都在躲事儿，把照顾父亲的责任甩给大哥），而自己的父母生病他妻子也未曾照顾关心过，即便如此，他可以认为妻子忙于工作，脱不开身只能作罢。大哥就难以想清楚妻子对他的怀疑、不信任竟然如此根深蒂固。他一直都认为自己很爱妻子，和对方父母的关系处理得非常好，而且对于自己的小家庭也算尽心尽力，在夫妻二人的共同努力下，孩子健康成长，成绩好、还懂事。</p><p>时间越往后推移，妻子愈加对他失去了信任。直到这次离婚前夕，他进行心理咨询，进行寻根问底的时候，偶然看到了武志红的禁书《巨婴国》，他才开始一点点抽丝剥茧地理解妻子如此变化的原因。他看来可以归结为三个原因：1. 原生家庭的亲情关系对她的潜移默化；2. 婚姻关系中两人未曾长时间地共同进步（准确讲，大哥比他妻子见识面更广，进步的更快一些，慢慢地发展为两人看待事物、处理问题的方式相去甚远），渐渐地缺少共同语言；3. 过于自信的人际关系处理方式，忽略另一半的想法，缺少适当的倾听交流。等待大哥已经明白过来的时候，离婚对于彼此似乎是一种解脱了，他并不想离婚，按照他的说法是，<strong>“我越是爱她就越只能尊重她的意见，最佳的干预窗口期我们已经错过了”。</strong>如果，我不通过大哥的亲口讲述，不去了解细节很难理解，“越爱对方越要放开手”，逻辑上理解不来，这种行为的方式也不会出现在我的行为准则上。就我这种对于婚姻关系缺乏过多想象的人，是想不出如同韩剧般离奇曲折的情节的，毕竟还是 naive！</p><p><img src="/images/get_6.png" alt></p><p>对于婚姻关系，祖辈给我展示出来的就是唇齿相依，相扶到老，几乎没有见到离婚的，不少情形下即便两人性格迥异，在一辈子的 “持久战” 中，也未曾危及到婚姻关系，最终岁月静好相安到老。而父辈们的婚姻关系就要复杂一些了，物质条件的改善，让他们这一辈对于婚姻关系有了更多的期待，精神层面的契合也能得到主流人群的认可，婚姻关系的成本就相对低于那些只能抱团取暖的 “不安稳” 岁月了。</p><p>而在我的同龄人八零九零年代的婚姻关系里，大家更加注重精神层面和物质基础的相匹配了，年轻人大胆、热情、勇于追求，既着眼于眼前的苟且，也不忘诗意的远方，似乎婚姻只是人生里的一小部分了，婚姻关系就被剥离得更加的脉络清晰，社会的包容度也更加高了（譬如，丁克、同性婚姻），但印象最深刻的反倒是年轻朋友各式各样的不幸婚姻关系，及其对于个人性情的负面影响，普通的归于普通，幸福和睦简简单单的却也是殊途同归。</p><p><strong><p align="center"><font color="#3385ff" size="2" face="黑体">“大胆假设，</font></p></strong><br><strong><p align="center"><font color="#3385ff" size="2" face="黑体">小心求证”</font></p></strong></p><p>社会在不断的进步，回归到前面的主题，我们身为 “社会人”，各自的需求也更加的多元化，也基本符合马斯洛的需求层次理论。婚姻关系绝对是跨越多个需求层次的，也能抓住每个人的心。离婚的成本越来越低，只要有钱似乎可以为所欲为，Ins 或者是 Twitter 上，富豪炫耀总少不了美女的相伴，国内的 X 城 X 少们也不例外，财富和地位时时刻刻的变化都足以改变“发迹” 者的小心思，激发潜藏的欲望。</p><p>面对越来越高的离婚率，我们大呼婚姻关系中的地位对等，以及婚姻自由的时候，又有多少人是属于遇到了对的人，并最终嫁给了爱情呢？我并不乐观看待普通大众的婚姻关系，利益优先的社会，很多时候扭曲了婚姻本身，这是一股洪流，普通人难以逃脱其影响；我同时也不悲观看待善意对待、用心经营的婚姻关系，有群人婚姻关系中爱得深沉、浪漫，也不是以往任何时代所能比拟的，<strong>现今伟大的时代注定会伴随不凡的爱情</strong>。</p><p>受大哥的亲身经历启发，我不由自主地神游了一番。等我抵达目的地，与大哥挥手告别，他似乎有了稍许的轻松，之后彼此消失在了这座桃花源城市的余晖里，陌生人再见！应该再也不会相见！非常奇妙吧。陌生人的心声吐露，让我这个 “小年轻” 或多或少收获了一些婚姻关系的经营之道，可能难以尽善尽美，我还是懂得了一些门道。对了，大哥认为我的婚姻关系认识水准与实际年龄不符，应该是在夸我“少年老成”。下车后我一路回味着这份赞许，待出租车到了家门口，妻子抱着女儿在门口迎着我，我却忘记了旅途的奔波劳累，这已是傍晚时分，也不在乎肚子咕咕叫，放下行李，逗乐半岁的女儿是我眼前最开心的事情，我回家了妻子也开心，喜上眉梢。</p><p><img src="/images/get_7.png" alt></p><p>（图片源于微博：陈缘风 侵删）</p><p>未来，很多…，夫妻二人工作安排、子女教育、父母赡养、二胎计划、车贷房贷，当然，还有最为核心的婚姻关系的鲜度保持。我和很多关系好的朋友都是基于现实的理想主义者，面对任务艰巨的现实情况，我还是乐观并偶尔冒进地来点惊喜，若过于冒失就显得太不稳重、太不靠谱了。</p><p>我从不贸然鄙视那些普通的人，普通的生活，更不敢在 “事不目见耳闻，而臆断其有无”，凡事存在即合理，都有各自的难处。谁没被现实打过脸，一次次跌倒爬起都是在告诉不断成长的你，“成年人的世界就没有‘容易’二字”。有些人在三十岁的门口，期待、欣喜、畏惧、徘徊、悲悯、绝望…，我告诉你，你所顾虑和担心或为之开心的，那是别人的故事，你的篇章还是得你自己去行动，可以大胆假设，仍需小心求证。</p><p><strong><p align="center"><font color="#3385ff" size="2" face="黑体">三十岁哪般模样，</font></p></strong><br><strong><p align="center"><font color="#3385ff" size="2" face="黑体">准备好了没？</font></p></strong></p><p><img src="/images/get_8.png" alt></p><p>（图片来源于网络，侵删）</p><p>本文来自粉丝投稿，版权归 Gavin 所有，欢迎给本公众号投稿，你说我听……</p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">欢迎订阅『颓着就挺好的』</font></p></strong></p> <img src="/images/sang.png" width="150" height="200" alt align="center"><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/getmary.jpg&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;文章原载于公众号『颓着就挺好的』，一年前投稿的一篇文章。道听途说的故事而已，歪理邪说不值一看！&lt;a href=&quot;https://mp.weixin.qq.com/s/9QXR-OWQ3Tb4oweJMEIKIw&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击原文链接！&lt;/a&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活随笔" scheme="https://gavin971.github.io/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="Life" scheme="https://gavin971.github.io/tags/Life/"/>
    
      <category term="Marriage" scheme="https://gavin971.github.io/tags/Marriage/"/>
    
  </entry>
  
  <entry>
    <title>孩子对于父母意味着什么？</title>
    <link href="https://gavin971.github.io/2019/05/24/life-daughter/"/>
    <id>https://gavin971.github.io/2019/05/24/life-daughter/</id>
    <published>2019-05-24T14:18:57.000Z</published>
    <updated>2019-05-30T13:47:11.679Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/child_1.jpeg" alt></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体"><code>文章原载于公众号『 颓着就挺好的』</code></font></p></strong></p><p><a href="https://mp.weixin.qq.com/s/HJ8PeUYH-dIuUooK9_7fYA" target="_blank" rel="noopener">链接</a><br><font color="#34ycc">本文来自粉丝Gavin投稿，版权归Gavin所有，仅代表作者本人观点。<br>导读：全文约4500字，是一位有个两岁左右女儿的新手爸爸所写，未婚、未育、已育的读者都可以从中感受到一些东西。</font></p><p><img src="/images/get_1.png" alt></p><blockquote><p><strong><font color="#0000ff">“孩子对于父母意味着什么？”真正诱导我去思考这个问题，还是在这段时间女儿生病才开始的，以前觉得很自然而然的过程，我们期待并欢迎她的到来。没有人是天生的父母，不认同“丧偶式”的“女子本弱，为母则刚”这种毒的鸡汤。虽然结婚生女到女儿学会走路，全程我都是博士在读期间，聚少离多，照顾女儿的重担就压在妻子和家人身上了，对于他们的亏欠，我只能以后慢慢去弥补了。总体而言，女儿出生后，我有时间还是责无旁贷地共同参与到女儿的成长中来，我与妻子以及家人有不同分工，给生活态度，以及婚姻家庭的气息都带来比较微妙的改变。当女儿隔着电话，或者，远远地用小手指着家中的网络摄像头就连声喊“爸爸”的时候，幸福从中来。</font></strong></p></blockquote><a id="more"></a><blockquote><p><strong><font color="#0000ff">春节后，参加高中毕业十周年的聚会，班上60号人左右，来了一大半。已婚的可能还不到一半吧，明显的感觉到已婚已育和未婚的同学之间的差异。作为聚会主要的策划组织者，我确实不得不牺牲陪伴妻女的时间去完成自己内心认为需要仪式感的事情，在外看来我一身轻松似的，哪怕没人参加，我也会和关系好的同学三三两两聚一聚的。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">那天正月初五，天寒地冻的，开车采购零食酒水饮料，几乎就没时间顾及来家里拜访的亲戚了，妻子说要我陪一陪亲属的，我实际上晚上十二点钟才回到城里，只能第二天再回乡下。要问我，参加这次聚会开心吗？其实觉得非常的平淡，和挚友相聚的时间尚且不够，这和我预期的效果有些差距，但更多的差距在哪我不知道。不过，下次聚会我是有更完善的方案了。这种失落感，必定是时常被惦记着家里妻女的情绪所袭扰。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">等你有了婚姻，有了孩子，你的自由支配时间必然大幅度下降。那么，孩子对于父母意味着“牺牲”吗？客观来讲，没那么自由那是肯定的，孩子生下来，你就需要为他们去操心，及时的换尿不湿，按时喂奶，不能让他们冻着或者捂着。如果要解读为“牺牲”，可能是心态还没摆正吧。或许，本来婚姻就只是凑合，焦头烂额的婚姻关系，哪里还有好的心情来应对照顾婴儿呢。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">我以前是个并不太喜欢小孩的人，内心至少是觉得无感，甚至于能够以共情的方式替那些抱着婴儿的父母感到劳累，出门都得背着一身行头，至少得两个人才能不手忙脚乱的照看好一个娃。至于大些的能跑能耍的娃，什么都好奇，那不守规矩翻箱倒柜，绝对让你焦头烂额。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">但是，当自己真正的有小孩了，心态似乎完全转变了，看别的娃始终觉得不如自己的娃可爱。虽我给女儿换尿不湿的时机不多，但也能感受到那臭臭的气味，在完全吃母乳或者牛奶的情况下，还是无伤大雅，等孩子刚开始吃上了辅食等更加丰富的饭菜了，你会被那浓烈的气味熏到怀疑人生的。但内心里，气味浓烈一点就浓烈一点吧，并不觉得恶心啊。亲生的，果然有特权！自己的这种心态转变是始料未及的。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">对于孩子的孕育到出生，母亲其实承载了更多的身心压力。就我闻一点女儿臭臭的气味而言，那简直是小巫见大巫啊。那段时间，孕妇跳楼的事件闹得沸沸扬扬的，妻子从怀孕起，就和我约定了自主选择的要求。她和我的手机都安装了宝宝树的APP每天都会看大量的帖子，对比自己的情况和别人的情况，常规的检查是不是都正常，她平时大大咧咧的，这件事情上关乎到母体和胎儿安全的方方面面，她都特别上心，基本能达到顶级“砖家”的级别。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">孕育到出生整个过程都是有危险的，风险压力之下，多数女性，还是得过这关啊。比较成熟的医疗水平和自身的重视，剩下的更多就只能交给运气了。妻子为了练体能，争取顺产，每天坚持行走万步，据她说，运动步数都提现了大几十块钱。她的直觉一直都很准，感觉是个女儿、感觉会提前出生、感觉可以顺产…，好运气似乎都是得有所准备的。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">虽说，女儿出生也挺顺利的，生完我才知晓，急忙坐高铁到虹口机场，从上海飞回常德陪伴她俩。“恭喜你，是个公主！”，父亲发微信在家庭群的时候，我仍旧不敢相信，仿佛置身梦境。妻子也一直觉得，生孩子是比较危险的，但同时更多是幸福的。对于我而言，虽然，我大部分时间在南京，应该我参与的迎接孩子到来的事情，我都事无巨细去参与和安排，这种“带入感”其实也是如何成为父母必经之路。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">孕期我也有几次全程陪她去医院。我会定期录制小故事语音，发给妻子，让她当做胎教的语音素材。我会提前抢券，购买原版儿童书，和一些小孩喜欢的玩具。妻子的待产包和相应的物品购置，也都是我来具体落实，包括孕妇护肤品和防妊娠纹的霜，都需要有所准备。至于一些营养品，我也都提前买了一些备好。当尿不湿堆满房间的时候，我发现也不需要太多东西了，陪伴和理解可能是更需要的。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">女儿出生的那几天出现了病理性黄疸，需要照蓝光，新生儿科住了四五天，每天只能泵奶后由我送到医院，月子期间我也陪伴照顾了妻子几天，饮食起居主要还是我妈负责。这期间也发生了不少事情，过来人的经验就是，一定要重视乳腺炎，可能不会比生娃疼痛感弱。当替妻子拉紧收腹带的时候，才觉得原来“卸完货”后是这样子的。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">女儿的孕育到出生对于妻子来说，确实是一场磨难，却又不得不去承受。我给妻子说，“很愧疚女儿出生的时候，我没陪着你”。她回答的倒是很干脆，“你就算在也帮不上什么忙，可能还有点碍事，我还是不要让你看到我狼狈的样子！”。这个回答我竟然听到几个人都说过了，毕竟我也是在YouTube上看过真实生产的视频的，有心理准备啊，然而并没有用上。 </font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">女儿的出生确实让家里忙碌了起来，若是没有双方父母的帮助，我俩肯定也应对不过来，男同胞的陪产假应该更长一些才合理，尤其是中国害怕“修昔底德陷阱”，要扭转人口下降的颓势，至少要拿出一点实质性的举措才行啊。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">很不巧，可能孩子生下来都是不太好看的模样，皮肤皱巴巴的，皮肤的颜色也不是自然的显露，还需要时间才能可爱起来。这一点要有心理准备。而且，“雪上加霜”的是很多情况下，别人家的baby都是安分可爱的，你家的就是哭闹不止，完全不按套路出牌的闹腾。是的，我家女儿是那种晚上必须一口口奶才能哄得住的小祖宗，根据妻子描述，整晚都趴在她的肚皮上，哭喊，不停歇，她整个人是崩溃的。这样的状态几乎持续到半岁，才略微好转。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">你难以想象，女儿在半岁多的时候，纯母乳就吃出了一岁多的体格吧。每次去体检医生都说要控制体重，让我也还挺担心的。妻子在这期间乳腺炎犯过两三次，急性乳腺炎会导致整个人发热，极其疼痛。让人不可预料的是，即便女儿特别能吃，也吃不完妻子的乳汁，女儿后面都胖到让人担心了，拍百日照竟然尴尬到摇篮框都装不下她了，那时候基本上每天还要倒掉三四百毫升的母乳。要说好处，那就是生完女儿了妻子不用刻意减肥，体重一下子回归孕前水平，甚至还能瘦点。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">在女儿吃了十个月的时候（原计划母乳坚持到一岁），我在那次回家的时间里，强行把女儿断了母乳，日常改喝牛奶加辅食。她还有点扛不住普通的奶粉，只能买水解蛋白类型的。从这以后，妻子才算保证了一点有质量的睡眠。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">反正，我是每次回家，每天晚上的睡眠时间都很短，可能满打满算三四个小时吧，女儿晚上要喊妈妈好几次，现在有好转了，但至少也有三四次吧。一喊妈妈就要屁股翘着，闭着眼睛扶着床四周的挡板站起来，我哄她根本无效，只能妻子过来拍拍哄哄。这已经有很大进步了，要知道以前一晚上要喂几次奶、每隔两三个小时就要换尿不湿，冬夜，多痛苦。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">我反正有那么些不眠之夜，抱着女儿踱着步，出生的第二晚我就是这么做的。小孩子就是如此，哭闹是最常用的表达方式，你凶她也没用，该哄还是得哄着。你说分床睡，让她一开始就喝牛奶，有人确实也这么做，我妻子她自己不忍这么对待，我也觉得不好。但，小孩生下来，作为父母，客观条件限制，就不得不用最普适的办法来，说到底，也是因为贫穷啊。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">要有钱请月嫂，甚至奶妈，妻子也就不用遭后续这么多罪。反正，没钱去请高级月嫂和奶妈，着实没有更加可行的轻松捷径可走啊。你说，怀孕到生娃，到娃长的稍微大一些，这些过程，都已经够艰难的了。养个孩子，并没有别人看来的那么容易，你看到的别人晒娃的幸福瞬间，可能是都只是表象而已。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">比较庆幸的是，女儿感冒也不多，而且很快就恢复了。这就有一次是在春节期间，我和妻子只能在走亲戚的间隙去市区给孩子看感冒做雾化，开车两天把十几家亲戚走完了。而这次呼吸道支原体感染，算是最严重的一次了，女儿都已经没精打采、不吃不喝了，去医院输液从早到晚。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">以往小可爱沉浸在自己的世界里，什么都好奇，活泼可爱，现在蔫蔫的，你说我担心不？孩子对于父母也意味着快乐的源泉，她的状态不能有太大的差池。这种爱，是她可以骑在你脑袋上，可以抓你的脸，可以肆意的消磨你的耐心，但父母内心依旧是可以接纳的。有朋友讲，孩子只要生下来就自然而然的长大了，不用太操心。我心想“MMP”，等你生了，你不担心么？不操心么？现在是站着说话不腰疼啊。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">我不觉孩子是父母的私有物品，他们也许在很小的时候就表现出了自己的特质，但是，去给他们一开始就定制方方面面，任何试错的机会都不给予，也是不可取的。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">孩子的出生，意味着父母的责任就要一点点的落实了，这不是一句空话，几乎都是围绕着，如何在力所能及的范围内为他们提供最好的成长环境。我知道，她渐渐地会从父母那得到潜移默化的影响，做父母可以是普普通通的，但还是完全可以给小孩树立正面的榜样的。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">不管怎样，从女儿懂事起，我都要给予她一个对等的人格，建立完全尊重平等的关系上。我能预想到的方面也不太多，但女儿的一点点成长，也是我的一次次成长。当我看到小区业主群里，吐槽小学三四年级的孩子就要去学而思补习了，提前准备小升初的那场战役，我就觉得成年人世界的病态已经蔓延了，但我还没想到办法，如何去应对这种集体的癔症。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">“孩子对于父母意味着什么？”答案千人千面。我也是成年后才突然意识到原来“成年人的世界没有容易二字”是真有道理啊，但我想做的是，在女儿成年、独立之前都能是快乐的，拥有快乐的童年和美好的中学时光，比较开阔的眼界，能够有一定的承压能力，有勇气去面对、寻找解决办法，心态上至少要比我要乐观和淡定一些。我相对于自己的父辈略有改进，但是还是意识到自己的心态有很大劣势。养娃，也才婚后生活的一部分，竟然就充满了如此之多的挑战，我是不太淡定的。</font></strong></p></blockquote><blockquote><p><strong><font color="#0000ff">养娃还是要有所付出的，换个角度，倾注了心血，不易得到的自然会倍加珍惜啊！有人说这是牺牲，有人说是投资，我都不敢苟同。我只感觉是充满了希望，但不是那种唯一的寄托，也许是未来女儿一点点成长，也能给我带来踏实的感觉吧，有点这方面的心理追求。很抱歉，养娃经验不足两年，未来的路还很漫长，我都不敢想太长远，没有成型的靠谱经验理论，只有一点点实践得出的流水账式经验，我好像也没回答“孩子对于父母意味着什么？”！</font></strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">备注：呼吸道支原体是一种细菌，可是，这种细菌却没有细胞壁。</span><br><span class="line"></span><br><span class="line">所以，一般最常用于小儿细菌感染的抗生素（头孢类，青霉素类）对于支原体是无效的。因为这类抗生素抗菌的基础是，抑制细菌细胞壁的形成。</span><br><span class="line"></span><br><span class="line">可是，支原体没有细胞壁。</span><br><span class="line"></span><br><span class="line">所以，抗支原体，只能通过使用针对细菌细胞核的药物。</span><br><span class="line"></span><br><span class="line">同时，还必须让药物对孩子身体损伤最小。</span><br><span class="line"></span><br><span class="line">于是，大环内酯类抗生素，首当其冲，成为抗小儿肺炎支原体感染的一线药物。</span><br><span class="line"></span><br><span class="line">虽然，这类药物在使用过程中，对孩子消化道刺激比较大。</span><br><span class="line"></span><br><span class="line">但是，他们还是相对最为安全的药物。</span><br></pre></td></tr></table></figure><p><code>推荐阅读：</code></p><p><a href="https://mp.weixin.qq.com/s/01wpyphjoMQDqfYXK-9MMA" target="_blank" rel="noopener">1.那些不生小孩的人，后来怎样了</a></p><p><a href="https://mp.weixin.qq.com/s/ckh_LCaaromogGcR6qKs4w" target="_blank" rel="noopener">2.曾经我是丁克，后来为生孩子胖了100斤。</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">欢迎订阅公众号『 颓着就挺好的』</font></p></strong><br> <img src="/images/sang.png" width="150" height="200" alt align="center"></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/child_1.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;p align=&quot;center&quot;&gt;&lt;font color=&quot;#c8044b&quot; size=&quot;2&quot; face=&quot;黑体&quot;&gt;&lt;code&gt;文章原载于公众号『 颓着就挺好的』&lt;/code&gt;&lt;/font&gt;&lt;/p&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/HJ8PeUYH-dIuUooK9_7fYA&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;链接&lt;/a&gt;&lt;br&gt;&lt;font color=&quot;#34ycc&quot;&gt;本文来自粉丝Gavin投稿，版权归Gavin所有，仅代表作者本人观点。&lt;br&gt;导读：全文约4500字，是一位有个两岁左右女儿的新手爸爸所写，未婚、未育、已育的读者都可以从中感受到一些东西。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/get_1.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;“孩子对于父母意味着什么？”真正诱导我去思考这个问题，还是在这段时间女儿生病才开始的，以前觉得很自然而然的过程，我们期待并欢迎她的到来。没有人是天生的父母，不认同“丧偶式”的“女子本弱，为母则刚”这种毒的鸡汤。虽然结婚生女到女儿学会走路，全程我都是博士在读期间，聚少离多，照顾女儿的重担就压在妻子和家人身上了，对于他们的亏欠，我只能以后慢慢去弥补了。总体而言，女儿出生后，我有时间还是责无旁贷地共同参与到女儿的成长中来，我与妻子以及家人有不同分工，给生活态度，以及婚姻家庭的气息都带来比较微妙的改变。当女儿隔着电话，或者，远远地用小手指着家中的网络摄像头就连声喊“爸爸”的时候，幸福从中来。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mac下如何在iTerm2终端远程上传和下载Linux服务器端文件等</title>
    <link href="https://gavin971.github.io/2019/05/20/iterms2/"/>
    <id>https://gavin971.github.io/2019/05/20/iterms2/</id>
    <published>2019-05-20T00:59:00.000Z</published>
    <updated>2019-05-20T02:24:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/iterm2.png" alt></p><blockquote><p><strong><font color="#0000ff">在Mac下，日常使用终端的频率非常高，尽管达不到生活在Terminal里的awesome级别，推荐一下终端下完美的组合是大有好处的。要打造属于自己的满意终端，一般而言需要以下几个组件：<code>iTerm2 + Oh-my-Zsh + autojump + Go2Shell + Vim</code>，具体安装和Vim的配置我不细说，只是单纯的推荐，用了都说好！本文主要指针对iTerm2终端上传下载文件做介绍，可以极大地方面，服务器端数据文件的查看，就不需要再打开FileZilla和Transmit一类的FTP客户端，这种终端的操作显得简洁、优雅！</font></strong></p></blockquote><a id="more"></a><h2 id="配置rz、sz"><a href="#配置rz、sz" class="headerlink" title="配置rz、sz"></a>配置rz、sz</h2><h3 id="在安装完iTerm2和Homebrew后，"><a href="#在安装完iTerm2和Homebrew后，" class="headerlink" title="在安装完iTerm2和Homebrew后，"></a>在安装完iTerm2和Homebrew后，</h3><p><code>brew install lrzsz</code></p><h3 id="下载iTerm2-zmodem，"><a href="#下载iTerm2-zmodem，" class="headerlink" title="下载iTerm2-zmodem，"></a>下载iTerm2-zmodem，</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</span><br><span class="line">sudo wget https://raw.github.com/mmastrac/iterm2-zmodem/master/iterm2-send-zmodem.sh</span><br><span class="line">sudo wget https://raw.github.com/mmastrac/iterm2-zmodem/master/iterm2-recv-zmodem.sh</span><br><span class="line">sudo chmod 777 /usr/<span class="built_in">local</span>/bin/iterm2-*</span><br></pre></td></tr></table></figure><h3 id="配置-iTerm2"><a href="#配置-iTerm2" class="headerlink" title="配置 iTerm2"></a>配置 iTerm2</h3><p>打开iTerm2，点击<code>preferences → profiles</code>，选择某个<code>profile</code>，如Default，之后继续选择<code>advanced → triggers</code>，添加编辑添加如下triggers,</p><table><thead><tr><th>Regular Expression</th><th>Action</th><th>Parameters</th></tr></thead><tbody><tr><td>rz waiting to receive.**B0100</td><td>Run Silent Coprocess</td><td>/usr/local/bin/iterm2-send-zmodem.sh</td></tr><tr><td>**B00000000000000</td><td>Run Silent Coprocess</td><td>/usr/local/bin/iterm2-recv-zmodem.sh</td></tr></tbody></table><p>参考：<a href="https://github.com/mmastrac/iterm2-zmodem" target="_blank" rel="noopener">https://github.com/mmastrac/iterm2-zmodem</a></p><p>此时，Mac本地端的安装配置就结束了。</p><h2 id="接下来配置Linux服务器端lsz-lrz"><a href="#接下来配置Linux服务器端lsz-lrz" class="headerlink" title="接下来配置Linux服务器端lsz/lrz"></a>接下来配置Linux服务器端lsz/lrz</h2><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装,"></a>编译安装,</h3><p>由于，多数情况下都是没有<code>root</code>权限的，下面的配置安装主要是针对于<code>普通用户</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /tmp</span><br><span class="line">$ wget http://www.ohse.de/uwe/releases/lrzsz-0.12.20.tar.gz</span><br><span class="line">$ tar zxvf lrzsz-0.12.20.tar.gz &amp;&amp; <span class="built_in">cd</span> lrzsz-0.12.20</span><br><span class="line">$ ./configure --prefix=/your_path/ &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="bashrc文件里添加路径"><a href="#bashrc文件里添加路径" class="headerlink" title="~/.bashrc文件里添加路径,"></a>~/.bashrc文件里添加路径,</h3><ul><li>打开</li></ul><blockquote><p><code>vim ~/.bashrc</code></p></blockquote><ul><li>添加 </li></ul><blockquote><p> <code>export PATH=$PATH:/your_path/bin</code></p></blockquote><ul><li>下面创建别名为rz/sz</li></ul><blockquote><p><code>alias rc=&#39;/your_path/bin/lrc&#39;</code></p><p><code>alias sz=&#39;/your_path/bin/lsz&#39;</code></p></blockquote><ul><li>更新环境变量</li></ul><blockquote><p><code>source ~/.bashrc</code></p></blockquote><p><code>完成。</code></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><code>随意从服务器下载一个文件：</code></p><p>下载<code>netcdf-4.3.3.1.tar.gz</code>文件，<br>只需要在iTerm2终端输入：</p><p><code>sz netcdf-4.3.3.1.tar.gz</code></p><p>会首先弹出一个选择本地安放位置的窗口。</p><p><img src="/images/iterm2_1.png" alt></p><p>选择后，就会下载：</p><p><img src="/images/iterm2_2.png" alt></p><h2 id="上传-下载文件scp方法"><a href="#上传-下载文件scp方法" class="headerlink" title="上传/下载文件scp方法"></a>上传/下载文件scp方法</h2><p>先介绍下如何使用 scp 命令。</p><p><strong>上传</strong></p><p><code>scp -r local_folder remote_username@remote_ip:remote_folder</code><br>或者</p><p><code>scp -r local_folder remote_ip:remote_folder</code></p><p><strong>下载</strong></p><p>下载和上传对应，只需要修改后两个参数顺序即可，即调整源文件和目标文件顺序。</p><p><code>scp -r remote_username@remote_ip:remote_folder local_folder</code></p><blockquote><p>几个可能用到的参数：</p><p>-v 和大多数 linux 命令中的 - v 意思一样, 用来显示进度。可以用来查看连接、认证、或是配置错误。</p><p>-r 递归处理，将指定目录下的文档和子目录一并处理</p><p>-C 使能压缩选项</p><p>-P 选择端口。注意 - p 已经被 rcp 使用</p><p>-4 强行使用 IPV4 地址</p><p>-6 强行使用 IPV6 地址</p></blockquote><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>Mac独有：<code>Go2Shell、iTerm2</code><br>Linux共有： <code>autojump、Oh-my-Zsh、Vim</code></p><h3 id="autojump"><a href="#autojump" class="headerlink" title="autojump"></a>autojump</h3><p>重点安利autojump，它能记住你进到的路径，根据使用的频率来排序，就不需要再寻找输入路径了，以下为实例图：<br><img src="/images/iterm2_3.png" alt><br>具体安装参考：</p><p><a href="https://www.barretlee.com/blog/2015/03/30/autojump-in-mac/" target="_blank" rel="noopener">链接.1</a><br><a href="https://www.jianshu.com/p/51e71087f732" target="_blank" rel="noopener">链接.2</a></p><h3 id="Oh-my-Zsh"><a href="#Oh-my-Zsh" class="headerlink" title="Oh-my-Zsh"></a>Oh-my-Zsh</h3><p>具体安装参考：</p><p><a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">链接.1</a><br><a href="https://ohmyz.sh/" target="_blank" rel="noopener">链接.2</a></p><h3 id="Go2Shell"><a href="#Go2Shell" class="headerlink" title="Go2Shell"></a>Go2Shell</h3><p>Mac安装Go2Shell 用于实现点击Finder上方勾选的图标直接打开iTerm2等终端（以前默认支持 Terminal，现在可选择iTerm2）。可直接访问当前Finder的文件路径。</p><p>具体安装参考：</p><p><a href="https://zipzapmac.com/Go2Shell" target="_blank" rel="noopener">链接.1</a><br><a href="http://wanghengliang.cn/2016/11/go2shell/" target="_blank" rel="noopener">链接.2</a><br><a href="https://www.jianshu.com/p/8033956ab71d" target="_blank" rel="noopener">链接.3</a></p><h3 id="Vim的配置"><a href="#Vim的配置" class="headerlink" title="Vim的配置"></a>Vim的配置</h3><p><img src="/images/iterm2_4.png" alt="效果图"><br>据说，牛人都是打造自己独一无二的Vim IDE，配置各取所需，但是确实实用，个人建议简单的vim实用技巧还是要会的，万一，你只能远程去编辑脚本，没有一点vim储备，一定会很抓狂的。不过，要想熟练使用，vim的学习曲线还是很陡峭的，长期积累是非常有必要的。</p><p>具体安装参考：</p><p><a href="https://saul-mirone.github.io/2017/06/20/vim-config/" target="_blank" rel="noopener">链接.1</a><br><a href="https://blog.csdn.net/simple_the_best/article/details/52970992" target="_blank" rel="noopener">链接.2</a><br><a href="https://github.com/wklken/k-vim" target="_blank" rel="noopener">链接.3</a><br><a href="http://www.ruanyifeng.com/blog/2018/09/vimrc.html" target="_blank" rel="noopener">链接.4</a></p><h3 id="cmder"><a href="#cmder" class="headerlink" title="cmder"></a>cmder</h3><p>另外，Windows上终端推荐cmder</p><p><img src="/images/cmder.png" alt></p><p>具体安装参考：</p><p><a href="https://cmder.net/" target="_blank" rel="noopener">链接.1</a><br><a href="https://www.jianshu.com/p/979db1a96f6d" target="_blank" rel="noopener">链接.2</a><br><a href="https://xiaogliu.github.io/2017/04/07/install-and-configure-cmder/" target="_blank" rel="noopener">链接.3</a></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/iterm2.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;在Mac下，日常使用终端的频率非常高，尽管达不到生活在Terminal里的awesome级别，推荐一下终端下完美的组合是大有好处的。要打造属于自己的满意终端，一般而言需要以下几个组件：&lt;code&gt;iTerm2 + Oh-my-Zsh + autojump + Go2Shell + Vim&lt;/code&gt;，具体安装和Vim的配置我不细说，只是单纯的推荐，用了都说好！本文主要指针对iTerm2终端上传下载文件做介绍，可以极大地方面，服务器端数据文件的查看，就不需要再打开FileZilla和Transmit一类的FTP客户端，这种终端的操作显得简洁、优雅！&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术积累" scheme="https://gavin971.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="Linux" scheme="https://gavin971.github.io/tags/Linux/"/>
    
      <category term="iTerm2" scheme="https://gavin971.github.io/tags/iTerm2/"/>
    
  </entry>
  
  <entry>
    <title>【转】Vim使用笔记</title>
    <link href="https://gavin971.github.io/2019/05/18/vi_vim/"/>
    <id>https://gavin971.github.io/2019/05/18/vi_vim/</id>
    <published>2019-05-18T11:10:33.000Z</published>
    <updated>2019-05-19T01:28:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/vim3.png" alt></p><blockquote><p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="noopener">简悦 SimpRead</a> 转码， 原文地址 <a href="http://www.cnblogs.com/jiqingwu/archive/2012/06/14/vim_notes.html#id50" target="_blank" rel="noopener">http://www.cnblogs.com/jiqingwu/archive/2012/06/14/vim_notes.html#id50</a></p></blockquote><p>| Author: | jiqing Wu |<br>| email: | <a href="mailto:jiqingwu@gmail.com" target="_blank" rel="noopener">jiqingwu@gmail.com</a> |<br>| Date: | 2012-06-14 |</p><p>vim 是我最喜欢的编辑器，也是 linux 下第二强大的编辑器。 虽然 emacs 是公认的世界第一，我认为使用 emacs 并没有使用 vi 进行编辑来得高效。 如果是初学 vi，运行一下 vimtutor 是个聪明的决定。 （如果你的系统环境不是中文，而你想使用中文的 vimtutor，就运行 vimtutor zh）</p><a id="more"></a><h1 id="1-关于Vim"><a href="#1-关于Vim" class="headerlink" title="1. 关于Vim"></a><a href="#id60">1. 关于Vim</a></h1><h2 id="1-1-Vim-的几种模式"><a href="#1-1-Vim-的几种模式" class="headerlink" title="1.1 Vim 的几种模式"></a><a href="#id60">1.1 Vim 的几种模式</a></h2><ul><li>正常模式：可以使用快捷键命令，或按: 输入命令行。</li><li>插入模式：可以输入文本，在正常模式下，按 i、a、o 等都可以进入插入模式。</li><li>可视模式：正常模式下按 v 可以进入可视模式， 在可视模式下，移动光标可以选择文本。按 V 进入可视行模式， 总是整行整行的选中。ctrl+v 进入可视块模式。</li><li>替换模式：正常模式下，按 R 进入。</li></ul><h1 id="2-启动Vim"><a href="#2-启动Vim" class="headerlink" title="2. 启动Vim"></a><a href="#id60">2. 启动Vim</a></h1><ul><li>vim -c cmd file: 在打开文件前，先执行指定的命令；</li><li>vim -r file: 恢复上次异常退出的文件；</li><li>vim -R file: 以只读的方式打开文件，但可以强制保存；</li><li>vim -M file: 以只读的方式打开文件，不可以强制保存；</li><li>vim -y num file: 将编辑窗口的大小设为 num 行；</li><li>vim + file: 从文件的末尾开始；</li><li>vim +num file: 从第 num 行开始；</li><li>vim +/string file: 打开 file，并将光标停留在第一个找到的 string 上。</li><li>vim –remote file: 用已有的 vim 进程打开指定的文件。 如果你不想启用多个 vim 会话，这个很有用。但要注意， 如果你用 vim，会寻找名叫 VIM 的服务器；如果你已经有一个 gvim 在运行了， 你可以用 gvim –remote file 在已有的 gvim 中打开文件。</li></ul><h1 id="3-文档操作"><a href="#3-文档操作" class="headerlink" title="3. 文档操作"></a><a href="#id60">3. 文档操作</a></h1><ul><li>:e file – 关闭当前编辑的文件，并开启新的文件。 如果对当前文件的修改未保存，vi 会警告。</li><li>:e! file – 放弃对当前文件的修改，编辑新的文件。</li><li>:e+file – 开始新的文件，并从文件尾开始编辑。</li><li>:e+n file – 开始新的文件，并从第 n 行开始编辑。</li><li>:enew – 编译一个未命名的新文档。(CTRL-W n)</li><li>:e – 重新加载当前文档。</li><li>:e! – 重新加载当前文档，并丢弃已做的改动。</li><li>:e# 或 ctrl+^ – 回到刚才编辑的文件，很实用。</li><li>:f 或 ctrl+g – 显示文档名，是否修改，和光标位置。</li><li>:f filename – 改变编辑的文件名，这时再保存相当于另存为。</li><li>gf – 打开以光标所在字符串为文件名的文件。</li><li>:w – 保存修改。</li><li>:n1,n2w filename – 选择性保存从某 n1 行到另 n2 行的内容。</li><li>:wq – 保存并退出。</li><li>ZZ – 保存并退出。</li><li>:x – 保存并退出。</li><li>:q[uit] ——退出当前窗口。(CTRL-W q 或 CTRL-W CTRL-Q)</li><li>:saveas newfilename – 另存为</li><li>:browse e – 会打开一个文件浏览器让你选择要编辑的文件。 如果是终端中，则会打开 netrw 的文件浏览窗口； 如果是 gvim，则会打开一个图形界面的浏览窗口。 实际上: browse 后可以跟任何编辑文档的命令，如 sp 等。 用 browse 打开的起始目录可以由 browsedir 来设置：<ul><li>:set browsedir=last – 用上次访问过的目录（默认）；</li><li>:set browsedir=buffer – 用当前文件所在目录；</li><li>:set browsedir=current – 用当前工作目录；</li></ul></li><li>:Sex – 水平分割一个窗口，浏览文件系统；</li><li>:Vex – 垂直分割一个窗口，浏览文件系统；</li></ul><h1 id="4-光标的移动"><a href="#4-光标的移动" class="headerlink" title="4. 光标的移动"></a><a href="#id60">4. 光标的移动</a></h1><h2 id="4-1-基本移动"><a href="#4-1-基本移动" class="headerlink" title="4.1 基本移动"></a><a href="#id64">4.1 基本移动</a></h2><p>以下移动都是在 normal 模式下。</p><ul><li>h 或退格: 左移一个字符；</li><li>l 或空格: 右移一个字符；</li><li>j: 下移一行；</li><li>k: 上移一行；</li><li>gj: 移动到一段内的下一行；</li><li>gk: 移动到一段内的上一行；</li><li><ul><li>或 Enter: 把光标移至下一行第一个非空白字符。</li></ul></li><li>-: 把光标移至上一行第一个非空白字符。</li><li>w: 前移一个单词，光标停在下一个单词开头；</li><li>W: 移动下一个单词开头，但忽略一些标点；</li><li>e: 前移一个单词，光标停在下一个单词末尾；</li><li>E: 移动到下一个单词末尾，如果词尾有标点，则移动到标点；</li><li>b: 后移一个单词，光标停在上一个单词开头；</li><li>B: 移动到上一个单词开头，忽略一些标点；</li><li>ge: 后移一个单词，光标停在上一个单词末尾；</li><li>gE: 同 <cite>ge</cite> ，不过‘单词’包含单词相邻的标点。</li><li>(: 前移 1 句。</li><li>): 后移 1 句。</li><li>{: 前移 1 段。</li><li>}: 后移 1 段。</li><li>fc: 把光标移到同一行的下一个 c 字符处</li><li>Fc: 把光标移到同一行的上一个 c 字符处</li><li>tc: 把光标移到同一行的下一个 c 字符前</li><li>Tc: 把光标移到同一行的上一个 c 字符后</li><li>;: 配合 f &amp; t 使用，重复一次</li><li>,: 配合 f &amp; t 使用，反向重复一次</li></ul><p>上面的操作都可以配合 n 使用，比如在正常模式 (下面会讲到) 下输入 3h， 则光标向左移动 3 个字符。</p><ul><li>0: 移动到行首。</li><li>g0: 移到光标所在屏幕行行首。</li><li>^: 移动到本行第一个非空白字符。</li><li>g^: 同 <cite>^</cite> ，但是移动到当前屏幕行第一个非空字符处。</li><li>$: 移动到行尾。</li><li>g$: 移动光标所在屏幕行行尾。</li><li>n|: 把光标移到递 n 列上。</li><li>nG: 到文件第 n 行。</li><li>:n<cr> 移动到第 n 行。</cr></li><li>:$<cr> 移动到最后一行。</cr></li><li>H: 把光标移到屏幕最顶端一行。</li><li>M: 把光标移到屏幕中间一行。</li><li>L: 把光标移到屏幕最底端一行。</li><li>gg: 到文件头部。</li><li>G: 到文件尾部。</li></ul><h2 id="4-2-翻屏"><a href="#4-2-翻屏" class="headerlink" title="4.2 翻屏"></a><a href="#id65">4.2 翻屏</a></h2><ul><li>ctrl+f: 下翻一屏。</li><li>ctrl+b: 上翻一屏。</li><li>ctrl+d: 下翻半屏。</li><li>ctrl+u: 上翻半屏。</li><li>ctrl+e: 向下滚动一行。</li><li>ctrl+y: 向上滚动一行。</li><li>n%: 到文件 n% 的位置。</li><li>zz: 将当前行移动到屏幕中央。</li><li>zt: 将当前行移动到屏幕顶端。</li><li>zb: 将当前行移动到屏幕底端。</li></ul><h2 id="4-3-标记"><a href="#4-3-标记" class="headerlink" title="4.3 标记"></a><a href="#id66">4.3 标记</a></h2><p>使用标记可以快速移动。到达标记后，可以用 Ctrl+o 返回原来的位置。 Ctrl+o 和 Ctrl+i 很像浏览器上的 <em>后退</em> 和 <em>前进</em> 。</p><ul><li>m{a-z}: 标记光标所在位置，局部标记，只用于当前文件。</li><li>m{A-Z}: 标记光标所在位置，全局标记。标记之后，退出 Vim， 重新启动，标记仍然有效。</li><li>`{a-z}: 移动到标记位置。</li><li>‘{a-z}: 移动到标记行的行首。</li><li>`{0-9}：回到上 [2-10] 次关闭 vim 时最后离开的位置。</li><li><code>: 移动到上次编辑的位置。&#39;&#39;也可以，不过</code> 精确到列，而’’精确到行 。如果想跳转到更老的位置，可以按 C-o，跳转到更新的位置用 C-i。</li><li>`”: 移动到上次离开的地方。</li><li>`.: 移动到最后改动的地方。</li><li>:marks 显示所有标记。</li><li>:delmarks a b – 删除标记 a 和 b。</li><li>:delmarks a-c – 删除标记 a、b 和 c。</li><li>:delmarks a c-f – 删除标记 a、c、d、e、f。</li><li>:delmarks! – 删除当前缓冲区的所有标记。</li><li>:help mark-motions 查看更多关于 mark 的知识。</li></ul><h1 id="5-插入文本"><a href="#5-插入文本" class="headerlink" title="5. 插入文本"></a><a href="#id60">5. 插入文本</a></h1><h2 id="5-1-基本插入"><a href="#5-1-基本插入" class="headerlink" title="5.1 基本插入"></a><a href="#id68">5.1 基本插入</a></h2><ul><li>i: 在光标前插入；一个小技巧：按 8，再按 i，进入插入模式，输入 =， 按 esc 进入命令模式，就会出现 8 个 =。 这在插入分割线时非常有用，如 30i+<esc> 就插入了 36 个 + 组成的分割线。</esc></li><li>I: 在当前行第一个非空字符前插入；</li><li>gI: 在当前行第一列插入；</li><li>a: 在光标后插入；</li><li>A: 在当前行最后插入；</li><li>o: 在下面新建一行插入；</li><li>O: 在上面新建一行插入；</li><li>:r filename 在当前位置插入另一个文件的内容。</li><li>:[n]r filename 在第 n 行插入另一个文件的内容。</li><li>:r !date 在光标处插入当前日期与时间。同理，:r !command 可以将其它 shell 命令的输出插入当前文档。</li></ul><h2 id="5-2-改写插入"><a href="#5-2-改写插入" class="headerlink" title="5.2 改写插入"></a><a href="#id69">5.2 改写插入</a></h2><ul><li>c[n]w: 改写光标后 1(n) 个词。</li><li>c[n]l: 改写光标后 n 个字母。</li><li>c[n]h: 改写光标前 n 个字母。</li><li>[n]cc: 修改当前 [n] 行。</li><li>[n]s: 以输入的文本替代光标之后 1(n) 个字符，相当于 c[n]l。</li><li>[n]S: 删除指定数目的行，并以所输入文本代替之。</li></ul><p>注意，类似 cnw,dnw,ynw 的形式同样可以写为 ncw,ndw,nyw。</p><h1 id="6-剪切复制和寄存器"><a href="#6-剪切复制和寄存器" class="headerlink" title="6. 剪切复制和寄存器"></a><a href="#id60">6. 剪切复制和寄存器</a></h1><h2 id="6-1-剪切和复制、粘贴"><a href="#6-1-剪切和复制、粘贴" class="headerlink" title="6.1 剪切和复制、粘贴"></a><a href="#id71">6.1 剪切和复制、粘贴</a></h2><ul><li>[n]x: 剪切光标右边 n 个字符，相当于 d[n]l。</li><li>[n]X: 剪切光标左边 n 个字符，相当于 d[n]h。</li><li>y: 复制在可视模式下选中的文本。</li><li>yy or Y: 复制整行文本。</li><li>y[n]w: 复制一 (n) 个词。</li><li>y[n]l: 复制光标右边 1(n) 个字符。</li><li>y[n]h: 复制光标左边 1(n) 个字符。</li><li>y$: 从光标当前位置复制到行尾。</li><li>y0: 从光标当前位置复制到行首。</li><li>:m,ny<cr> 复制 m 行到 n 行的内容。</cr></li><li>y1G 或 ygg: 复制光标以上的所有行。</li><li>yG: 复制光标以下的所有行。</li><li>yaw 和 yas：复制一个词和复制一个句子，即使光标不在词首和句首也没关系。</li><li>d: 删除（剪切）在可视模式下选中的文本。</li><li>d$ or D: 删除（剪切）当前位置到行尾的内容。</li><li>d[n]w: 删除（剪切）1(n) 个单词</li><li>d[n]l: 删除（剪切）光标右边 1(n) 个字符。</li><li>d[n]h: 删除（剪切）光标左边 1(n) 个字符。</li><li>d0: 删除（剪切）当前位置到行首的内容</li><li>[n] dd: 删除（剪切）1(n) 行。</li><li>:m,nd<cr> 剪切 m 行到 n 行的内容。</cr></li><li>d1G 或 dgg: 剪切光标以上的所有行。</li><li>dG: 剪切光标以下的所有行。</li><li>daw 和 das：剪切一个词和剪切一个句子，即使光标不在词首和句首也没关系。</li><li>d/f<cr>：这是一个比较高级的组合命令，它将删除当前位置 到下一个 f 之间的内容。</cr></li><li>p: 在光标之后粘贴。</li><li>P: 在光标之前粘贴。</li></ul><h2 id="6-2-文本对象"><a href="#6-2-文本对象" class="headerlink" title="6.2 文本对象"></a><a href="#id72">6.2 文本对象</a></h2><ul><li>aw：一个词</li><li>as：一句。</li><li>ap：一段。</li><li>ab：一块（包含在圆括号中的）。</li></ul><p>y, d, c, v 都可以跟文本对象。</p><h2 id="6-3-寄存器"><a href="#6-3-寄存器" class="headerlink" title="6.3 寄存器"></a><a href="#id73">6.3 寄存器</a></h2><ul><li>a-z：都可以用作寄存器名。”ayy 把当前行的内容放入 a 寄存器。</li><li>A-Z：用大写字母索引寄存器，可以在寄存器中追加内容。 如 “Ayy 把当前行的内容追加到 a 寄存器中。</li><li>:reg 显示所有寄存器的内容。</li><li>“”：不加寄存器索引时，默认使用的寄存器。</li><li>“<em>：当前选择缓冲区，”</em>yy 把当前行的内容放入当前选择缓冲区。</li><li>“+：系统剪贴板。”+yy 把当前行的内容放入系统剪贴板。</li></ul><h1 id="7-查找与替换"><a href="#7-查找与替换" class="headerlink" title="7. 查找与替换"></a><a href="#id60">7. 查找与替换</a></h1><h2 id="7-1-查找"><a href="#7-1-查找" class="headerlink" title="7.1 查找"></a><a href="#id75">7.1 查找</a></h2><ul><li>/something: 在后面的文本中查找 something。</li><li>?something: 在前面的文本中查找 something。</li><li>/pattern/+number: 将光标停在包含 pattern 的行后面第 number 行上。</li><li>/pattern/-number: 将光标停在包含 pattern 的行前面第 number 行上。</li><li>n: 向后查找下一个。</li><li>N: 向前查找下一个。</li></ul><p>可以用 grep 或 vimgrep 查找一个模式都在哪些地方出现过，</p><p>其中: grep 是调用外部的 grep 程序，而: vimgrep 是 vim 自己的查找算法。</p><p>用法为： :vim[grep]/pattern/[g] [j] files</p><p>g 的含义是如果一个模式在一行中多次出现，则这一行也在结果中多次出现。</p><p>j 的含义是 grep 结束后，结果停在第 j 项，默认是停在第一项。</p><p>vimgrep 前面可以加数字限定搜索结果的上限，如</p><p>:1vim/pattern/ % 只查找那个模式在本文件中的第一个出现。</p><p>其实 vimgrep 在读纯文本电子书时特别有用，可以生成导航的目录。</p><p>比如电子书中每一节的标题形式为：n. xxxx。你就可以这样：</p><p>:vim/^d{1,}./ %</p><p>然后用: cw 或: copen 查看结果，可以用 C-w H 把 quickfix 窗口移到左侧，</p><p>就更像个目录了。</p><h2 id="7-2-替换"><a href="#7-2-替换" class="headerlink" title="7.2 替换"></a><a href="#id76">7.2 替换</a></h2><ul><li>:s/old/new - 用 new 替换当前行第一个 old。</li><li>:s/old/new/g - 用 new 替换当前行所有的 old。</li><li>:n1,n2s/old/new/g - 用 new 替换文件 n1 行到 n2 行所有的 old。</li><li>:%s/old/new/g - 用 new 替换文件中所有的 old。</li><li>:%s/^/xxx/g - 在每一行的行首插入 xxx，^ 表示行首。</li><li>:%s/$/xxx/g - 在每一行的行尾插入 xxx，$ 表示行尾。</li><li>所有替换命令末尾加上 c，每个替换都将需要用户确认。 如：%s/old/new/gc，加上 i 则忽略大小写 (ignore)。</li></ul><p>还有一种比替换更灵活的方式，它是匹配到某个模式后执行某种命令，</p><p>语法为 :[range]g/pattern/command</p><p>例如 :%g/^ xyz/normal dd。</p><p>表示对于以一个空格和 xyz 开头的行执行 normal 模式下的 dd 命令。</p><p>关于 range 的规定为：</p><ul><li>如果不指定 range，则表示当前行。</li><li>m,n: 从 m 行到 n 行。</li><li>0: 最开始一行（可能是这样）。</li><li>$: 最后一行</li><li>.: 当前行</li><li>%: 所有行</li></ul><h2 id="7-3-正则表达式"><a href="#7-3-正则表达式" class="headerlink" title="7.3 正则表达式"></a><a href="#id77">7.3 正则表达式</a></h2><p>高级的查找替换就要用到正则表达式。</p><ul><li>\d: 表示十进制数（我猜的）</li><li>\s: 表示空格</li><li>\S: 非空字符</li><li>\a: 英文字母</li><li>|: 表示 或</li><li>.: 表示.</li><li>{m,n}: 表示 m 到 n 个字符。这要和 \s 与 \ a 等连用，如 \a{m,n} 表示 m 到 n 个英文字母。</li><li>{m,}: 表示 m 到无限多个字符。</li><li>**: 当前目录下的所有子目录。</li></ul><p>:help pattern 得到更多帮助。</p><hr><h1 id="8-排版"><a href="#8-排版" class="headerlink" title="8. 排版"></a><a href="#id60">8. 排版</a></h1><h2 id="8-1-基本排版"><a href="#8-1-基本排版" class="headerlink" title="8.1 基本排版"></a><a href="#id79">8.1 基本排版</a></h2><ul><li>&lt;&lt; 向左缩进一个 shiftwidth</li><li><blockquote><blockquote><p>向右缩进一个 shiftwidth</p></blockquote></blockquote></li><li>:ce(nter) 本行文字居中</li><li>:le(ft) 本行文字靠左</li><li>:ri(ght) 本行文字靠右</li><li>gq 对选中的文字重排，即对过长的文字进行断行</li><li>gqq 重排当前行</li><li>gqnq 重排 n 行</li><li>gqap 重排当前段</li><li>gqnap 重排 n 段</li><li>gqnj 重排当前行和下面 n 行</li><li>gqQ 重排当前段对文章末尾</li><li>J 拼接当前行和下一行</li><li>gJ 同 <cite>J</cite> ，不过合并后不留空格。</li></ul><h2 id="8-2-拼写检查"><a href="#8-2-拼写检查" class="headerlink" title="8.2 拼写检查"></a><a href="#id80">8.2 拼写检查</a></h2><ul><li>:set spell－开启拼写检查功能</li><li>:set nospell－关闭拼写检查功能</li><li>]s－移到下一个拼写错误的单词</li><li>[s－作用与上一命令类似，但它是从相反方向进行搜索</li><li>z=－显示一个有关拼写错误单词的列表，可从中选择</li><li>zg－告诉拼写检查器该单词是拼写正确的</li><li>zw－与上一命令相反，告诉拼写检查器该单词是拼写错误的</li></ul><h2 id="8-3-统计字数"><a href="#8-3-统计字数" class="headerlink" title="8.3 统计字数"></a><a href="#id81">8.3 统计字数</a></h2><p>g ^g 可以统计文档字符数，行数。 将光标放在最后一个字符上，用字符数减去行数可以粗略统计中文文档的字数。 以上对 Mac 或 Unix 的文件格式适用。 如果是 Windows 文件格式（即换行符有两个字节），字数的统计方法为： 字符数 - 行数 * 2。</p><hr><h1 id="9-编辑多个文件"><a href="#9-编辑多个文件" class="headerlink" title="9. 编辑多个文件"></a><a href="#id60">9. 编辑多个文件</a></h1><h2 id="9-1-一次编辑多个文件"><a href="#9-1-一次编辑多个文件" class="headerlink" title="9.1 一次编辑多个文件"></a><a href="#id83">9.1 一次编辑多个文件</a></h2><p>我们可以一次打开多个文件，如</p><blockquote><pre>vi a.txt b.txt c.txt</pre></blockquote><ul><li>使用: next(:n) 编辑下一个文件。</li><li>:2n 编辑下 2 个文件。</li><li>使用: previous 或: N 编辑上一个文件。</li><li>使用: wnext，保存当前文件，并编辑下一个文件。</li><li>使用: wprevious，保存当前文件，并编辑上一个文件。</li><li>使用: args 显示文件列表。</li><li>:n filenames 或: args filenames 指定新的文件列表。</li><li>vi -o filenames 在水平分割的多个窗口中编辑多个文件。</li><li>vi -O filenames 在垂直分割的多个窗口中编辑多个文件。</li></ul><h2 id="9-2-多标签编辑"><a href="#9-2-多标签编辑" class="headerlink" title="9.2 多标签编辑"></a><a href="#id84">9.2 多标签编辑</a></h2><ul><li>vim -p files: 打开多个文件，每个文件占用一个标签页。</li><li>:tabe, tabnew – 如果加文件名，就在新的标签中打开这个文件， 否则打开一个空缓冲区。</li><li>^w gf – 在新的标签页里打开光标下路径指定的文件。</li><li>:tabn – 切换到下一个标签。Control + PageDown，也可以。</li><li>:tabp – 切换到上一个标签。Control + PageUp，也可以。</li><li>[n] gt – 切换到下一个标签。如果前面加了 <cite>n</cite> ， 就切换到第 n 个标签。第一个标签的序号就是 1。</li><li>:tab split – 将当前缓冲区的内容在新页签中打开。</li><li>:tabc[lose] – 关闭当前的标签页。</li><li>:tabo[nly] – 关闭其它的标签页。</li><li>:tabs – 列出所有的标签页和它们包含的窗口。</li><li>:tabm[ove] [N] – 移动标签页，移动到第 N 个标签页之后。 如 <cite>tabm 0</cite> 当前标签页，就会变成第一个标签页。</li></ul><h2 id="9-3-缓冲区"><a href="#9-3-缓冲区" class="headerlink" title="9.3 缓冲区"></a><a href="#id85">9.3 缓冲区</a></h2><ul><li><p>:buffers 或: ls 或: files 显示缓冲区列表。</p></li><li><p>ctrl+^：在最近两个缓冲区间切换。</p></li><li><p>:bn – 下一个缓冲区。</p></li><li><p>:bp – 上一个缓冲区。</p></li><li><p>:bl – 最后一个缓冲区。</p></li><li><p>:b[n] 或:[n]b – 切换到第 n 个缓冲区。</p></li><li><p>:nbw(ipeout) – 彻底删除第 n 个缓冲区。</p></li><li><p>:nbd(elete) – 删除第 n 个缓冲区，并未真正删除，还在 unlisted 列表中。</p></li><li><p>:ba[ll] – 把所有的缓冲区在当前页中打开，每个缓冲区占一个窗口。</p></li><li><p>vim -o file1 file2: 水平分割窗口，同时打开 file1 和 file2</p></li><li><p>vim -O file1 file2: 垂直分割窗口，同时打开 file1 和 file2</p></li></ul><h1 id="10-分屏编辑"><a href="#10-分屏编辑" class="headerlink" title="10. 分屏编辑"></a><a href="#id60">10. 分屏编辑</a></h1><h2 id="10-1-水平分割"><a href="#10-1-水平分割" class="headerlink" title="10.1 水平分割"></a><a href="#id87">10.1 水平分割</a></h2><ul><li>:split(:sp) – 把当前窗水平分割成两个窗口。(CTRL-W s 或 CTRL-W CTRL-S) 注意如果在终端下，CTRL-S 可能会冻结终端，请按 CTRL-Q 继续。</li><li>:split filename – 水平分割窗口，并在新窗口中显示另一个文件。</li><li>:nsplit(:nsp) – 水平分割出一个 n 行高的窗口。</li><li>:[N]new – 水平分割出一个 N 行高的窗口，并编辑一个新文件。 (CTRL-W n 或 CTRL-W CTRL-N)</li><li>ctrl+w f – 水平分割出一个窗口，并在新窗口打开名称为光标所在词的文件 。</li><li>C-w C-^ – 水平分割一个窗口，打开刚才编辑的文件。</li></ul><h2 id="10-2-垂直分割"><a href="#10-2-垂直分割" class="headerlink" title="10.2 垂直分割"></a><a href="#id88">10.2 垂直分割</a></h2><ul><li>:vsplit(:vsp) – 把当前窗口分割成水平分布的两个窗口。 (CTRL-W v 或 CTRL CTRL-V)</li><li>:[N]vne[w] – 垂直分割出一个新窗口。</li><li>:vertical 水平分割的命令： 相应的垂直分割。</li></ul><h2 id="10-3-关闭子窗口"><a href="#10-3-关闭子窗口" class="headerlink" title="10.3 关闭子窗口"></a><a href="#id89">10.3 关闭子窗口</a></h2><ul><li>:qall – 关闭所有窗口，退出 vim。</li><li>:wall – 保存所有修改过的窗口。</li><li>:only – 只保留当前窗口，关闭其它窗口。(CTRL-W o)</li><li>:close – 关闭当前窗口，CTRL-W c 能实现同样的功能。 (象 :q :x 同样工作)</li></ul><h2 id="10-4-调整窗口大小"><a href="#10-4-调整窗口大小" class="headerlink" title="10.4 调整窗口大小"></a><a href="#id90">10.4 调整窗口大小</a></h2><ul><li>ctrl+w + – 当前窗口增高一行。也可以用 n 增高 n 行。</li><li>ctrl+w - – 当前窗口减小一行。也可以用 n 减小 n 行。</li><li>ctrl+w _ – 当前窗口扩展到尽可能的大。也可以用 n 设定行数。</li><li>:resize n – 当前窗口 n 行高。</li><li>ctrl+w = – 所有窗口同样高度。</li><li>n ctrl+w _ – 当前窗口的高度设定为 n 行。</li><li>ctrl+w &lt; – 当前窗口减少一列。也可以用 n 减少 n 列。</li><li>ctrl+w &gt; – 当前窗口增宽一列。也可以用 n 增宽 n 列。</li><li>ctrl+w | – 当前窗口尽可能的宽。也可以用 n 设定列数。</li></ul><h2 id="10-5-切换和移动窗口"><a href="#10-5-切换和移动窗口" class="headerlink" title="10.5 切换和移动窗口"></a><a href="#id91">10.5 切换和移动窗口</a></h2><p>如果支持鼠标，切换和调整子窗口的大小就简单了。</p><ul><li>ctrl+w ctrl+w: 切换到下一个窗口。或者是 ctrl+w w。</li><li>ctrl+w p: 切换到前一个窗口。</li><li>ctrl+w h(l,j,k): 切换到左（右，下，上）的窗口。</li><li>ctrl+w t(b): 切换到最上（下）面的窗口。<br></li><li>ctrl+w H(L,K,J): 将当前窗口移动到最左（右、上、下）面。</li><li>ctrl+w r：旋转窗口的位置。</li><li>ctrl+w T: 将当前的窗口移动到新的标签页上。</li></ul><h1 id="11-快速编辑"><a href="#11-快速编辑" class="headerlink" title="11. 快速编辑"></a><a href="#id60">11. 快速编辑</a></h1><h2 id="11-1-改变大小写"><a href="#11-1-改变大小写" class="headerlink" title="11.1 改变大小写"></a><a href="#id93">11.1 改变大小写</a></h2><ul><li>~: 反转光标所在字符的大小写。</li><li>可视模式下的 U 或 u：把选中的文本变为大写或小写。</li><li>gu(U) 接范围（如 $，或 G），可以把从光标当前位置到指定位置之间字母全部 转换成小写或大写。如 ggguG，就是把开头到最后一行之间的字母全部变为小 写。再如 gu5j，把当前行和下面四行全部变成小写。</li></ul><h2 id="11-3-撤消与重做（normal-模式）"><a href="#11-3-撤消与重做（normal-模式）" class="headerlink" title="11.3 撤消与重做（normal 模式）"></a><a href="#id95">11.3 撤消与重做（normal 模式）</a></h2><ul><li>[n] u: 取消一 (n) 个改动。</li><li>:undo 5 – 撤销 5 个改变。</li><li>:undolist – 你的撤销历史。</li><li>ctrl + r: 重做最后的改动。</li><li>U: 取消当前行中所有的改动。</li><li>:earlier 4m – 回到 4 分钟前</li><li>:later 55s – 前进 55 秒</li></ul><h2 id="11-4-宏"><a href="#11-4-宏" class="headerlink" title="11.4 宏"></a><a href="#id96">11.4 宏</a></h2><ul><li>. – 重复上一个编辑动作</li><li>qa：开始录制宏 a（键盘操作记录）</li><li>q：停止录制</li><li>@a：播放宏 a</li></ul><h1 id="12-编辑特殊文件"><a href="#12-编辑特殊文件" class="headerlink" title="12. 编辑特殊文件"></a><a href="#id60">12. 编辑特殊文件</a></h1><h2 id="12-1-文件加解密"><a href="#12-1-文件加解密" class="headerlink" title="12.1 文件加解密"></a><a href="#id98">12.1 文件加解密</a></h2><ul><li>vim -x file: 开始编辑一个加密的文件。</li><li>:X – 为当前文件设置密码。</li><li>:set key= – 去除文件的密码。</li></ul><p><a href="http://www.cnblogs.com/jiqingwu/admin/vim-quick-edit.html" target="_blank" rel="noopener">这里是</a> 滇狐总结的比较高级的 vi 技巧。</p><h2 id="12-2-文件的编码"><a href="#12-2-文件的编码" class="headerlink" title="12.2 文件的编码"></a><a href="#id99">12.2 文件的编码</a></h2><ul><li>:e ++enc=utf8 filename, 让 vim 用 utf-8 的编码打开这个文件。</li><li>:w ++enc=gbk，不管当前文件什么编码，把它转存成 gbk 编码。</li><li>:set fenc 或: set fileencoding，查看当前文件的编码。</li><li>在 vimrc 中添加 set fileencoding=ucs-bom,utf-8,cp936，vim 会根据要打开的文件选择合适的编码。 注意：编码之间不要留空格。 cp936 对应于 gbk 编码。 ucs-bom 对应于 windows 下的文件格式。</li></ul><p>让 vim 正确处理文件格式和文件编码，有赖于 <a href="http://www.cnblogs.com/jiqingwu/admin/vimrc.html" target="_blank" rel="noopener">~/.vimrc 的正确配置</a></p><h2 id="12-3-文件格式"><a href="#12-3-文件格式" class="headerlink" title="12.3 文件格式"></a><a href="#id100">12.3 文件格式</a></h2><p>大致有三种文件格式：unix, dos, mac. 三种格式的区别主要在于回车键的编码：dos 下是回车加换行，unix 下只有 换行符，mac 下只有回车符。</p><ul><li>:e ++ff=dos filename, 让 vim 用 dos 格式打开这个文件。</li><li>:w ++ff=mac filename, 以 mac 格式存储这个文件。</li><li>:set ff，显示当前文件的格式。</li><li>在 vimrc 中添加 set fileformats=unix,dos,mac，让 vim 自动识别文件格式。</li></ul><h1 id="13-编程辅助"><a href="#13-编程辅助" class="headerlink" title="13. 编程辅助"></a><a href="#id60">13. 编程辅助</a></h1><h2 id="13-1-一些按键"><a href="#13-1-一些按键" class="headerlink" title="13.1 一些按键"></a><a href="#id102">13.1 一些按键</a></h2><ul><li>gd: 跳转到局部变量的定义处；</li><li>gD: 跳转到全局变量的定义处，从当前文件开头开始搜索；</li><li>g;: 上一个修改过的地方；</li><li>g,: 下一个修改过的地方；</li><li>[[: 跳转到上一个函数块开始，需要有单独一行的 {。</li><li>]]: 跳转到下一个函数块开始，需要有单独一行的 {。</li><li>[]: 跳转到上一个函数块结束，需要有单独一行的}。</li><li>][: 跳转到下一个函数块结束，需要有单独一行的}。</li><li>[{: 跳转到当前块开始处；</li><li>]}: 跳转到当前块结束处；</li><li>[/: 跳转到当前注释块开始处；</li><li>]/: 跳转到当前注释块结束处；</li><li>%: 不仅能移动到匹配的 (),{} 或[]上，而且能在 #if，#else， #endif 之间跳跃。</li></ul><p>下面的括号匹配对编程很实用的。</p><ul><li>ci’, di’, yi’：修改、剪切或复制’之间的内容。</li><li>ca’, da’, ya’：修改、剪切或复制’之间的内容，包含’。</li><li>ci”, di”, yi”：修改、剪切或复制” 之间的内容。</li><li>ca”, da”, ya”：修改、剪切或复制” 之间的内容，包含 “。</li><li>ci(, di(, yi(：修改、剪切或复制 () 之间的内容。</li><li>ca(, da(, ya(：修改、剪切或复制 () 之间的内容，包含()。</li><li>ci[, di[, yi[：修改、剪切或复制 [] 之间的内容。</li><li>ca[, da[, ya[：修改、剪切或复制 [] 之间的内容，包含[]。</li><li>ci{, di{, yi{：修改、剪切或复制 {} 之间的内容。</li><li>ca{, da{, ya{：修改、剪切或复制 {} 之间的内容，包含{}。</li><li>ci&lt;, di&lt;, yi&lt;：修改、剪切或复制 &lt;&gt; 之间的内容。</li><li>ca&lt;, da&lt;, ya&lt;：修改、剪切或复制 &lt;&gt; 之间的内容，包含&lt;&gt;。</li></ul><h2 id="13-3-cscope"><a href="#13-3-cscope" class="headerlink" title="13.3 cscope"></a><a href="#id104">13.3 cscope</a></h2><ul><li>cscope -Rbq: 生成 cscope.out 文件</li><li>:cs add /path/to/cscope.out /your/work/dir</li><li>:cs find c func – 查找 func 在哪些地方被调用</li><li>:cw – 打开 quickfix 窗口查看结果</li></ul><h2 id="13-5-编译"><a href="#13-5-编译" class="headerlink" title="13.5 编译"></a><a href="#id106">13.5 编译</a></h2><p>vim 提供了: make 来编译程序，默认调用的是 make， 如果你当前目录下有 makefile，简单地: make 即可。</p><p>如果你没有 make 程序，你可以通过配置 makeprg 选项来更改 make 调用的程序。 如果你只有一个 abc.java 文件，你可以这样设置：</p><pre>set makeprg=javac\ abc.java</pre><p>然后: make 即可。如果程序有错，可以通过 quickfix 窗口查看错误。 不过如果要正确定位错误，需要设置好 errorformat，让 vim 识别错误信息。 如：</p><pre>:setl efm=%A%f:%l:\ %m,%-Z%p^,%-C%.%#</pre><p>%f 表示文件名，%l 表示行号， %m 表示错误信息，其它的还不能理解。 请参考 :help errorformat。</p><h2 id="13-6-快速修改窗口"><a href="#13-6-快速修改窗口" class="headerlink" title="13.6 快速修改窗口"></a><a href="#id107">13.6 快速修改窗口</a></h2><p>其实是 quickfix 插件提供的功能， 对编译调试程序非常有用 :)</p><ul><li>:copen – 打开快速修改窗口。</li><li>:cclose – 关闭快速修改窗口。</li></ul><p>快速修改窗口在 make 程序时非常有用，当 make 之后：</p><ul><li>:cl – 在快速修改窗口中列出错误。</li><li>:cn – 定位到下一个错误。</li><li>:cp – 定位到上一个错误。</li><li>:cr – 定位到第一个错误。</li></ul><h2 id="13-7-自动补全"><a href="#13-7-自动补全" class="headerlink" title="13.7 自动补全"></a><a href="#id108">13.7 自动补全</a></h2><ul><li>C-x C-s – 拼写建议。</li><li>C-x C-v – 补全 vim 选项和命令。</li><li>C-x C-l – 整行补全。</li><li>C-x C-f – 自动补全文件路径。弹出菜单后，按 C-f 循环选择，当然也可以按 C-n 和 C-p。</li><li>C-x C-p 和 C-x C-n – 用文档中出现过的单词补全当前的词。 直接按 C-p 和 C-n 也可以。</li><li>C-x C-o – 编程时可以补全关键字和函数名啊。</li><li>C-x C-i – 根据头文件内关键字补全。</li><li>C-x C-d – 补全宏定义。</li><li>C-x C-n – 按缓冲区中出现过的关键字补全。 直接按 C-n 或 C-p 即可。</li></ul><p>当弹出补全菜单后：</p><ul><li>C-p 向前切换成员；</li><li>C-n 向后切换成员；</li><li>C-e 退出下拉菜单，并退回到原来录入的文字；</li><li>C-y 退出下拉菜单，并接受当前选项。</li></ul><h2 id="13-8-多行缩进缩出"><a href="#13-8-多行缩进缩出" class="headerlink" title="13.8 多行缩进缩出"></a><a href="#id109">13.8 多行缩进缩出</a></h2><ul><li>正常模式下，按两下 &gt;; 光标所在行会缩进。</li><li>如果先按了 n，再按两下 &gt;;，光标以下的 n 行会缩进。</li><li>对应的，按两下 &lt;;，光标所在行会缩出。</li><li>如果在编辑代码文件，可以用 = 进行调整。</li><li>在可视模式下，选择要调整的代码块，按 =，代码会按书写规则缩排好。</li><li>或者 n =，调整 n 行代码的缩排。</li></ul><h2 id="13-9-折叠"><a href="#13-9-折叠" class="headerlink" title="13.9 折叠"></a><a href="#id110">13.9 折叠</a></h2><ul><li>zf – 创建折叠的命令，可以在一个可视区域上使用该命令；</li><li>zd – 删除当前行的折叠；</li><li>zD – 删除当前行的折叠；</li><li>zfap – 折叠光标所在的段；</li><li>zo – 打开折叠的文本；</li><li>zc – 收起折叠；</li><li>za – 打开 / 关闭当前折叠；</li><li>zr – 打开嵌套的折行；</li><li>zm – 收起嵌套的折行；</li><li>zR (zO) – 打开所有折行；</li><li>zM (zC) – 收起所有折行；</li><li>zj – 跳到下一个折叠处；</li><li>zk – 跳到上一个折叠处；</li><li>zi – enable/disable fold;</li></ul><p>normal 模式下按: 进入命令行模式</p><h1 id="14-命令行"><a href="#14-命令行" class="headerlink" title="14. 命令行"></a><a href="#id60">14. 命令行</a></h1><h2 id="14-1-命令行模式下的快捷键："><a href="#14-1-命令行模式下的快捷键：" class="headerlink" title="14.1 命令行模式下的快捷键："></a><a href="#id112">14.1 命令行模式下的快捷键：</a></h2><ul><li>上下方向键：上一条或者下一条命令。如果已经输入了部分命令，则找上一 条或者下一条匹配的命令。</li><li>左右方向键：左 / 右移一个字符。</li><li>C-w： 向前删除一个单词。</li><li>C-h： 向前删除一个字符，等同于 Backspace。</li><li>C-u： 从当前位置移动到命令行开头。</li><li>C-b： 移动到命令行开头。</li><li>C-e： 移动到命令行末尾。</li><li>Shift-Left： 左移一个单词。</li><li>Shift-Right： 右移一个单词。</li><li>@： 重复上一次的冒号命令。</li><li>q： 正常模式下，q 然后按’:’，打开命令行历史缓冲区， 可以像编辑文件一样编辑命令。</li><li>q / 和 q? 可以打开查找历史记录。</li></ul><h2 id="14-2-执行外部命令"><a href="#14-2-执行外部命令" class="headerlink" title="14.2 执行外部命令"></a><a href="#id113">14.2 执行外部命令</a></h2><ul><li>:! cmd 执行外部命令。</li><li>:!! 执行上一次的外部命令。</li><li>:sh 调用 shell，用 exit 返回 vim。</li><li>:r !cmd 将命令的返回结果插入文件当前位置。</li><li>:m,nw !cmd 将文件的 m 行到 n 行之间的内容做为命令输入执行命令。</li></ul><h1 id="15-其它"><a href="#15-其它" class="headerlink" title="15. 其它"></a><a href="#id60">15. 其它</a></h1><h2 id="15-1-工作目录"><a href="#15-1-工作目录" class="headerlink" title="15.1 工作目录"></a><a href="#id115">15.1 工作目录</a></h2><ul><li>:pwd 显示 vim 的工作目录。</li><li>:cd path 改变 vim 的工作目录。</li><li>:set autochdir 可以让 vim 根据编辑的文件自动切换工作目录。</li></ul><h2 id="15-2-一些快捷键（收集中）"><a href="#15-2-一些快捷键（收集中）" class="headerlink" title="15.2 一些快捷键（收集中）"></a><a href="#id116">15.2 一些快捷键（收集中）</a></h2><ul><li>K: 打开光标所在词的 manpage。</li><li>*: 向下搜索光标所在词。</li><li>g*: 同上，但部分符合即可。</li><li>#: 向上搜索光标所在词。</li><li>g#: 同上，但部分符合即可。</li><li>g C-g: 统计全文或统计部分的字数。</li></ul><h2 id="15-3-在线帮助"><a href="#15-3-在线帮助" class="headerlink" title="15.3 在线帮助"></a><a href="#id117">15.3 在线帮助</a></h2><ul><li>:h(elp) 或 F1 打开总的帮助。</li><li>:help user-manual 打开用户手册。</li><li>命令帮助的格式为：第一行指明怎么使用那个命令； 然后是缩进的一段解释这个命令的作用，然后是进一步的信息。</li><li>:helptags somepath 为 somepath 中的文档生成索引。</li><li>:helpgrep 可以搜索整个帮助文档，匹配的列表显示在 quickfix 窗口中。</li><li>Ctrl+] 跳转到 tag 主题，Ctrl+t 跳回。</li><li>:ver 显示版本信息。</li></ul><h2 id="15-4-一些小功能"><a href="#15-4-一些小功能" class="headerlink" title="15.4 一些小功能"></a><a href="#id118">15.4 一些小功能</a></h2><ul><li>简单计算器: 在插入模式下，输入 C-r =，然后输入表达式，就能在 光标处得到计算结果。</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.cnblogs.com/jiqingwu/archive/2012/06/14/vim_notes.html#id60" target="_blank" rel="noopener">1.Linuxer</a><sup>1</sup></p><hr><hr><hr><hr><hr><hr><p><img src="/images/vim1.png" alt></p><h2 id="简化版本"><a href="#简化版本" class="headerlink" title="简化版本"></a>简化版本</h2><blockquote><p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="noopener">简悦 SimpRead</a> 转码， 原文地址 <a href="https://blog.qxzzf.com/361" target="_blank" rel="noopener">https://blog.qxzzf.com/361</a></p></blockquote><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><pre>vim filename    :w              :w filename     :q              :q!             :wq             </pre><h3 id="进入插入模式"><a href="#进入插入模式" class="headerlink" title="进入插入模式"></a>进入插入模式</h3><pre>i   a   I   A   s   cw  c$  cc  o   O   R   r   </pre><h3 id="复制、粘贴"><a href="#复制、粘贴" class="headerlink" title="复制、粘贴"></a>复制、粘贴</h3><pre>yy          nyy、yny    yw          nyw         y^          y$          p           P           </pre><h3 id="删除、撤销"><a href="#删除、撤销" class="headerlink" title="删除、撤销"></a>删除、撤销</h3><pre>x           nx          dw          d$          dd          dnd、ndd    u       U       </pre><h3 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h3><pre>h,j,k,l     空格键      Backspace   Enter       -           w           e           b           ge          gg          G           n+          n-          ngg、nG     f{char}     F{char}     t{char}     T{char}     ``  `.  `^  `[  `]  `<  `>  </pre><h3 id="查找和替换"><a href="#查找和替换" class="headerlink" title="查找和替换"></a>查找和替换</h3><pre>/str        //向光标下搜索 str 字符串?str        //向光标上搜索 str 字符串n           //向下搜索前一个搜素动作N           //向上搜索前一个搜索动作:s/old/new          :s/old/new/g        //用new替换行中所有的old:n,m s/old/new/g    //用new替换从n到m行里所有的old:%s/old/new/g       //用new替换当前文件里所有的old</pre><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><pre>=               //格式化，例 gg=G 格式化整个文件:e otherfile    //编辑文件名为 otherfile 的文件，支持编辑远程文件，可通过 ftp、sftp、scp、http、rsync 等多种方式访问:r otherfile    //将 otherfile 文件中的内容写到当前文件，和 :e 一样可以支持远程文件，详见文末参考文档:set  nu        //显示行号:set nonu       //取消显示行号:set paste      //设置插入模式为 paste，这个在复制代码块时很有用，粘贴的代码会保持原有的缩进而不会被 vim 的自动缩进打乱:set fileformat=unix    //将文件修改为unix格式，如win下面的文本文件在linux下会出现^M:w !sudo tee %          //保存时获取sudo权限</pre><h3 id="vim-的常规语法"><a href="#vim-的常规语法" class="headerlink" title="vim 的常规语法"></a>vim 的常规语法</h3><h4 id="动词"><a href="#动词" class="headerlink" title="动词"></a>动词</h4><p>动词代表了我们打算对文本进行什么样的操作。例如：</p><ul><li>d 表示删除（delete）</li><li>r 表示替换（replace）</li><li>c 表示修改（change）</li><li>y 表示复制（yank）</li><li>v 表示选取（visual select）</li></ul><h4 id="名词"><a href="#名词" class="headerlink" title="名词"></a>名词</h4><p>名词代表了我们即将处理的文本。Vim 中有一个专门的术语叫做文本对象（text object），下面是一些文本对象的示例：</p><ul><li>$ 表示行尾</li><li>^ 表示行首</li><li>w 表示一个单词（word）</li><li>s 表示一个句子（sentence）</li><li>p 表示一个段落（paragraph）</li><li>t 表示一个 HTML 标签（tag）</li><li>引号或者各种括号所包含的文本称作一个文本块。</li></ul><h4 id="介词"><a href="#介词" class="headerlink" title="介词"></a>介词</h4><p>介词界定了待编辑文本的范围或者位置。例如：</p><ul><li>i 表示 “在… 之内”（inside）</li><li>a 表示 “环绕…”（around）</li><li>t 表示 “到… 位置前”（to）</li><li>f 表示 “到… 位置上”（forward）</li></ul><p><img src="/images/vim.png" alt></p><h4 id="组词为句"><a href="#组词为句" class="headerlink" title="组词为句"></a>组词为句</h4><p>动词 + 介词 + 名词 （介词可选，默认介词为 i）</p><pre>dip //删除一个段落: delete inside paragraphvis //选取一个句子: visual select inside sentenceciw //修改一个单词: change inside wordcaw //修改一个单词: change around worddtx //删除文本直到字符“x”（不包括字符“x”）: delete to xdfx //删除文本直到字符“x”（包括字符“x”）: delete forward x</pre><p>动词 + 数词 + 名词 or 数词 + 动词 + 名词 （数词可选，默认数词为 1）</p><pre>c3w //修改三个单词：change three wordsd2w //删除两个单词：delete two words2dw //两次删除单词（等价于删除两个单词）: twice delete word3x  //三次删除字符（等价于删除三个字符）：three times delete character</pre><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><ul><li><a href="https://mp.weixin.qq.com/s/zZAWpZbDtSFK6EROxaBRKw" target="_blank" rel="noopener">有关 vi(vim) 的常用命令</a></li><li><a href="https://www.jianshu.com/p/52b1b41de71f" target="_blank" rel="noopener">Vim 常用文档动作命令总结</a></li><li><a href="https://www.jianshu.com/p/a361ce8c97bc" target="_blank" rel="noopener">一起来说 Vim 语</a></li><li><a href="https://blog.csdn.net/lovelirui/article/details/6272536" target="_blank" rel="noopener">用 Vim 编辑远程文件</a></li><li><a href="https://github.com/chenxiaochun/blog/issues/60" target="_blank" rel="noopener">vim 常用操作总结</a></li></ul><hr><hr><blockquote><p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="noopener">简悦 SimpRead</a> 转码， 原文地址 <a href="https://blog.csdn.net/wallwind/article/details/76333562010-11-24" target="_blank" rel="noopener">https://blog.csdn.net/wallwind/article/details/76333562010-11-24</a> 16:19:41</p></blockquote><pre>VI中的多行删除与复制法一：单行删除，：1（待删除行）d多行删除 ，：1,10d法二：光标所在行，dd光标所在行以下的N行，Ndd方法1：光标放到第6行，输入：2yy光标放到第9行，输入：p此方法适合复制少量行文本的情况，复制第6行（包括）下面的2行数据，放到第9行下面。方法2：命令行模式下输入6,9 co 12复制第6行到第9行之间的内容到第12行后面。方法3：有时候不想费劲看多少行或复制大量行时，可以使用标签来替代光标移到起始行，输入ma光标移到结束行，输入mb光标移到粘贴行，输入mc然后 :'a,'b co 'c 把 co 改成 m 就成剪切了要删除多行的话，可以用 ：5, 9 deVIM常用命令常用命令1) 光标命令k,j,h,l---上下左右光标移动命令，虽然可以在Linux中使用键盘右边的四个光标键， 但是记住这四个命令还有非常有用的，也就是右手在键盘上放置的位置部分nG ----n为行数，该命令立即使光标跳到指定行。Ctrl+G-----光标所在位置的行数和列数报告w,b------使光标向前或向后跳过一个单词2) 编辑命令i,a,r -------在光标的前,后,上方插入字符命令(i=insert,a=append,r=replace) cw,dw------ 改变(置换)/删除光标所在处的单词的命令 (c=change,d=delete) x,d$,dd -----删除一个字符，光标所在处到行尾的所有字符，和整行的命令3) 查找命令 /string, ?string-----从光标所在处向后/向前查找相应的字符串的命令4)拷贝复制命令 yy,p -----拷贝一行到剪贴板/取出剪贴板中内容的命令常见问题及应用技巧1) 在一个新文件中读/etc/passwd中的内容，取出用户名部分 vi file :r /etc/passwd 在打开的文件file中光标所在处读入/etc/passwd :%s/:.*//g 删除/etc/passwd中用户名后面的从冒号开始直到行尾的所有部分 :3r /etc/passwd 这是在指定的行号后面读入文件内容另外一种方法删掉文件中所有的空行及以#开始的注释行 #cat squid.conf.default | grep -v '^/pre> | grep -v '^#' 2) 在打开一个文件编辑后才知道登录的用户对该文件没有写权，不能存盘 vi file :w /tmp/1 既然没法存盘，不想放弃所做的所有修改，先临时存到/tmp/1 :20,59w /tmp/1 或者仅仅把第20到59行之间的内容存盘成文件/tmp/13) 用VI编辑一个文件，但需要删除大段大段的内容 vi file Ctrl+G 把光标移到需要删除的行的处按ctrl+G显示行号，再到结尾处再按Ctrl+G. :23,1045d 假定两次行号为23和1045，则把这几间的内容全删除 也可以在开始和结束两行中用ma,mb命令标记后用:'a,'bd删除.4) 在整个文件或某几行中在行首或行尾加一些字符串 vi file :3,$s/^/some string / 在文件的第一行至最后一行的行首前插入some string :%s/$/ some string/g 在整个文件每一行的行尾添加 some string :%s/string1/string2/g 在整个文件中替换string1成string2 :3,7s/string1/string2/ 仅替换文件中的第三到七行中的string1成string2 Note: s为substitute,%表示所有行,g表示global 5) 同时编辑两个文件,在两个文件中拷贝剪贴文本 vi file1 file2 yy 同时打开两个文件,在文件1的光标所在处拷贝所在行 :n 切换到文件2 (n=next) p 在文件2的光标所在处粘贴所拷贝的行 :N 切换回文件16) 替换文件中的路径 :%s#/usr/bin#/bin#g 把文件中所有路径/usr/bin换成/bin 或者用 :%s//usr/bin//bin/g 在'/'前用符号指出'/'是真的单个字符'/'7) 用 vi 多行注释如果要给多行程序作注释，一个笨办法就是 插入 # ，然后用 j 跳到下一行用 . 命令，重复上个命令。如果要注释几百行，这样的方法恐怕太愚蠢了。一个聪明的办法是：:.,+499 s/^/#/g</pre><hr><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/vim3.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文由 &lt;a href=&quot;http://ksria.com/simpread/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;简悦 SimpRead&lt;/a&gt; 转码， 原文地址 &lt;a href=&quot;http://www.cnblogs.com/jiqingwu/archive/2012/06/14/vim_notes.html#id50&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.cnblogs.com/jiqingwu/archive/2012/06/14/vim_notes.html#id50&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;| Author: | jiqing Wu |&lt;br&gt;| email: | &lt;a href=&quot;mailto:jiqingwu@gmail.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jiqingwu@gmail.com&lt;/a&gt; |&lt;br&gt;| Date: | 2012-06-14 |&lt;/p&gt;
&lt;p&gt;vim 是我最喜欢的编辑器，也是 linux 下第二强大的编辑器。 虽然 emacs 是公认的世界第一，我认为使用 emacs 并没有使用 vi 进行编辑来得高效。 如果是初学 vi，运行一下 vimtutor 是个聪明的决定。 （如果你的系统环境不是中文，而你想使用中文的 vimtutor，就运行 vimtutor zh）&lt;/p&gt;
    
    </summary>
    
      <category term="编程基础" scheme="https://gavin971.github.io/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="VIM" scheme="https://gavin971.github.io/tags/VIM/"/>
    
      <category term="vimtutor" scheme="https://gavin971.github.io/tags/vimtutor/"/>
    
  </entry>
  
  <entry>
    <title>NCL系列经典图书の脚本和测试数据</title>
    <link href="https://gavin971.github.io/2019/05/17/ncl/"/>
    <id>https://gavin971.github.io/2019/05/17/ncl/</id>
    <published>2019-05-17T05:23:03.000Z</published>
    <updated>2019-05-17T08:33:51.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/ncl2.png" alt></p><blockquote><p><strong><font color="#0000ff">我学习的第一种气象绘图工具其实是IDL，只是后来为了完成本科毕业论文才自学NCL的。所以，NCL也算是我最熟悉的气象专属软件了。NCL官网有最完备的参考指南，近几年国内也陆陆续续有NCL书籍出版，个人觉得施宁老师的书编写的最好。在这个时刻万众高呼<ruby>“人生苦短，我用Python” <rp>(</rp><rt>别骗自己，学了也苦短啊！ </rt><rp>)</rp></ruby>，对于NCL的爱好者而言，它依旧强大实用。各喜各爱，NCL虽然已经拥抱Python了，也不妨碍继续使用它的既有库，使用NCL更多还是情怀所在。故，在此推介。对于初学者而言，我觉得Python并不真正友好，选择过多也是一种烦恼，千万不要误以为Python很简单，深入下去Python的学习曲线还是会比较陡峭，如果有C语言的基础那就是另外一回事了。就编程零基础的人而言，学习的边际可控，NCL是个让人注意力很集中的工具，依葫芦画瓢，轻松出图。我的GitHub上也有其中部分<a href="https://github.com/gavin971/NCL_meteorology_libs" target="_blank" rel="noopener">代码的仓库</a>，需要的可以Clone。另外，需要说明的是，代码有些关键部分是缺失的，只有图书里的例子是完整的。</font></strong></p></blockquote><a id="more"></a><h2 id="书本简介"><a href="#书本简介" class="headerlink" title="书本简介"></a>书本简介</h2><p><a href="http://www.qxcbs.com/news/newsdetail.jsp?id=164670&nodeid=383&siteid=2" target="_blank" rel="noopener">《NCL数据处理与绘图实习教程》</a></p><blockquote><p>1.<em><a href="http://www.qxcbs.com/data/attachement/rar/site2/20170728/1501209300112.rar" target="_blank" rel="noopener">测试数据下载链接</a></em></p></blockquote><blockquote><p>2.<em><a href="http://www.qxcbs.com/data/attachement/rar/site2/20170728/1501209277009.rar" target="_blank" rel="noopener">Cygwin-Windows下安装Unix环境安装包下载链接</a></em></p></blockquote><p><a href="http://www.qxcbs.com/news/newsdetail.jsp?id=166220&nodeid=383&siteid=2" target="_blank" rel="noopener">《NCL数据处理与绘图基础教程》</a></p><blockquote><p>1.<em><a href="http://www.qxcbs.com/data/attachement/rar/site2/20180528/1527487270401.rar" target="_blank" rel="noopener">测试数据下载链接</a></em></p></blockquote><p>如果，链接失效可以发邮件到<a href="mailto:zhpfu.atm@gmail.com" target="_blank" rel="noopener">zhpfu.atm@gmail.com</a>索要。</p><p><img src="/images/ncl.jpg" alt></p><p>内容简介：本书由南京信息工程大学施宁副教授、潘玉洁老师和中国科学院大气物理研究所于恩涛副研究员、汪君高级工程师执笔。根据作者数年来的NCL实践教学和科研使用经验，参照NCL官网上提供的示例及《NCL User Guide》，系统全面地介绍了NCL在各操作系统中的安装步骤、基本语法、文件读写、数据运算和绘图等基础功能。同时，本书还对一些重点与难点进行了详细介绍，便于读者更好地理解。同时，本书还介绍了NCL与第三方软件的联动(如Fortran、文本编辑器、Python、CDO、VAPOR等)，这可极大地提高NCL的使用效率，扩展其应用范围。</p><p><a href="http://www.qxcbs.com/books/wssc.jsp?t=1558070908736" target="_blank" rel="noopener">购书链接(友情帮转！)</a></p><p><img src="/images/book_cover.png" alt></p><p>内容简介：本书首先介绍了NCL下载及安装方法，其后通过9个简单的绘图实例讲解了NCL的基本绘图方法，随后通过19个具体的应用实例进一步综合讲解了NCL对于各种常见格式数据的输入输出、复杂图形的绘制方法以及常见计算函数的使用方法 。此外，附录中还提供了124个常用计算函数及程序、53个常用绘图函数及程序、25个处理WRF输出数据的计算和绘图函数以及13类常用绘图参数的使用方法及说明，并提供了常用函数的索引，这些内容可方便读者日后参考查阅。<br>本书适合大气科学专业及地学专业本科及研究生实习，也可供相关专业研究生、科研业务人员参考使用。</p><p>ISBN：978-7-5029-6567-9；定价：40.00元。</p><p><a href="http://www.qxcbs.com//books/booksdetail.jsp?id=164759&nodeid=267&siteid=2&pubcompanyid=49" target="_blank" rel="noopener">购书链接(友情帮转！)</a></p><h2 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h2><p>施宁，南京信息工程大学副教授，博士。主讲课程: 数值天气预报，大气环流，Linux和NCL实践。主要研究领域: 近年来集中研究了北极涛动（AO）的形态及其大气内部动力学机制。（1）提出了在垂直方向上平流层—对流层非耦合型AO的形成机制，即东北亚地区及北美东部地区存在垂直波导区，它的存在有利于其附近的环流异常在平流层—对流层频散Rossby波能量，进而导致平流层—对流层中环流异常反位相的特征；（2）在多年代际尺度上发现阿留申—冰岛低压振荡有利于AO形成水平纬向对称的结构。</p><blockquote><p>版权归作者所有，特殊用途请联系施宁老师，我只是大自然的搬运工。🙂</p></blockquote><p>附带链接。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://bbs.06climate.com/forum.php?mod=forumdisplay&fid=39" target="_blank" rel="noopener">1.气象家园NCL板块</a><sup>1</sup><br><a href="https://www.ncl.ucar.edu/" target="_blank" rel="noopener">2.官网链接</a><sup>2</sup></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ncl2.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;我学习的第一种气象绘图工具其实是IDL，只是后来为了完成本科毕业论文才自学NCL的。所以，NCL也算是我最熟悉的气象专属软件了。NCL官网有最完备的参考指南，近几年国内也陆陆续续有NCL书籍出版，个人觉得施宁老师的书编写的最好。在这个时刻万众高呼&lt;ruby&gt;“人生苦短，我用Python” &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;别骗自己，学了也苦短啊！ &lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;，对于NCL的爱好者而言，它依旧强大实用。各喜各爱，NCL虽然已经拥抱Python了，也不妨碍继续使用它的既有库，使用NCL更多还是情怀所在。故，在此推介。对于初学者而言，我觉得Python并不真正友好，选择过多也是一种烦恼，千万不要误以为Python很简单，深入下去Python的学习曲线还是会比较陡峭，如果有C语言的基础那就是另外一回事了。就编程零基础的人而言，学习的边际可控，NCL是个让人注意力很集中的工具，依葫芦画瓢，轻松出图。我的GitHub上也有其中部分&lt;a href=&quot;https://github.com/gavin971/NCL_meteorology_libs&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;代码的仓库&lt;/a&gt;，需要的可以Clone。另外，需要说明的是，代码有些关键部分是缺失的，只有图书里的例子是完整的。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="气象绘图" scheme="https://gavin971.github.io/categories/%E6%B0%94%E8%B1%A1%E7%BB%98%E5%9B%BE/"/>
    
    
      <category term="NCL" scheme="https://gavin971.github.io/tags/NCL/"/>
    
      <category term="GitHub" scheme="https://gavin971.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>气象家园自动登录、签到Python脚本</title>
    <link href="https://gavin971.github.io/2019/05/15/bbs06/"/>
    <id>https://gavin971.github.io/2019/05/15/bbs06/</id>
    <published>2019-05-15T10:39:32.000Z</published>
    <updated>2019-05-15T16:16:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/bbs04.png" alt></p><blockquote><p><strong><font color="#0000ff">利用Python简单的模拟登陆气象家园BBS，提供一种比较容易理解的思路，用于自动签到和访问空间，获取积分。目的不在于鼓励大家不劳而获，而从论坛只拿好处不谈贡献。主要还是简单实践一下，利用已有的工具去做点好玩的事情，解决自己的小麻烦，人非圣贤，也不是机器，毕竟每天签到也还是偶尔会中断的。</font></strong></p></blockquote><a id="more"></a><h3 id="需要的工具"><a href="#需要的工具" class="headerlink" title="需要的工具"></a>需要的工具</h3><ol><li>Python3.6+  selenium ; ChromeDriver(版本需要匹配，<a href="http://chromedriver.chromium.org/downloads" target="_blank" rel="noopener">下载链接</a>)  </li><li>Shell 环境支持 crontab 命令</li></ol><h3 id="Python代码（下载：discuz-click-py）"><a href="#Python代码（下载：discuz-click-py）" class="headerlink" title="Python代码（下载：discuz_click.py）"></a>Python代码（下载：<a href="https://github.com/gavin971/bbs06_AutoSignIn" target="_blank" rel="noopener">discuz_click.py</a>）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ======================================================================</span></span><br><span class="line"><span class="comment"># Author: Gavin | Affiliation: NJU</span></span><br><span class="line"><span class="comment"># Email : Zhpfu.atm@gmail.com</span></span><br><span class="line"><span class="comment"># Last modified: 2019-05-15 18:31</span></span><br><span class="line"><span class="comment"># Filename: discuz_click.py</span></span><br><span class="line"><span class="comment"># Description: 1.气象家园自动签到脚本（签到+访问别人空间）</span></span><br><span class="line"><span class="comment">#              2.非静默方式,比较初级的版本</span></span><br><span class="line"><span class="comment">#              3.需要借助Chrome、Firefox驱动模块</span></span><br><span class="line"><span class="comment"># ======================================================================</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChains</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">option = Options()</span><br><span class="line"><span class="comment"># option.add_argument('--headless')</span></span><br><span class="line"><span class="comment"># option.add_argument('--disable-gpu')</span></span><br><span class="line"></span><br><span class="line">username=<span class="string">r"风往北吹"</span>    <span class="comment">#需要自己用户名修改</span></span><br><span class="line">passwd=<span class="string">"12345678"</span>       <span class="comment">#需要自己的密码修改</span></span><br><span class="line">browser = webdriver.Chrome( chrome_options=option)</span><br><span class="line">browser.get(<span class="string">'http://bbs.06climate.com/forum.php'</span>)</span><br><span class="line">print(browser.title)</span><br><span class="line">browser.maximize_window()</span><br><span class="line"></span><br><span class="line"><span class="comment">#自动填充用户名和密码，勾选自动登录，自动点击登录。</span></span><br><span class="line">elem=browser.find_element_by_id(<span class="string">"ls_username"</span>).send_keys(username)</span><br><span class="line">elem=browser.find_element_by_id(<span class="string">"ls_password"</span>).send_keys(passwd)</span><br><span class="line">elem=browser.find_element_by_id(<span class="string">"ls_cookietime"</span>).click()</span><br><span class="line">browser.find_element_by_xpath(<span class="string">'/html/body/div[5]/div/div[1]/form/div/div[1]/table/tbody/tr[2]/td[3]/button/em'</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#签到</span></span><br><span class="line">browser.find_element_by_xpath(<span class="string">'/html/body/div[5]/div/div[1]/div/p[2]/a[1]/img'</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#点击空间头像</span></span><br><span class="line">browser.find_element_by_xpath(<span class="string">'/html/body/div[5]/div/div[1]/div/div/a/img'</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#访问空间好友</span></span><br><span class="line">browser.find_element_by_xpath(<span class="string">'/html/body/div[6]/div/div/div[3]/div[1]/div[2]/ul/li[1]/a/img'</span>).click()</span><br><span class="line"></span><br><span class="line">browser.find_element_by_xpath(<span class="string">'/html/body/div[6]/div/div/div[3]/div[1]/div[2]/ul/li[2]/a/img'</span>).click()</span><br><span class="line"></span><br><span class="line">browser.find_element_by_xpath(<span class="string">'/html/body/div[6]/div/div/div[3]/div[1]/div[2]/ul/li[3]/a/img'</span>).click()</span><br><span class="line"></span><br><span class="line">browser.find_element_by_xpath(<span class="string">'/html/body/div[6]/div/div/div[3]/div[1]/div[2]/ul/li[4]/a/img'</span>).click()</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(browser.window_handles)</span></span><br><span class="line"><span class="comment">#退出浏览器</span></span><br><span class="line">browser.quit()</span><br><span class="line"><span class="comment">#打印任务时间戳</span></span><br><span class="line">i = datetime.datetime.now()</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"完成时间 %s"</span> % i)</span><br></pre></td></tr></table></figure><blockquote><p>selenium可以通过以下各个方法获取元素并进行各种操作，主要有以下几种：</p></blockquote><blockquote><ul><li>find_element_by_id</li><li>find_element_by_name</li><li>find_element_by_xpath</li><li>find_element_by_link_text</li><li>find_element_by_partial_link_text</li><li>find_element_by_tag_name</li><li>find_element_by_class_name</li><li>find_element_by_css_selector</li></ul></blockquote><p>选取firefox来查看元素会更加直观！！！（强烈推荐，也同样有适用于firefox的驱动,geckodriver,在Mac下需要移动到/usr/local/bin目录下，或者，自定义，也OK！）</p><h3 id="搭配-crontab-使用"><a href="#搭配-crontab-使用" class="headerlink" title="搭配 crontab 使用"></a>搭配 crontab 使用</h3><p>创建sh脚本：<code>click.sh</code></p><p>先找到python：</p><blockquote><p><code>which python</code><br>/Users/zhpfu/anaconda3/bin/python</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/zhpfu/anaconda3/bin/python  /Users/zhpfu/Downloads/Discuz/discuz_click.py</span><br></pre></td></tr></table></figure><p>修改sh脚本权限：<br><code>chmod 777 click.sh</code></p><p>设置自动执行命令：</p><blockquote><p>$<code>crontab e</code></p></blockquote><p>输入：（每隔10小时运行一次）</p><blockquote><p><code>* 10 * * * /bin/sh /Users/zhpfu/Downloads/Discuz/click.sh</code>  # 需要根据自己的路径来修改。</p></blockquote><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>方法比较简单，还不够静默，必须要打开浏览器才行。后面再改进吧！</p><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="http://bbs.06climate.com/forum.php" target="_blank" rel="noopener">1.网址</a><sup>1</sup><br><a href="https://blog.csdn.net/lijun538/article/details/50695914" target="_blank" rel="noopener">2.网址</a><sup>2</sup></p><p><strong><p align="center"><font color="#c8044b" size="2" face="黑体">有任何问题都欢迎交流探讨，共同学习进步！</font></p></strong><br> <img src="/images/my_wechat.jpg" width="150" height="200" alt align="center"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/bbs04.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;利用Python简单的模拟登陆气象家园BBS，提供一种比较容易理解的思路，用于自动签到和访问空间，获取积分。目的不在于鼓励大家不劳而获，而从论坛只拿好处不谈贡献。主要还是简单实践一下，利用已有的工具去做点好玩的事情，解决自己的小麻烦，人非圣贤，也不是机器，毕竟每天签到也还是偶尔会中断的。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术积累" scheme="https://gavin971.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="Python" scheme="https://gavin971.github.io/tags/Python/"/>
    
      <category term="bbs06" scheme="https://gavin971.github.io/tags/bbs06/"/>
    
      <category term="AutoSignIn" scheme="https://gavin971.github.io/tags/AutoSignIn/"/>
    
  </entry>
  
</feed>
